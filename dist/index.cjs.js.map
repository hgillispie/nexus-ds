{"version":3,"file":"index.cjs.js","sources":["../src/stories/Button.tsx","../src/stories/ButtonGroup.tsx","../src/stories/Badge.tsx","../src/stories/BadgeGroup.tsx","../src/stories/Input.tsx","../src/stories/Dropdown.tsx","../src/stories/Select.tsx","../src/stories/Toggle.tsx","../src/stories/Checkbox.tsx","../src/stories/CheckboxGroup.tsx","../src/stories/ProgressBar.tsx","../src/stories/ProgressCircle.tsx","../src/stories/Slider.tsx","../src/stories/Modal.tsx","../src/stories/Chart.tsx","../src/stories/RadarChart.tsx","../src/stories/PieChart.tsx","../src/stories/ActivityChart.tsx","../src/stories/Pagination.tsx","../src/stories/Carousel.tsx","../src/stories/Message.tsx","../src/stories/ChatInterface.tsx","../src/stories/Table.tsx","../src/stories/Typography.tsx","../src/stories/Text.tsx","../src/stories/Avatar.tsx","../src/stories/iconPaths.ts","../src/stories/Icons.tsx","../src/stories/Flex.tsx","../src/stories/Navigation.tsx","../src/stories/Card.tsx","../src/stories/Container.tsx","../src/stories/PageLayout.tsx","../src/stories/Sidebar.tsx","../src/stories/theme.ts","../src/stories/Grid.tsx","../src/stories/SimpleGrid.tsx"],"sourcesContent":["import React from 'react';\nimport './button.css';\n\nexport interface ButtonProps {\n  /**\n   * Size of the button\n   */\n  size?: 'sm' | 'md' | 'lg';\n\n  /**\n   * Visual hierarchy of the button (legacy)\n   */\n  hierarchy?: 'primary' | 'secondary-color' | 'secondary-gray';\n\n  /**\n   * Button variant (modern interface)\n   */\n  variant?: 'primary' | 'outline' | 'subtle' | 'filled';\n\n  /**\n   * Icon configuration for the button\n   */\n  icon?: 'none' | 'trailing' | 'only';\n\n  /**\n   * Whether this is a destructive action\n   */\n  destructive?: boolean;\n\n  /**\n   * Button state (controlled externally for demonstration)\n   */\n  state?: 'default' | 'hover' | 'focused' | 'disabled';\n\n  /**\n   * Button text content\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Disabled state\n   */\n  disabled?: boolean;\n\n  /**\n   * Click handler\n   */\n  onClick?: () => void;\n\n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n\n  /**\n   * Full width button\n   */\n  fullWidth?: boolean;\n\n  /**\n   * Additional styles\n   */\n  style?: React.CSSProperties;\n}\n\n/**\n * Circle icon component used in button examples\n */\nconst CircleIcon: React.FC<{ stroke: string }> = ({ stroke }) => (\n  <svg \n    width=\"20\" \n    height=\"20\" \n    viewBox=\"0 0 20 20\" \n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_8677_116)\">\n      <path \n        d=\"M9.99984 18.3334C14.6022 18.3334 18.3332 14.6024 18.3332 10C18.3332 5.39765 14.6022 1.66669 9.99984 1.66669C5.39746 1.66669 1.6665 5.39765 1.6665 10C1.6665 14.6024 5.39746 18.3334 9.99984 18.3334Z\" \n        stroke={stroke} \n        strokeWidth=\"1.67\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_8677_116\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\n/**\n * Primary UI component for user interaction\n */\nexport const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(({\n  size = 'md',\n  hierarchy,\n  variant = 'primary',\n  icon = 'none',\n  destructive = false,\n  state = 'default',\n  children = 'Button CTA',\n  disabled = false,\n  onClick,\n  className,\n  fullWidth = false,\n  style,\n  ...props\n}, ref) => {\n  // Map variant to hierarchy for backward compatibility\n  const getHierarchy = () => {\n    if (hierarchy) return hierarchy; // Use hierarchy if explicitly provided\n\n    switch (variant) {\n      case 'outline':\n        return 'secondary-color';\n      case 'subtle':\n        return 'secondary-gray';\n      case 'filled':\n      case 'primary':\n      default:\n        return 'primary';\n    }\n  };\n\n  // Build CSS classes based on props\n  const baseClasses = 'nexus-button';\n  const sizeClass = `nexus-button--${size}`;\n  const hierarchyClass = `nexus-button--${getHierarchy()}`;\n  const iconClass = `nexus-button--icon-${icon}`;\n  const destructiveClass = destructive ? 'nexus-button--destructive' : '';\n  const stateClass = state !== 'default' ? `nexus-button--${state}` : '';\n  const fullWidthClass = fullWidth ? 'nexus-button--full-width' : '';\n  \n  const classes = [\n    baseClasses,\n    sizeClass,\n    hierarchyClass,\n    iconClass,\n    destructiveClass,\n    stateClass,\n    fullWidthClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Determine icon color based on hierarchy and destructive state\n  const getIconColor = () => {\n    if (disabled || state === 'disabled') {\n      if (hierarchy === 'primary') return '#FFF';\n      if (hierarchy === 'secondary-color') return destructive ? '#67E8F9' : '#94A3B8';\n      if (hierarchy === 'secondary-gray') return '#D5D7DA';\n    }\n    \n    if (hierarchy === 'primary') return '#FFF';\n    if (hierarchy === 'secondary-color') return destructive ? '#0891B2' : '#0C1427';\n    if (hierarchy === 'secondary-gray') return destructive ? '#0891B2' : '#414651';\n    \n    return '#FFF';\n  };\n\n  const iconColor = getIconColor();\n  const isIconOnly = icon === 'only';\n  const hasIcon = icon === 'trailing' || icon === 'only';\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      className={classes}\n      disabled={disabled || state === 'disabled'}\n      onClick={onClick}\n      style={style}\n      {...props}\n    >\n      {!isIconOnly && (\n        <span className=\"nexus-button__text\">\n          {children}\n        </span>\n      )}\n      {hasIcon && (\n        <CircleIcon stroke={iconColor} />\n      )}\n    </button>\n  );\n});\n\nButton.displayName = 'Button';\n","import React from 'react';\nimport './buttongroup.css';\n\nexport interface ButtonGroupItem {\n  /**\n   * The content of the button\n   */\n  children: React.ReactNode;\n  \n  /**\n   * Whether this button is currently selected/active\n   */\n  current?: boolean;\n  \n  /**\n   * Click handler for this button\n   */\n  onClick?: () => void;\n  \n  /**\n   * Optional ID for the button\n   */\n  id?: string;\n}\n\nexport interface ButtonGroupProps {\n  /**\n   * Icon configuration for the button group\n   */\n  icon?: 'false' | 'leading' | 'only';\n  \n  /**\n   * Array of button items to render\n   */\n  items: ButtonGroupItem[];\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n}\n\n/**\n * Circle icon component used in button group with leading icons\n */\nconst CircleIcon: React.FC = () => (\n  <svg \n    width=\"20\" \n    height=\"20\" \n    viewBox=\"0 0 20 20\" \n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0_8678_3350)\">\n      <path \n        d=\"M10.0001 18.3334C14.6025 18.3334 18.3334 14.6024 18.3334 10C18.3334 5.39765 14.6025 1.66669 10.0001 1.66669C5.39771 1.66669 1.66675 5.39765 1.66675 10C1.66675 14.6024 5.39771 18.3334 10.0001 18.3334Z\" \n        stroke=\"#717680\" \n        strokeWidth=\"1.67\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_8678_3350\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\n/**\n * Arrow Left icon component\n */\nconst ArrowLeftIcon: React.FC = () => (\n  <svg \n    width=\"20\" \n    height=\"20\" \n    viewBox=\"0 0 20 20\" \n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n      d=\"M15.8334 10H4.16675M4.16675 10L10.0001 15.8334M4.16675 10L10.0001 4.16669\" \n      stroke=\"#717680\" \n      strokeWidth=\"1.67\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Plus icon component\n */\nconst PlusIcon: React.FC = () => (\n  <svg \n    width=\"20\" \n    height=\"20\" \n    viewBox=\"0 0 20 20\" \n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n      d=\"M10.0001 4.16669V15.8334M4.16675 10H15.8334\" \n      stroke=\"#717680\" \n      strokeWidth=\"1.67\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Arrow Right icon component\n */\nconst ArrowRightIcon: React.FC = () => (\n  <svg \n    width=\"20\" \n    height=\"20\" \n    viewBox=\"0 0 20 20\" \n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path \n      d=\"M4.16675 10H15.8334M15.8334 10L10.0001 4.16669M15.8334 10L10.0001 15.8334\" \n      stroke=\"#717680\" \n      strokeWidth=\"1.67\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Button Group component for grouping related actions\n */\nexport const ButtonGroup = React.forwardRef<HTMLDivElement, ButtonGroupProps>(({\n  icon = 'false',\n  items,\n  className,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-button-group';\n  const iconClass = `nexus-button-group--icon-${icon}`;\n  \n  const classes = [\n    baseClasses,\n    iconClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Define default icons for icon-only variant\n  const defaultIcons = [ArrowLeftIcon, PlusIcon, ArrowRightIcon];\n\n  return (\n    <div\n      ref={ref}\n      className={classes}\n      role=\"group\"\n      {...props}\n    >\n      {items.map((item, index) => {\n        const isLast = index === items.length - 1;\n        const buttonClasses = [\n          'nexus-button-group__item',\n          item.current ? 'nexus-button-group__item--current' : '',\n          isLast ? 'nexus-button-group__item--last' : ''\n        ].filter(Boolean).join(' ');\n\n        return (\n          <button\n            key={item.id || index}\n            type=\"button\"\n            className={buttonClasses}\n            onClick={item.onClick}\n          >\n            {icon === 'leading' && <CircleIcon />}\n            {icon === 'only' ? (\n              React.createElement(defaultIcons[index % defaultIcons.length])\n            ) : (\n              <span className=\"nexus-button-group__text\">\n                {item.children}\n              </span>\n            )}\n          </button>\n        );\n      })}\n    </div>\n  );\n});\n\nButtonGroup.displayName = 'ButtonGroup';\n","import React from 'react';\nimport './badge.css';\n\nexport interface BadgeProps {\n  /**\n   * The content to display inside the badge\n   */\n  children: React.ReactNode;\n\n  /**\n   * Badge size variant\n   */\n  size?: 'sm' | 'md';\n\n  /**\n   * Badge color theme\n   */\n  color?: 'primary' | 'gray' | 'error' | 'warning' | 'success';\n\n  /**\n   * Badge variant\n   */\n  variant?: 'filled' | 'light' | 'outline';\n\n  /**\n   * Whether to show an icon and its position\n   */\n  icon?: 'none' | 'trailing';\n\n  /**\n   * Margin bottom\n   */\n  mb?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | string;\n\n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n\n  /**\n   * Additional styles\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Click handler for interactive badges\n   */\n  onClick?: () => void;\n}\n\n/**\n * Arrow Right Icon component used in badges\n */\nconst ArrowRightIcon: React.FC<{ size: 'sm' | 'md' }> = ({ size }) => {\n  const iconSize = size === 'sm' ? '12' : '12'; // Both use 12px as per design\n  \n  return (\n    <svg \n      width={iconSize} \n      height={iconSize} \n      viewBox=\"0 0 12 12\" \n      fill=\"none\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"nexus-badge__icon\"\n    >\n      <path \n        d=\"M2.5 6H9.5M9.5 6L6 2.5M9.5 6L6 9.5\" \n        stroke=\"currentColor\" \n        strokeWidth=\"1.5\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\n/**\n * Badge component for status indicators and labels\n */\nconst spacingMap = {\n  xs: '4px',\n  sm: '8px',\n  md: '16px',\n  lg: '24px',\n  xl: '32px',\n};\n\nexport const Badge = React.forwardRef<HTMLSpanElement, BadgeProps>(({\n  children,\n  size = 'sm',\n  color = 'primary',\n  variant = 'filled',\n  icon = 'none',\n  mb,\n  className,\n  style,\n  onClick,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-badge';\n  const sizeClass = `nexus-badge--size-${size}`;\n\n  // Calculate margin bottom\n  const marginBottom = mb ? (typeof mb === 'string' && spacingMap[mb as keyof typeof spacingMap] ? spacingMap[mb as keyof typeof spacingMap] : mb) : undefined;\n\n  // Combine styles\n  const badgeStyle: React.CSSProperties = {\n    marginBottom,\n    ...style,\n  };\n  const colorClass = `nexus-badge--color-${color}`;\n  const iconClass = icon !== 'none' ? `nexus-badge--icon-${icon}` : '';\n  const interactiveClass = onClick ? 'nexus-badge--interactive' : '';\n  \n  const classes = [\n    baseClasses,\n    sizeClass,\n    colorClass,\n    iconClass,\n    interactiveClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  const Component = onClick ? 'button' : 'span';\n\n  return (\n    <Component\n      ref={ref as any}\n      className={classes}\n      style={badgeStyle}\n      onClick={onClick}\n      type={onClick ? 'button' : undefined}\n      {...props}\n    >\n      <span className=\"nexus-badge__text\">\n        {children}\n      </span>\n      {icon === 'trailing' && <ArrowRightIcon size={size} />}\n    </Component>\n  );\n});\n\nBadge.displayName = 'Badge';\n","import React from 'react';\nimport { Badge, BadgeProps } from './Badge';\nimport './badgegroup.css';\n\nexport interface BadgeGroupProps {\n  /**\n   * The main message text to display\n   */\n  message: React.ReactNode;\n  \n  /**\n   * Badge configuration\n   */\n  badge: {\n    /**\n     * Badge content\n     */\n    children: React.ReactNode;\n    \n    /**\n     * Badge color theme\n     */\n    color?: BadgeProps['color'];\n    \n    /**\n     * Whether the badge has an icon\n     */\n    hasIcon?: boolean;\n  };\n  \n  /**\n   * Position of the badge relative to the message\n   */\n  badgePosition?: 'leading' | 'trailing';\n  \n  /**\n   * Size variant affecting both badge and message\n   */\n  size?: 'md' | 'lg';\n  \n  /**\n   * Whether to show an arrow icon after the message (for leading badge groups)\n   */\n  showMessageIcon?: boolean;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * Click handler for interactive badge groups\n   */\n  onClick?: () => void;\n}\n\n/**\n * Arrow Right Icon component for message content\n */\nconst MessageArrowIcon: React.FC = () => (\n  <svg \n    width=\"16\" \n    height=\"16\" \n    viewBox=\"0 0 16 16\" \n    fill=\"none\" \n    xmlns=\"http://www.w3.org/2000/svg\"\n    className=\"nexus-badge-group__message-icon\"\n  >\n    <path \n      d=\"M3.33333 8.00001H12.6667M12.6667 8.00001L8 3.33334M12.6667 8.00001L8 12.6667\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.3333\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Badge Group component that combines a badge with message text\n */\nexport const BadgeGroup = React.forwardRef<HTMLDivElement, BadgeGroupProps>(({\n  message,\n  badge,\n  badgePosition = 'leading',\n  size = 'md',\n  showMessageIcon = false,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-badge-group';\n  const positionClass = `nexus-badge-group--${badgePosition}`;\n  const sizeClass = `nexus-badge-group--size-${size}`;\n  const interactiveClass = onClick ? 'nexus-badge-group--interactive' : '';\n  \n  const classes = [\n    baseClasses,\n    positionClass,\n    sizeClass,\n    interactiveClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Determine badge size based on BadgeGroup size\n  const badgeSize = size === 'lg' ? 'md' : 'sm';\n  \n  // Determine if badge should have trailing icon\n  const badgeIcon = badge.hasIcon ? 'trailing' : 'none';\n\n  const badgeElement = (\n    <Badge\n      size={badgeSize}\n      color={badge.color}\n      icon={badgeIcon}\n      onClick={onClick}\n    >\n      {badge.children}\n    </Badge>\n  );\n\n  const messageElement = (\n    <div className=\"nexus-badge-group__message\">\n      <span className=\"nexus-badge-group__message-text\">\n        {message}\n      </span>\n      {showMessageIcon && <MessageArrowIcon />}\n    </div>\n  );\n\n  const messageWithIcon = showMessageIcon ? (\n    <div className=\"nexus-badge-group__content\">\n      {messageElement}\n    </div>\n  ) : messageElement;\n\n  return (\n    <div\n      ref={ref}\n      className={classes}\n      onClick={onClick}\n      role={onClick ? 'button' : undefined}\n      tabIndex={onClick ? 0 : undefined}\n      {...props}\n    >\n      {badgePosition === 'leading' ? (\n        <>\n          {badgeElement}\n          {showMessageIcon ? messageWithIcon : messageElement}\n        </>\n      ) : (\n        <>\n          {messageElement}\n          {badgeElement}\n        </>\n      )}\n    </div>\n  );\n});\n\nBadgeGroup.displayName = 'BadgeGroup';\n","import React from 'react';\nimport './input.css';\n\nexport interface InputProps {\n  /**\n   * Type of input field\n   */\n  type?: 'default' | 'payment' | 'leading-dropdown' | 'trailing-dropdown' | 'leading-text';\n  \n  /**\n   * Whether this is an error state\n   */\n  error?: boolean;\n  \n  /**\n   * Label text for the input\n   */\n  label?: string;\n  \n  /**\n   * Placeholder text\n   */\n  placeholder?: string;\n  \n  /**\n   * Input value\n   */\n  value?: string;\n  \n  /**\n   * Help/hint text below the input\n   */\n  helpText?: string;\n  \n  /**\n   * Whether to show the help icon\n   */\n  showHelpIcon?: boolean;\n  \n  /**\n   * Leading text for leading-text type (e.g., \"http://\")\n   */\n  leadingText?: string;\n  \n  /**\n   * Dropdown value for dropdown types\n   */\n  dropdownValue?: string;\n  \n  /**\n   * Dropdown options for dropdown types\n   */\n  dropdownOptions?: string[];\n  \n  /**\n   * Icon to display (for default and payment types)\n   */\n  icon?: React.ReactNode;\n  \n  /**\n   * Whether the input is disabled\n   */\n  disabled?: boolean;\n  \n  /**\n   * Input change handler\n   */\n  onChange?: (value: string) => void;\n  \n  /**\n   * Dropdown change handler\n   */\n  onDropdownChange?: (value: string) => void;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n}\n\nexport interface TextareaProps {\n  /**\n   * Whether this is an error state\n   */\n  error?: boolean;\n  \n  /**\n   * Label text for the textarea\n   */\n  label?: string;\n  \n  /**\n   * Placeholder text\n   */\n  placeholder?: string;\n  \n  /**\n   * Textarea value\n   */\n  value?: string;\n  \n  /**\n   * Help/hint text below the textarea\n   */\n  helpText?: string;\n  \n  /**\n   * Number of rows\n   */\n  rows?: number;\n  \n  /**\n   * Whether the textarea is disabled\n   */\n  disabled?: boolean;\n  \n  /**\n   * Textarea change handler\n   */\n  onChange?: (value: string) => void;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n}\n\n/**\n * Mail icon component\n */\nconst MailIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M18.3333 4.99998C18.3333 4.08331 17.5833 3.33331 16.6667 3.33331H3.33333C2.41666 3.33331 1.66666 4.08331 1.66666 4.99998M18.3333 4.99998V15C18.3333 15.9166 17.5833 16.6666 16.6667 16.6666H3.33333C2.41666 16.6666 1.66666 15.9166 1.66666 15V4.99998M18.3333 4.99998L10 10.8333L1.66666 4.99998\" \n      stroke=\"#717680\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Help icon component\n */\nconst HelpIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_8677_842)\">\n      <path \n        d=\"M6.06001 5.99998C6.21675 5.55442 6.52611 5.17872 6.93331 4.9394C7.34052 4.70009 7.81927 4.61261 8.28479 4.69245C8.75032 4.7723 9.17255 5.01433 9.47673 5.37567C9.7809 5.737 9.94738 6.19433 9.94668 6.66665C9.94668 7.99998 7.94668 8.66665 7.94668 8.66665M8.00001 11.3333H8.00668M14.6667 7.99998C14.6667 11.6819 11.6819 14.6666 8.00001 14.6666C4.31811 14.6666 1.33334 11.6819 1.33334 7.99998C1.33334 4.31808 4.31811 1.33331 8.00001 1.33331C11.6819 1.33331 14.6667 4.31808 14.6667 7.99998Z\" \n        stroke=\"#A4A7AE\" \n        strokeWidth=\"1.33333\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_8677_842\">\n        <rect width=\"16\" height=\"16\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\n/**\n * Alert icon component\n */\nconst AlertIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_1094_4748)\">\n      <path \n        d=\"M8.00001 5.33331V7.99998M8.00001 10.6666H8.00668M14.6667 7.99998C14.6667 11.6819 11.6819 14.6666 8.00001 14.6666C4.31811 14.6666 1.33334 11.6819 1.33334 7.99998C1.33334 4.31808 4.31811 1.33331 8.00001 1.33331C11.6819 1.33331 14.6667 4.31808 14.6667 7.99998Z\" \n        stroke=\"#0EA5E9\" \n        strokeWidth=\"1.33333\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_1094_4748\">\n        <rect width=\"16\" height=\"16\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\n/**\n * Chevron down icon component\n */\nconst ChevronDownIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M5 7.5L10 12.5L15 7.5\" \n      stroke=\"#717680\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Mastercard payment icon component\n */\nconst MastercardIcon: React.FC = () => (\n  <div className=\"nexus-input__payment-icon\">\n    <svg width=\"22\" height=\"13\" viewBox=\"0 0 23 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path \n        fillRule=\"evenodd\" \n        clipRule=\"evenodd\" \n        d=\"M11.179 11.8294C9.99493 12.8275 8.45902 13.43 6.78069 13.43C3.03582 13.43 0 10.4303 0 6.72997C0 3.02966 3.03582 0.0299683 6.78069 0.0299683C8.45902 0.0299683 9.99493 0.632466 11.179 1.63051C12.363 0.632466 13.8989 0.0299683 15.5773 0.0299683C19.3221 0.0299683 22.358 3.02966 22.358 6.72997C22.358 10.4303 19.3221 13.43 15.5773 13.43C13.8989 13.43 12.363 12.8275 11.179 11.8294Z\" \n        fill=\"#ED0006\"\n      />\n    </svg>\n    <svg width=\"11\" height=\"13\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path \n        fillRule=\"evenodd\" \n        clipRule=\"evenodd\" \n        d=\"M0.178955 11.8294C1.63689 10.6005 2.56136 8.77192 2.56136 6.72997C2.56136 4.68801 1.63689 2.85941 0.178955 1.63051C1.363 0.632465 2.89891 0.0299683 4.57724 0.0299683C8.32211 0.0299683 11.3579 3.02966 11.3579 6.72997C11.3579 10.4303 8.32211 13.43 4.57724 13.43C2.89891 13.43 1.363 12.8275 0.178955 11.8294Z\" \n        fill=\"#F9A000\"\n      />\n    </svg>\n    <svg width=\"5\" height=\"10\" viewBox=\"0 0 6 11\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path \n        fillRule=\"evenodd\" \n        clipRule=\"evenodd\" \n        d=\"M3.17901 10.8294C4.63693 9.60052 5.56139 7.77193 5.56139 5.72999C5.56139 3.68805 4.63693 1.85946 3.17901 0.630554C1.72109 1.85946 0.796631 3.68805 0.796631 5.72999C0.796631 7.77193 1.72109 9.60052 3.17901 10.8294Z\" \n        fill=\"#FF5E00\"\n      />\n    </svg>\n  </div>\n);\n\n/**\n * Input field component with multiple variants\n */\nexport const Input = React.forwardRef<HTMLInputElement, InputProps>(({\n  type = 'default',\n  error = false,\n  label,\n  placeholder,\n  value,\n  helpText,\n  showHelpIcon = true,\n  leadingText,\n  dropdownValue,\n  dropdownOptions = [],\n  icon,\n  disabled = false,\n  onChange,\n  onDropdownChange,\n  className,\n  ...props\n}, ref) => {\n  // Build CSS classes\n  const containerClasses = [\n    'nexus-input-container',\n    className\n  ].filter(Boolean).join(' ');\n\n  const inputClasses = [\n    'nexus-input',\n    `nexus-input--${type}`,\n    error ? 'nexus-input--error' : '',\n    disabled ? 'nexus-input--disabled' : ''\n  ].filter(Boolean).join(' ');\n\n  const helpTextClasses = [\n    'nexus-input__help-text',\n    error ? 'nexus-input__help-text--error' : ''\n  ].filter(Boolean).join(' ');\n\n  // Default icons for different input types\n  const getDefaultIcon = () => {\n    switch (type) {\n      case 'default':\n        return <MailIcon />;\n      case 'payment':\n        return <MastercardIcon />;\n      default:\n        return null;\n    }\n  };\n\n  const displayIcon = icon || getDefaultIcon();\n\n  return (\n    <div className={containerClasses}>\n      {label && (\n        <label className=\"nexus-input__label\">\n          {label}\n        </label>\n      )}\n      \n      <div className={inputClasses}>\n        {/* Leading dropdown */}\n        {type === 'leading-dropdown' && (\n          <div className=\"nexus-input__dropdown nexus-input__dropdown--leading\">\n            <span className=\"nexus-input__dropdown-text\">{dropdownValue || 'US'}</span>\n            <ChevronDownIcon />\n          </div>\n        )}\n        \n        {/* Leading text */}\n        {type === 'leading-text' && (\n          <div className=\"nexus-input__leading-text\">\n            {leadingText || 'http://'}\n          </div>\n        )}\n        \n        {/* Main input content */}\n        <div className=\"nexus-input__content\">\n          {displayIcon && type !== 'trailing-dropdown' && (\n            <span className=\"nexus-input__icon\">\n              {displayIcon}\n            </span>\n          )}\n          \n          {type === 'trailing-dropdown' && (\n            <span className=\"nexus-input__currency\">$</span>\n          )}\n          \n          <input\n            ref={ref}\n            type=\"text\"\n            placeholder={placeholder}\n            value={value}\n            disabled={disabled}\n            onChange={(e) => onChange?.(e.target.value)}\n            className=\"nexus-input__field\"\n            {...props}\n          />\n          \n          {error ? (\n            <span className=\"nexus-input__alert\">\n              <AlertIcon />\n            </span>\n          ) : (\n            showHelpIcon && type !== 'leading-dropdown' && type !== 'trailing-dropdown' && (\n              <span className=\"nexus-input__help-icon\">\n                <HelpIcon />\n              </span>\n            )\n          )}\n        </div>\n        \n        {/* Trailing dropdown */}\n        {type === 'trailing-dropdown' && (\n          <div className=\"nexus-input__dropdown nexus-input__dropdown--trailing\">\n            <span className=\"nexus-input__dropdown-text\">{dropdownValue || 'USD'}</span>\n            <ChevronDownIcon />\n          </div>\n        )}\n      </div>\n      \n      {helpText && (\n        <p className={helpTextClasses}>\n          {helpText}\n        </p>\n      )}\n    </div>\n  );\n});\n\nInput.displayName = 'Input';\n\n/**\n * Textarea component\n */\nexport const Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({\n  error = false,\n  label,\n  placeholder = 'Enter a description...',\n  value,\n  helpText = 'This is a hint text to help user.',\n  rows = 4,\n  disabled = false,\n  onChange,\n  className,\n  ...props\n}, ref) => {\n  const containerClasses = [\n    'nexus-textarea-container',\n    className\n  ].filter(Boolean).join(' ');\n\n  const textareaClasses = [\n    'nexus-textarea',\n    error ? 'nexus-textarea--error' : '',\n    disabled ? 'nexus-textarea--disabled' : ''\n  ].filter(Boolean).join(' ');\n\n  const helpTextClasses = [\n    'nexus-textarea__help-text',\n    error ? 'nexus-textarea__help-text--error' : ''\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClasses}>\n      {label && (\n        <label className=\"nexus-textarea__label\">\n          {label}\n        </label>\n      )}\n      \n      <div className={textareaClasses}>\n        <textarea\n          ref={ref}\n          placeholder={placeholder}\n          value={value}\n          rows={rows}\n          disabled={disabled}\n          onChange={(e) => onChange?.(e.target.value)}\n          className=\"nexus-textarea__field\"\n          {...props}\n        />\n      </div>\n      \n      {helpText && (\n        <p className={helpTextClasses}>\n          {helpText}\n        </p>\n      )}\n    </div>\n  );\n});\n\nTextarea.displayName = 'Textarea';\n","import React from 'react';\nimport './dropdown.css';\n\nexport interface DropdownHeaderProps {\n  /**\n   * Type of header - either 'avatar' for user profile or 'text' for simple header\n   */\n  type: 'avatar' | 'text';\n\n  /**\n   * Header text content\n   */\n  title: string;\n\n  /**\n   * Subtitle text (only used with avatar type)\n   */\n  subtitle?: string;\n\n  /**\n   * Avatar image URL (only used with avatar type)\n   */\n  avatarSrc?: string;\n\n  /**\n   * Avatar alt text (only used with avatar type)\n   */\n  avatarAlt?: string;\n\n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n}\n\nexport interface DropdownItemProps {\n  /**\n   * The content to display in the dropdown item\n   */\n  children: React.ReactNode;\n\n  /**\n   * Optional icon to display before the text\n   */\n  icon?: React.ReactNode;\n\n  /**\n   * Optional keyboard shortcut text\n   */\n  shortcut?: string;\n\n  /**\n   * Whether this item is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Click handler for the dropdown item\n   */\n  onClick?: () => void;\n\n  /**\n   * Whether this item is currently selected/active\n   */\n  active?: boolean;\n\n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n}\n\n/**\n * Dropdown header component\n */\nexport const DropdownHeader = React.forwardRef<HTMLDivElement, DropdownHeaderProps>(({\n  type,\n  title,\n  subtitle,\n  avatarSrc,\n  avatarAlt,\n  className,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-dropdown-header';\n  const typeClass = `nexus-dropdown-header--${type}`;\n\n  const classes = [\n    baseClasses,\n    typeClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  if (type === 'avatar') {\n    return (\n      <div\n        ref={ref}\n        className={classes}\n        {...props}\n      >\n        <div className=\"nexus-dropdown-header__avatar-group\">\n          <div className=\"nexus-dropdown-header__avatar\">\n            <img\n              src={avatarSrc || 'https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facepad&facepad=2&w=256&h=256&q=80'}\n              alt={avatarAlt || 'User avatar'}\n              className=\"nexus-dropdown-header__avatar-image\"\n            />\n          </div>\n          <div className=\"nexus-dropdown-header__text-group\">\n            <div className=\"nexus-dropdown-header__title\">\n              {title}\n            </div>\n            {subtitle && (\n              <div className=\"nexus-dropdown-header__subtitle\">\n                {subtitle}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={classes}\n      {...props}\n    >\n      <div className=\"nexus-dropdown-header__title\">\n        {title}\n      </div>\n    </div>\n  );\n});\n\nDropdownHeader.displayName = 'DropdownHeader';\n\n/**\n * Individual dropdown item component\n */\nexport const DropdownItem = React.forwardRef<HTMLButtonElement, DropdownItemProps>(({\n  children,\n  icon,\n  shortcut,\n  disabled = false,\n  onClick,\n  active = false,\n  className,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-dropdown-item';\n  const activeClass = active ? 'nexus-dropdown-item--active' : '';\n  const disabledClass = disabled ? 'nexus-dropdown-item--disabled' : '';\n  \n  const classes = [\n    baseClasses,\n    activeClass,\n    disabledClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      className={classes}\n      onClick={onClick}\n      disabled={disabled}\n      {...props}\n    >\n      <div className=\"nexus-dropdown-item__content\">\n        {icon && (\n          <span className=\"nexus-dropdown-item__icon\">\n            {icon}\n          </span>\n        )}\n        <span className=\"nexus-dropdown-item__text\">\n          {children}\n        </span>\n      </div>\n      {shortcut && (\n        <span className=\"nexus-dropdown-item__shortcut\">\n          {shortcut}\n        </span>\n      )}\n    </button>\n  );\n});\n\nDropdownItem.displayName = 'DropdownItem';\n\nexport interface DropdownProps {\n  /**\n   * Array of dropdown items or custom content\n   */\n  children: React.ReactNode;\n  \n  /**\n   * Whether the dropdown is open/visible\n   */\n  isOpen?: boolean;\n  \n  /**\n   * Function called when dropdown should close\n   */\n  onClose?: () => void;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * Custom width for the dropdown\n   */\n  width?: number | string;\n}\n\n/**\n * User icon component used in dropdown examples\n */\nconst UserIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M13.3334 14V12.6667C13.3334 11.9594 13.0524 11.2811 12.5523 10.781C12.0522 10.281 11.3739 10 10.6667 10H5.33335C4.62611 10 3.94783 10.281 3.44774 10.781C2.94764 11.2811 2.66669 11.9594 2.66669 12.6667V14M10.6667 4.66667C10.6667 6.13943 9.47278 7.33333 8.00002 7.33333C6.52726 7.33333 5.33335 6.13943 5.33335 4.66667C5.33335 3.19391 6.52726 2 8.00002 2C9.47278 2 10.6667 3.19391 10.6667 4.66667Z\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.5\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Settings icon component\n */\nconst SettingsIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_settings)\">\n      <path \n        d=\"M8.00002 10C9.10459 10 10 9.10459 10 8.00002C10 6.89545 9.10459 6.00002 8.00002 6.00002C6.89545 6.00002 6.00002 6.89545 6.00002 8.00002C6.00002 9.10459 6.89545 10 8.00002 10Z\" \n        stroke=\"currentColor\" \n        strokeWidth=\"1.5\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n      <path \n        d=\"M12.9334 10C12.8446 10.2011 12.8181 10.4241 12.8573 10.6404C12.8966 10.8567 12.9997 11.0562 13.1534 11.2134L13.1934 11.2534C13.3173 11.3772 13.4157 11.5242 13.4828 11.6861C13.5499 11.848 13.5844 12.0215 13.5844 12.1967C13.5844 12.3719 13.5499 12.5454 13.4828 12.7073C13.4157 12.8691 13.3173 13.0162 13.1934 13.14C13.0695 13.264 12.9225 13.3623 12.7606 13.4294C12.5987 13.4965 12.4252 13.5311 12.25 13.5311C12.0748 13.5311 11.9013 13.4965 11.7394 13.4294C11.5776 13.3623 11.4305 13.264 11.3067 13.14L11.2667 13.1C11.1096 12.9463 10.91 12.8432 10.6937 12.804C10.4775 12.7648 10.2544 12.7913 10.0534 12.88C9.85617 12.9645 9.68801 13.1048 9.56956 13.2837C9.45111 13.4626 9.38754 13.6722 9.38669 13.8867V14C9.38669 14.3536 9.24621 14.6928 8.99616 14.9428C8.74611 15.1929 8.40698 15.3334 8.05335 15.3334C7.69973 15.3334 7.36059 15.1929 7.11054 14.9428C6.8605 14.6928 6.72002 14.3536 6.72002 14V13.94C6.71486 13.7194 6.64343 13.5053 6.51503 13.3258C6.38662 13.1463 6.20718 13.0095 6.00002 12.9334C5.79894 12.8446 5.57589 12.8181 5.35963 12.8573C5.14336 12.8966 4.94381 12.9997 4.78669 13.1534L4.74669 13.1934C4.62286 13.3173 4.4758 13.4157 4.31394 13.4828C4.15208 13.5499 3.97857 13.5844 3.80335 13.5844C3.62813 13.5844 3.45463 13.5499 3.29277 13.4828C3.1309 13.4157 2.98385 13.3173 2.86002 13.1934C2.73605 13.0695 2.63771 12.9225 2.57061 12.7606C2.50351 12.5987 2.46897 12.4252 2.46897 12.25C2.46897 12.0748 2.50351 11.9013 2.57061 11.7394C2.63771 11.5776 2.73605 11.4305 2.86002 11.3067L2.90002 11.2667C3.05371 11.1096 3.15681 10.91 3.19602 10.6937C3.23524 10.4775 3.20876 10.2544 3.12002 10.0534C3.03551 9.85617 2.89519 9.68801 2.71633 9.56956C2.53747 9.45111 2.32788 9.38754 2.11335 9.38669H2.00002C1.6464 9.38669 1.30726 9.24621 1.05721 8.99616C0.807163 8.74611 0.666687 8.40698 0.666687 8.05335C0.666687 7.69973 0.807163 7.36059 1.05721 7.11054C1.30726 6.8605 1.6464 6.72002 2.00002 6.72002H2.06002C2.28068 6.71486 2.49469 6.64343 2.67422 6.51503C2.85375 6.38662 2.9905 6.20718 3.06669 6.00002C3.15543 5.79894 3.1819 5.57589 3.14269 5.35963C3.10348 5.14336 3.00038 4.94381 2.84669 4.78669L2.80669 4.74669C2.68272 4.62286 2.58437 4.4758 2.51727 4.31394C2.45017 4.15208 2.41564 3.97857 2.41564 3.80335C2.41564 3.62813 2.45017 3.45463 2.51727 3.29277C2.58437 3.1309 2.68272 2.98385 2.80669 2.86002C2.93052 2.73605 3.07757 2.63771 3.23943 2.57061C3.4013 2.50351 3.5748 2.46897 3.75002 2.46897C3.92524 2.46897 4.09874 2.50351 4.26061 2.57061C4.42247 2.63771 4.56952 2.73605 4.69335 2.86002L4.73335 2.90002C4.89047 3.05371 5.09003 3.15681 5.30629 3.19602C5.52256 3.23524 5.74561 3.20876 5.94669 3.12002H6.00002C6.1972 3.03551 6.36536 2.89519 6.48382 2.71633C6.60227 2.53747 6.66583 2.32788 6.66669 2.11335V2.00002C6.66669 1.6464 6.80716 1.30726 7.05721 1.05721C7.30726 0.807163 7.6464 0.666687 8.00002 0.666687C8.35364 0.666687 8.69278 0.807163 8.94283 1.05721C9.19288 1.30726 9.33335 1.6464 9.33335 2.00002V2.06002C9.33421 2.27454 9.39777 2.48414 9.51622 2.663C9.63468 2.84186 9.80284 2.98218 10 3.06669C10.2011 3.15543 10.4241 3.1819 10.6404 3.14269C10.8567 3.10348 11.0562 3.00038 11.2134 2.84669L11.2534 2.80669C11.3772 2.68272 11.5242 2.58437 11.6861 2.51727C11.848 2.45017 12.0215 2.41564 12.1967 2.41564C12.3719 2.41564 12.5454 2.45017 12.7073 2.51727C12.8691 2.58437 13.0162 2.68272 13.14 2.80669C13.264 2.93052 13.3623 3.07757 13.4294 3.23943C13.4965 3.4013 13.5311 3.5748 13.5311 3.75002C13.5311 3.92524 13.4965 4.09874 13.4294 4.26061C13.3623 4.42247 13.264 4.56952 13.14 4.69335L13.1 4.73335C12.9463 4.89047 12.8432 5.09003 12.804 5.30629C12.7648 5.52256 12.7913 5.74561 12.88 5.94669V6.00002C12.9645 6.1972 13.1048 6.36536 13.2837 6.48382C13.4626 6.60227 13.6722 6.66583 13.8867 6.66669H14C14.3536 6.66669 14.6928 6.80716 14.9428 7.05721C15.1929 7.30726 15.3334 7.6464 15.3334 8.00002C15.3334 8.35364 15.1929 8.69278 14.9428 8.94283C14.6928 9.19288 14.3536 9.33335 14 9.33335H13.94C13.7255 9.33421 13.5159 9.39777 13.337 9.51622C13.1582 9.63468 13.0179 9.80284 12.9334 10Z\" \n        stroke=\"currentColor\" \n        strokeWidth=\"1.5\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_settings\">\n        <rect width=\"16\" height=\"16\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\n/**\n * Zap/Lightning icon component\n */\nconst ZapIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M8.66667 1.33331L2 9.33331H8L7.33333 14.6666L14 6.66665H8L8.66667 1.33331Z\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.5\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Home icon component\n */\nconst HomeIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M6 14.6666V7.99998H10V14.6666M2 5.99998L8 1.33331L14 5.99998V13.3333C14 13.6869 13.8595 14.0261 13.6095 14.2761C13.3594 14.5262 13.0203 14.6666 12.6667 14.6666H3.33333C2.97971 14.6666 2.64057 14.5262 2.39052 14.2761C2.14048 14.0261 2 13.6869 2 13.3333V5.99998Z\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.5\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Log out icon component\n */\nconst LogOutIcon: React.FC = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M6 14H3.33333C2.97971 14 2.64057 13.8595 2.39052 13.6095C2.14048 13.3594 2 13.0203 2 12.6667V3.33333C2 2.97971 2.14048 2.64057 2.39052 2.39052C2.64057 2.14048 2.97971 2 3.33333 2H6M10.6667 11.3333L14 8M14 8L10.6667 4.66667M14 8H6\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.5\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Dropdown divider component\n */\nexport const DropdownDivider: React.FC = () => (\n  <div className=\"nexus-dropdown-divider\" />\n);\n\n/**\n * Dropdown menu component\n */\nexport const Dropdown = React.forwardRef<HTMLDivElement, DropdownProps>(({\n  children,\n  isOpen = true,\n  onClose,\n  className,\n  width = 240,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-dropdown';\n  const openClass = isOpen ? 'nexus-dropdown--open' : '';\n  \n  const classes = [\n    baseClasses,\n    openClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  const style = {\n    width: typeof width === 'number' ? `${width}px` : width,\n  };\n\n  return (\n    <div\n      ref={ref}\n      className={classes}\n      style={style}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n});\n\nDropdown.displayName = 'Dropdown';\n\n// Export icons for use in stories\nexport { UserIcon, SettingsIcon, ZapIcon, HomeIcon, LogOutIcon };\n","import React, { useState, useRef, useEffect } from 'react';\nimport './select.css';\n\nexport interface SelectOptionProps {\n  /**\n   * The value of the option\n   */\n  value: string | number;\n  \n  /**\n   * The display label for the option\n   */\n  label: string;\n  \n  /**\n   * Optional supporting text\n   */\n  supportingText?: string;\n  \n  /**\n   * Optional icon to display\n   */\n  icon?: React.ReactNode;\n  \n  /**\n   * Whether this option is disabled\n   */\n  disabled?: boolean;\n}\n\nexport interface SelectProps {\n  /**\n   * Array of options to display\n   */\n  options: SelectOptionProps[];\n  \n  /**\n   * Currently selected value\n   */\n  value?: string | number;\n  \n  /**\n   * Placeholder text when no option is selected\n   */\n  placeholder?: string;\n  \n  /**\n   * Label text for the select\n   */\n  label?: string;\n  \n  /**\n   * Whether to show a label\n   */\n  showLabel?: boolean;\n  \n  /**\n   * Type of select input\n   */\n  type?: 'default' | 'icon-leading' | 'search';\n  \n  /**\n   * Whether the select is disabled\n   */\n  disabled?: boolean;\n  \n  /**\n   * Whether the select has an error state\n   */\n  error?: boolean;\n  \n  /**\n   * Help text below the select\n   */\n  helpText?: string;\n  \n  /**\n   * Function called when selection changes\n   */\n  onChange?: (value: string | number) => void;\n  \n  /**\n   * Function called when search text changes (for search type)\n   */\n  onSearch?: (searchText: string) => void;\n  \n  /**\n   * Whether the dropdown is open (controlled)\n   */\n  isOpen?: boolean;\n  \n  /**\n   * Function called when dropdown should open/close\n   */\n  onToggle?: (isOpen: boolean) => void;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * ID for the select input\n   */\n  id?: string;\n}\n\n/**\n * User icon component\n */\nconst UserIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M16.6667 17.5V15.8333C16.6667 14.9493 16.3155 14.1014 15.6904 13.4763C15.0652 12.8512 14.2174 12.5 13.3333 12.5H6.66668C5.78262 12.5 4.93478 12.8512 4.30965 13.4763C3.68453 14.1014 3.33334 14.9493 3.33334 15.8333V17.5M13.3333 5.83333C13.3333 7.67428 11.841 9.16667 10 9.16667C8.15906 9.16667 6.66668 7.67428 6.66668 5.83333C6.66668 3.99238 8.15906 2.5 10 2.5C11.841 2.5 13.3333 3.99238 13.3333 5.83333Z\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Search icon component\n */\nconst SearchIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M17.5 17.5L13.875 13.875M15.8333 9.16667C15.8333 12.8486 12.8486 15.8333 9.16667 15.8333C5.48477 15.8333 2.5 12.8486 2.5 9.16667C2.5 5.48477 5.48477 2.5 9.16667 2.5C12.8486 2.5 15.8333 5.48477 15.8333 9.16667Z\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Chevron down icon component\n */\nconst ChevronDownIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M5 7.5L10 12.5L15 7.5\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Chevron up icon component\n */\nconst ChevronUpIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M15 12.5L10 7.5L5 12.5\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Check icon component for selected items\n */\nconst CheckIcon: React.FC = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M16.6667 5L7.50001 14.1667L3.33334 10\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Select option component for dropdown items\n */\nexport const SelectOption = React.forwardRef<HTMLButtonElement, SelectOptionProps & {\n  isSelected: boolean;\n  onClick: () => void;\n  showCheck?: boolean;\n}>(({\n  label,\n  supportingText,\n  icon,\n  disabled = false,\n  isSelected = false,\n  onClick,\n  showCheck = true,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-select-option';\n  const selectedClass = isSelected ? 'nexus-select-option--selected' : '';\n  const disabledClass = disabled ? 'nexus-select-option--disabled' : '';\n  \n  const classes = [\n    baseClasses,\n    selectedClass,\n    disabledClass\n  ].filter(Boolean).join(' ');\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      className={classes}\n      onClick={onClick}\n      disabled={disabled}\n      {...props}\n    >\n      <div className=\"nexus-select-option__content\">\n        {icon && (\n          <span className=\"nexus-select-option__icon\">\n            {icon}\n          </span>\n        )}\n        <div className=\"nexus-select-option__text\">\n          <span className=\"nexus-select-option__label\">{label}</span>\n          {supportingText && (\n            <span className=\"nexus-select-option__supporting-text\">\n              {supportingText}\n            </span>\n          )}\n        </div>\n      </div>\n      {showCheck && isSelected && (\n        <span className=\"nexus-select-option__check\">\n          <CheckIcon />\n        </span>\n      )}\n    </button>\n  );\n});\n\nSelectOption.displayName = 'SelectOption';\n\n/**\n * Select dropdown component\n */\nexport const SelectDropdown = React.forwardRef<HTMLDivElement, {\n  options: SelectOptionProps[];\n  selectedValue?: string | number;\n  onSelect: (value: string | number) => void;\n  isOpen: boolean;\n  showIcons?: boolean;\n}>(({\n  options,\n  selectedValue,\n  onSelect,\n  isOpen,\n  showIcons = false,\n  ...props\n}, ref) => {\n  const baseClasses = 'nexus-select-dropdown';\n  const openClass = isOpen ? 'nexus-select-dropdown--open' : '';\n  \n  const classes = [\n    baseClasses,\n    openClass\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div\n      ref={ref}\n      className={classes}\n      {...props}\n    >\n      {options.map((option, index) => (\n        <SelectOption\n          key={`${option.value}-${index}`}\n          {...option}\n          isSelected={option.value === selectedValue}\n          onClick={() => onSelect(option.value)}\n          showCheck={!showIcons}\n        />\n      ))}\n    </div>\n  );\n});\n\nSelectDropdown.displayName = 'SelectDropdown';\n\n/**\n * Main Select component\n */\nexport const Select = React.forwardRef<HTMLDivElement, SelectProps>(({\n  options,\n  value,\n  placeholder = 'Select an option',\n  label,\n  showLabel = true,\n  type = 'default',\n  disabled = false,\n  error = false,\n  helpText,\n  onChange,\n  onSearch,\n  isOpen: controlledIsOpen,\n  onToggle,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const [internalIsOpen, setInternalIsOpen] = useState(false);\n  const [searchText, setSearchText] = useState('');\n  const selectRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  \n  const isOpen = controlledIsOpen !== undefined ? controlledIsOpen : internalIsOpen;\n  \n  const selectedOption = options.find(option => option.value === value);\n  \n  const filteredOptions = type === 'search' && searchText\n    ? options.filter(option => \n        option.label.toLowerCase().includes(searchText.toLowerCase()) ||\n        (option.supportingText && option.supportingText.toLowerCase().includes(searchText.toLowerCase()))\n      )\n    : options;\n\n  const handleToggle = () => {\n    const newIsOpen = !isOpen;\n    if (onToggle) {\n      onToggle(newIsOpen);\n    } else {\n      setInternalIsOpen(newIsOpen);\n    }\n  };\n\n  const handleSelect = (optionValue: string | number) => {\n    if (onChange) {\n      onChange(optionValue);\n    }\n    \n    if (onToggle) {\n      onToggle(false);\n    } else {\n      setInternalIsOpen(false);\n    }\n    \n    if (type === 'search') {\n      setSearchText('');\n    }\n  };\n\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newSearchText = e.target.value;\n    setSearchText(newSearchText);\n    if (onSearch) {\n      onSearch(newSearchText);\n    }\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        selectRef.current &&\n        !selectRef.current.contains(event.target as Node) &&\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        if (onToggle) {\n          onToggle(false);\n        } else {\n          setInternalIsOpen(false);\n        }\n      }\n    };\n\n    if (isOpen) {\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }\n  }, [isOpen, onToggle]);\n\n  // Keyboard navigation\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (disabled) return;\n    \n    switch (e.key) {\n      case 'Enter':\n      case ' ':\n        if (!isOpen) {\n          e.preventDefault();\n          handleToggle();\n        }\n        break;\n      case 'Escape':\n        if (isOpen) {\n          e.preventDefault();\n          if (onToggle) {\n            onToggle(false);\n          } else {\n            setInternalIsOpen(false);\n          }\n        }\n        break;\n      case 'ArrowDown':\n        if (!isOpen) {\n          e.preventDefault();\n          handleToggle();\n        }\n        break;\n    }\n  };\n\n  const baseClasses = 'nexus-select-container';\n  const errorClass = error ? 'nexus-select-container--error' : '';\n  const disabledClass = disabled ? 'nexus-select-container--disabled' : '';\n  \n  const containerClasses = [\n    baseClasses,\n    errorClass,\n    disabledClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  const inputClasses = [\n    'nexus-select-input',\n    `nexus-select-input--${type}`,\n    isOpen ? 'nexus-select-input--open' : '',\n    error ? 'nexus-select-input--error' : '',\n    disabled ? 'nexus-select-input--disabled' : ''\n  ].filter(Boolean).join(' ');\n\n  const getDisplayIcon = () => {\n    if (type === 'search') return <SearchIcon />;\n    if (type === 'icon-leading') return <UserIcon />;\n    return null;\n  };\n\n  const getDisplayText = () => {\n    if (type === 'search' && isOpen) {\n      return searchText;\n    }\n    if (selectedOption) {\n      return selectedOption.label;\n    }\n    return placeholder;\n  };\n\n  const getDisplaySupportingText = () => {\n    if (type === 'search' && isOpen) {\n      return '';\n    }\n    if (selectedOption && selectedOption.supportingText) {\n      return selectedOption.supportingText;\n    }\n    return '';\n  };\n\n  return (\n    <div className={containerClasses} {...props}>\n      {showLabel && label && (\n        <label htmlFor={id} className=\"nexus-select-label\">\n          {label}\n        </label>\n      )}\n      \n      <div className=\"nexus-select-wrapper\" ref={selectRef}>\n        <div\n          className={inputClasses}\n          onClick={!disabled ? handleToggle : undefined}\n          onKeyDown={handleKeyDown}\n          tabIndex={disabled ? -1 : 0}\n          role=\"combobox\"\n          aria-expanded={isOpen}\n          aria-haspopup=\"listbox\"\n          aria-disabled={disabled}\n          id={id}\n        >\n          <div className=\"nexus-select-input__content\">\n            {getDisplayIcon() && (\n              <span className=\"nexus-select-input__icon\">\n                {getDisplayIcon()}\n              </span>\n            )}\n            \n            {type === 'search' && isOpen ? (\n              <input\n                type=\"text\"\n                className=\"nexus-select-input__search\"\n                value={searchText}\n                onChange={handleSearchChange}\n                placeholder={placeholder}\n                autoFocus\n              />\n            ) : (\n              <div className=\"nexus-select-input__text\">\n                <span className={`nexus-select-input__value ${!selectedOption ? 'nexus-select-input__placeholder' : ''}`}>\n                  {getDisplayText()}\n                </span>\n                {getDisplaySupportingText() && (\n                  <span className=\"nexus-select-input__supporting-text\">\n                    {getDisplaySupportingText()}\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n          \n          <span className=\"nexus-select-input__chevron\">\n            {isOpen ? <ChevronUpIcon /> : <ChevronDownIcon />}\n          </span>\n        </div>\n        \n        <SelectDropdown\n          ref={dropdownRef}\n          options={filteredOptions}\n          selectedValue={value}\n          onSelect={handleSelect}\n          isOpen={isOpen}\n          showIcons={type === 'icon-leading'}\n        />\n      </div>\n      \n      {helpText && (\n        <p className={`nexus-select-help-text ${error ? 'nexus-select-help-text--error' : ''}`}>\n          {helpText}\n        </p>\n      )}\n    </div>\n  );\n});\n\nSelect.displayName = 'Select';\n\n// Export icons for use in stories\nexport { UserIcon, SearchIcon, ChevronDownIcon, ChevronUpIcon, CheckIcon };\n","import React, { useState, useRef, useEffect } from 'react';\nimport './toggle.css';\n\nexport interface ToggleProps {\n  /**\n   * Whether the toggle is checked/pressed\n   */\n  checked?: boolean;\n  \n  /**\n   * Default checked state for uncontrolled usage\n   */\n  defaultChecked?: boolean;\n  \n  /**\n   * Size variant of the toggle\n   */\n  size?: 'sm' | 'md';\n  \n  /**\n   * Whether to show text label\n   */\n  showText?: boolean;\n  \n  /**\n   * Text label for the toggle\n   */\n  label?: string;\n  \n  /**\n   * Whether to show supporting text\n   */\n  showSupportingText?: boolean;\n  \n  /**\n   * Supporting text description\n   */\n  supportingText?: string;\n  \n  /**\n   * Whether the toggle is disabled\n   */\n  disabled?: boolean;\n  \n  /**\n   * Callback when toggle state changes\n   */\n  onChange?: (checked: boolean) => void;\n  \n  /**\n   * Callback when toggle is clicked\n   */\n  onClick?: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  \n  /**\n   * Callback when toggle receives focus\n   */\n  onFocus?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n  \n  /**\n   * Callback when toggle loses focus\n   */\n  onBlur?: (event: React.FocusEvent<HTMLButtonElement>) => void;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * Unique identifier for the toggle\n   */\n  id?: string;\n  \n  /**\n   * ARIA label for accessibility\n   */\n  'aria-label'?: string;\n  \n  /**\n   * ARIA described by for accessibility\n   */\n  'aria-describedby'?: string;\n}\n\n/**\n * Toggle component for binary on/off states\n * \n * Features:\n * - Two sizes: sm (36x20px) and md (44x24px)\n * - Optional text label and supporting text\n * - Comprehensive accessibility support\n * - Keyboard navigation (Space/Enter to toggle)\n * - Focus management and visual states\n * - Disabled state support\n * - Controlled and uncontrolled modes\n */\nexport const Toggle = React.forwardRef<HTMLButtonElement, ToggleProps>(({\n  checked,\n  defaultChecked = false,\n  size = 'md',\n  showText = false,\n  label = 'Remember me',\n  showSupportingText = false,\n  supportingText = 'Save my login details for next time.',\n  disabled = false,\n  onChange,\n  onClick,\n  onFocus,\n  onBlur,\n  className,\n  id,\n  'aria-label': ariaLabel,\n  'aria-describedby': ariaDescribedBy,\n  ...props\n}, ref) => {\n  // Handle controlled vs uncontrolled state\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\n  const isControlled = checked !== undefined;\n  const checkedValue = isControlled ? checked : internalChecked;\n  \n  // Generate unique IDs for accessibility\n  const toggleId = id || `toggle-${Math.random().toString(36).substr(2, 9)}`;\n  const labelId = `${toggleId}-label`;\n  const supportingTextId = `${toggleId}-supporting-text`;\n  \n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (disabled) return;\n    \n    const newChecked = !checkedValue;\n    \n    if (!isControlled) {\n      setInternalChecked(newChecked);\n    }\n    \n    onChange?.(newChecked);\n    onClick?.(event);\n  };\n  \n  const handleKeyDown = (event: React.KeyboardEvent<HTMLButtonElement>) => {\n    if (disabled) return;\n    \n    // Handle Space and Enter keys\n    if (event.key === ' ' || event.key === 'Enter') {\n      event.preventDefault();\n      const newChecked = !checkedValue;\n      \n      if (!isControlled) {\n        setInternalChecked(newChecked);\n      }\n      \n      onChange?.(newChecked);\n    }\n  };\n  \n  // Build class names\n  const baseClasses = 'nexus-toggle';\n  const sizeClass = `nexus-toggle--${size}`;\n  const checkedClass = checkedValue ? 'nexus-toggle--checked' : '';\n  const disabledClass = disabled ? 'nexus-toggle--disabled' : '';\n  const textClass = showText ? 'nexus-toggle--with-text' : '';\n  \n  const toggleClasses = [\n    baseClasses,\n    sizeClass,\n    checkedClass,\n    disabledClass,\n    className\n  ].filter(Boolean).join(' ');\n  \n  const containerClasses = [\n    'nexus-toggle-container',\n    textClass\n  ].filter(Boolean).join(' ');\n  \n  // Build ARIA describedby\n  const describedByIds = [];\n  if (showText && label) describedByIds.push(labelId);\n  if (showSupportingText && supportingText) describedByIds.push(supportingTextId);\n  if (ariaDescribedBy) describedByIds.push(ariaDescribedBy);\n  \n  const finalAriaDescribedBy = describedByIds.length > 0 ? describedByIds.join(' ') : undefined;\n  \n  if (!showText && !showSupportingText) {\n    // Render just the toggle switch\n    return (\n      <button\n        ref={ref}\n        type=\"button\"\n        role=\"switch\"\n        id={toggleId}\n        className={toggleClasses}\n        aria-checked={checkedValue}\n        aria-label={ariaLabel || label}\n        aria-describedby={finalAriaDescribedBy}\n        disabled={disabled}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        {...props}\n      >\n        <span className=\"nexus-toggle__track\">\n          <span className=\"nexus-toggle__thumb\" />\n        </span>\n      </button>\n    );\n  }\n  \n  // Render toggle with text content\n  return (\n    <div className={containerClasses}>\n      <button\n        ref={ref}\n        type=\"button\"\n        role=\"switch\"\n        id={toggleId}\n        className={toggleClasses}\n        aria-checked={checkedValue}\n        aria-label={ariaLabel}\n        aria-describedby={finalAriaDescribedBy}\n        disabled={disabled}\n        onClick={handleClick}\n        onKeyDown={handleKeyDown}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        {...props}\n      >\n        <span className=\"nexus-toggle__track\">\n          <span className=\"nexus-toggle__thumb\" />\n        </span>\n      </button>\n      \n      {(showText || showSupportingText) && (\n        <div className=\"nexus-toggle-text\">\n          {showText && label && (\n            <div \n              id={labelId}\n              className=\"nexus-toggle-text__label\"\n            >\n              {label}\n            </div>\n          )}\n          \n          {showSupportingText && supportingText && (\n            <div \n              id={supportingTextId}\n              className=\"nexus-toggle-text__supporting\"\n            >\n              {supportingText}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n});\n\nToggle.displayName = 'Toggle';\n","import React, { useState, useRef, useId } from 'react';\nimport './checkbox.css';\n\nexport interface CheckboxProps {\n  /**\n   * Type of input - checkbox or radio\n   */\n  type?: 'checkbox' | 'radio';\n  \n  /**\n   * Whether the checkbox/radio is checked\n   */\n  checked?: boolean;\n  \n  /**\n   * Default checked state for uncontrolled usage\n   */\n  defaultChecked?: boolean;\n  \n  /**\n   * Whether the checkbox is in indeterminate state (only for checkbox type)\n   */\n  indeterminate?: boolean;\n  \n  /**\n   * Size variant of the checkbox/radio\n   */\n  size?: 'sm' | 'md';\n  \n  /**\n   * Whether to show text label\n   */\n  showText?: boolean;\n  \n  /**\n   * Text label for the checkbox/radio\n   */\n  label?: string;\n  \n  /**\n   * Whether to show supporting text\n   */\n  showSupportingText?: boolean;\n  \n  /**\n   * Supporting text description\n   */\n  supportingText?: string;\n  \n  /**\n   * Whether the checkbox/radio is disabled\n   */\n  disabled?: boolean;\n  \n  /**\n   * Name attribute for radio button groups\n   */\n  name?: string;\n  \n  /**\n   * Value attribute for the input\n   */\n  value?: string | number;\n  \n  /**\n   * Callback when checkbox/radio state changes\n   */\n  onChange?: (checked: boolean, event: React.ChangeEvent<HTMLInputElement>) => void;\n  \n  /**\n   * Callback when checkbox/radio is clicked\n   */\n  onClick?: (event: React.MouseEvent<HTMLInputElement>) => void;\n  \n  /**\n   * Callback when checkbox/radio receives focus\n   */\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  \n  /**\n   * Callback when checkbox/radio loses focus\n   */\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * Unique identifier for the checkbox/radio\n   */\n  id?: string;\n  \n  /**\n   * ARIA label for accessibility\n   */\n  'aria-label'?: string;\n  \n  /**\n   * ARIA described by for accessibility\n   */\n  'aria-describedby'?: string;\n  \n  /**\n   * Required field indicator\n   */\n  required?: boolean;\n}\n\n/**\n * CheckIcon component for checked state\n */\nconst CheckIcon: React.FC<{ size: 'sm' | 'md' }> = ({ size }) => {\n  if (size === 'sm') {\n    return (\n      <svg \n        width=\"12\" \n        height=\"12\" \n        viewBox=\"0 0 12 12\" \n        fill=\"none\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"nexus-checkbox__check-icon\"\n      >\n        <path \n          d=\"M10 3L4.5 8.5L2 6\" \n          stroke=\"currentColor\" \n          strokeWidth=\"1.6666\" \n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    );\n  }\n  \n  return (\n    <svg \n      width=\"14\" \n      height=\"14\" \n      viewBox=\"0 0 14 14\" \n      fill=\"none\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"nexus-checkbox__check-icon\"\n    >\n      <path \n        d=\"M11.6666 3.5L5.24992 9.91667L2.33325 7\" \n        stroke=\"currentColor\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\n/**\n * MinusIcon component for indeterminate state\n */\nconst MinusIcon: React.FC<{ size: 'sm' | 'md' }> = ({ size }) => {\n  if (size === 'sm') {\n    return (\n      <svg \n        width=\"12\" \n        height=\"12\" \n        viewBox=\"0 0 12 12\" \n        fill=\"none\" \n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"nexus-checkbox__minus-icon\"\n      >\n        <path \n          d=\"M2.5 6H9.5\" \n          stroke=\"currentColor\" \n          strokeWidth=\"1.66666\" \n          strokeLinecap=\"round\" \n          strokeLinejoin=\"round\"\n        />\n      </svg>\n    );\n  }\n  \n  return (\n    <svg \n      width=\"14\" \n      height=\"14\" \n      viewBox=\"0 0 14 14\" \n      fill=\"none\" \n      xmlns=\"http://www.w3.org/2000/svg\"\n      className=\"nexus-checkbox__minus-icon\"\n    >\n      <path \n        d=\"M2.91675 7H11.0834\" \n        stroke=\"currentColor\" \n        strokeWidth=\"2\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\n/**\n * Checkbox component for binary selection with support for radio button mode\n * \n * Features:\n * - Two types: checkbox and radio\n * - Two sizes: sm (16px) and md (20px)\n * - Indeterminate state (checkbox only)\n * - Optional text label and supporting text\n * - Comprehensive accessibility support\n * - Keyboard navigation\n * - Focus management and visual states\n * - Disabled state support\n * - Controlled and uncontrolled modes\n */\nexport const Checkbox = React.forwardRef<HTMLInputElement, CheckboxProps>(({\n  type = 'checkbox',\n  checked,\n  defaultChecked = false,\n  indeterminate = false,\n  size = 'md',\n  showText = false,\n  label = 'Remember me',\n  showSupportingText = false,\n  supportingText = 'Save my login details for next time.',\n  disabled = false,\n  name,\n  value,\n  onChange,\n  onClick,\n  onFocus,\n  onBlur,\n  className,\n  id,\n  'aria-label': ariaLabel,\n  'aria-describedby': ariaDescribedBy,\n  required = false,\n  ...props\n}, ref) => {\n  // Handle controlled vs uncontrolled state\n  const [internalChecked, setInternalChecked] = useState(defaultChecked);\n  const isControlled = checked !== undefined;\n  const checkedValue = isControlled ? checked : internalChecked;\n  \n  // Generate unique IDs for accessibility\n  const componentId = useId();\n  const inputId = id || `checkbox-${componentId}`;\n  const labelId = `${inputId}-label`;\n  const supportingTextId = `${inputId}-supporting-text`;\n  \n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newChecked = event.target.checked;\n    \n    if (!isControlled) {\n      setInternalChecked(newChecked);\n    }\n    \n    onChange?.(newChecked, event);\n  };\n  \n  const handleClick = (event: React.MouseEvent<HTMLInputElement>) => {\n    onClick?.(event);\n  };\n  \n  // Build class names\n  const containerClasses = [\n    'nexus-checkbox-container',\n    showText || showSupportingText ? 'nexus-checkbox-container--with-text' : '',\n    className\n  ].filter(Boolean).join(' ');\n  \n  const inputClasses = [\n    'nexus-checkbox',\n    `nexus-checkbox--${type}`,\n    `nexus-checkbox--${size}`,\n    checkedValue ? 'nexus-checkbox--checked' : '',\n    indeterminate && type === 'checkbox' ? 'nexus-checkbox--indeterminate' : '',\n    disabled ? 'nexus-checkbox--disabled' : ''\n  ].filter(Boolean).join(' ');\n  \n  // Build ARIA describedby\n  const describedByIds = [];\n  if (showSupportingText && supportingText) describedByIds.push(supportingTextId);\n  if (ariaDescribedBy) describedByIds.push(ariaDescribedBy);\n  \n  const finalAriaDescribedBy = describedByIds.length > 0 ? describedByIds.join(' ') : undefined;\n  \n  // Handle indeterminate state via ref effect\n  const inputRef = useRef<HTMLInputElement>(null);\n  React.useEffect(() => {\n    if (inputRef.current && type === 'checkbox') {\n      inputRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate, type]);\n  \n  // Combine refs\n  const combinedRef = (node: HTMLInputElement) => {\n    inputRef.current = node;\n    if (typeof ref === 'function') {\n      ref(node);\n    } else if (ref) {\n      ref.current = node;\n    }\n  };\n  \n  if (!showText && !showSupportingText) {\n    // Render just the input control\n    return (\n      <div className=\"nexus-checkbox-wrapper\">\n        <input\n          ref={combinedRef}\n          type={type}\n          id={inputId}\n          name={name}\n          value={value}\n          checked={checkedValue}\n          disabled={disabled}\n          required={required}\n          className={inputClasses}\n          onChange={handleChange}\n          onClick={handleClick}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          aria-label={ariaLabel || label}\n          aria-describedby={finalAriaDescribedBy}\n          {...props}\n        />\n        <label htmlFor={inputId} className=\"nexus-checkbox__visual\">\n          <span className=\"nexus-checkbox__box\">\n            {checkedValue && !indeterminate && <CheckIcon size={size} />}\n            {indeterminate && type === 'checkbox' && <MinusIcon size={size} />}\n            {type === 'radio' && checkedValue && <span className=\"nexus-checkbox__radio-dot\" />}\n          </span>\n        </label>\n      </div>\n    );\n  }\n  \n  // Render input with text content\n  return (\n    <div className={containerClasses}>\n      <div className=\"nexus-checkbox-wrapper\">\n        <input\n          ref={combinedRef}\n          type={type}\n          id={inputId}\n          name={name}\n          value={value}\n          checked={checkedValue}\n          disabled={disabled}\n          required={required}\n          className={inputClasses}\n          onChange={handleChange}\n          onClick={handleClick}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          aria-describedby={finalAriaDescribedBy}\n          {...props}\n        />\n        <label htmlFor={inputId} className=\"nexus-checkbox__visual\">\n          <span className=\"nexus-checkbox__box\">\n            {checkedValue && !indeterminate && <CheckIcon size={size} />}\n            {indeterminate && type === 'checkbox' && <MinusIcon size={size} />}\n            {type === 'radio' && checkedValue && <span className=\"nexus-checkbox__radio-dot\" />}\n          </span>\n        </label>\n      </div>\n      \n      {(showText || showSupportingText) && (\n        <div className=\"nexus-checkbox-text\">\n          {showText && label && (\n            <label \n              htmlFor={inputId}\n              id={labelId}\n              className=\"nexus-checkbox-text__label\"\n            >\n              {label}\n            </label>\n          )}\n          \n          {showSupportingText && supportingText && (\n            <div \n              id={supportingTextId}\n              className=\"nexus-checkbox-text__supporting\"\n            >\n              {supportingText}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n});\n\nCheckbox.displayName = 'Checkbox';\n","import React, { useState } from 'react';\nimport './checkboxgroup.css';\n\n// Icon components for the featured icons\nconst LayersIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M1.33325 9.66667L7.99992 13L14.6666 9.66667M7.99992 3L1.33325 6.33333L7.99992 9.66667L14.6666 6.33333L7.99992 3Z\" stroke=\"currentColor\" strokeWidth=\"1.33333\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst ThreeLayersIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_8716_10526)\">\n      <path d=\"M1.33325 11.3334L7.99992 14.6667L14.6666 11.3334M1.33325 8.00004L7.99992 11.3334L14.6666 8.00004M7.99992 1.33337L1.33325 4.66671L7.99992 8.00004L14.6666 4.66671L7.99992 1.33337Z\" stroke=\"currentColor\" strokeWidth=\"1.33333\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_8716_10526\">\n        <rect width=\"16\" height=\"16\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nconst ZapIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M8.66667 1.33337L2 9.33337H8L7.33333 14.6667L14 6.66671H8L8.66667 1.33337Z\" stroke=\"currentColor\" strokeWidth=\"1.33333\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst CodepenIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_8716_11002)\">\n      <path d=\"M7.99992 1.33337L14.6666 5.66671M7.99992 1.33337L1.33325 5.66671M7.99992 1.33337V5.66671M14.6666 5.66671V10.3334M14.6666 5.66671L7.99992 10.3334M14.6666 10.3334L7.99992 14.6667M14.6666 10.3334L7.99992 5.66671M7.99992 14.6667L1.33325 10.3334M7.99992 14.6667V10.3334M1.33325 10.3334V5.66671M1.33325 10.3334L7.99992 5.66671M1.33325 5.66671L7.99992 10.3334\" stroke=\"currentColor\" strokeWidth=\"1.33333\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_8716_11002\">\n        <rect width=\"16\" height=\"16\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nconst SmileIcon = ({ size = 16 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_8716_11030)\">\n      <path d=\"M5.33325 9.33337C5.33325 9.33337 6.33325 10.6667 7.99992 10.6667C9.66659 10.6667 10.6666 9.33337 10.6666 9.33337M5.99992 6.00004H6.00659M9.99992 6.00004H10.0066M14.6666 8.00004C14.6666 11.6819 11.6818 14.6667 7.99992 14.6667C4.31802 14.6667 1.33325 11.6819 1.33325 8.00004C1.33325 4.31814 4.31802 1.33337 7.99992 1.33337C11.6818 1.33337 14.6666 4.31814 14.6666 8.00004Z\" stroke=\"currentColor\" strokeWidth=\"1.33333\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0_8716_11030\">\n        <rect width=\"16\" height=\"16\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nconst CheckIcon = ({ size = 10 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 10 10\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M8.33341 2.5L3.75008 7.08333L1.66675 5\" stroke=\"white\" strokeWidth=\"1.66667\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst CheckIconMd = ({ size = 14 }: { size?: number }) => (\n  <svg width={size} height={size} viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M11.6668 3.5L5.25016 9.91667L2.3335 7\" stroke=\"white\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\n// Badge component for the \"Limited time only\" badge\nconst Badge = ({ children, color = 'success' }: { children: React.ReactNode; color?: 'success' }) => (\n  <div className={`checkboxgroup-badge checkboxgroup-badge--${color}`}>\n    <div className=\"checkboxgroup-badge__content\">\n      {children}\n    </div>\n  </div>\n);\n\n// Checkbox component for selection state\nconst CheckboxInput = ({ \n  checked, \n  size = 'sm',\n  onChange,\n  disabled = false \n}: { \n  checked: boolean; \n  size?: 'sm' | 'md';\n  onChange?: (checked: boolean) => void;\n  disabled?: boolean;\n}) => (\n  <div \n    className={`checkboxgroup-checkbox checkboxgroup-checkbox--${size} ${checked ? 'checkboxgroup-checkbox--checked' : ''} ${disabled ? 'checkboxgroup-checkbox--disabled' : ''}`}\n    onClick={() => !disabled && onChange?.(!checked)}\n  >\n    {checked && (size === 'sm' ? <CheckIcon /> : <CheckIconMd />)}\n  </div>\n);\n\n// Featured icon component\nconst FeaturedIcon = ({ \n  icon, \n  size = 'sm' \n}: { \n  icon: 'layers' | '3-layers' | 'zap' | 'codepen' | 'smile'; \n  size?: 'sm' | 'md';\n}) => {\n  const iconSize = size === 'sm' ? 16 : 20;\n  const iconComponents = {\n    'layers': <LayersIcon size={iconSize} />,\n    '3-layers': <ThreeLayersIcon size={iconSize} />,\n    'zap': <ZapIcon size={iconSize} />,\n    'codepen': <CodepenIcon size={iconSize} />,\n    'smile': <SmileIcon size={iconSize} />\n  };\n\n  return (\n    <div className={`checkboxgroup-featured-icon checkboxgroup-featured-icon--${size}`}>\n      {iconComponents[icon]}\n    </div>\n  );\n};\n\n// Individual checkbox group item interface\nexport interface CheckboxGroupItemData {\n  id: string;\n  planName: string;\n  price: string;\n  period: string;\n  description: string;\n  icon?: 'layers' | '3-layers' | 'zap' | 'codepen' | 'smile';\n  badge?: string;\n  selected?: boolean;\n  disabled?: boolean;\n}\n\n// Individual checkbox group item component\nconst CheckboxGroupItem = ({\n  item,\n  size = 'sm',\n  layout = 'simple',\n  onSelectionChange,\n  className = ''\n}: {\n  item: CheckboxGroupItemData;\n  size?: 'sm' | 'md';\n  layout?: 'simple' | 'card';\n  onSelectionChange?: (id: string, selected: boolean) => void;\n  className?: string;\n}) => {\n  const handleClick = () => {\n    if (!item.disabled) {\n      onSelectionChange?.(item.id, !item.selected);\n    }\n  };\n\n  if (layout === 'card') {\n    return (\n      <div\n        className={`checkboxgroup-item checkboxgroup-item--card checkboxgroup-item--${size} ${item.selected ? 'checkboxgroup-item--selected' : ''} ${item.disabled ? 'checkboxgroup-item--disabled' : ''} ${!item.icon ? 'checkboxgroup-item--no-icon' : ''} ${className}`}\n        onClick={handleClick}\n      >\n        <div className=\"checkboxgroup-item__header\">\n          <div className=\"checkboxgroup-item__header-content\">\n            {item.icon && (\n              <div className=\"checkboxgroup-item__icon-wrapper\">\n                <FeaturedIcon icon={item.icon} size={size} />\n              </div>\n            )}\n            <div className=\"checkboxgroup-item__plan-name\">\n              {item.planName}\n            </div>\n          </div>\n          <CheckboxInput \n            checked={item.selected || false} \n            size={size}\n            disabled={item.disabled}\n            onChange={(checked) => onSelectionChange?.(item.id, checked)}\n          />\n        </div>\n        <div className=\"checkboxgroup-item__body\">\n          <div className=\"checkboxgroup-item__content\">\n            {item.badge && (\n              <Badge color=\"success\">{item.badge}</Badge>\n            )}\n            <div className=\"checkboxgroup-item__pricing\">\n              <div className=\"checkboxgroup-item__price-row\">\n                <div className=\"checkboxgroup-item__price\">{item.price}</div>\n                <div className=\"checkboxgroup-item__period\">{item.period}</div>\n              </div>\n              <div className=\"checkboxgroup-item__description\">\n                {item.description}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  // Simple layout\n  return (\n    <div\n      className={`checkboxgroup-item checkboxgroup-item--simple checkboxgroup-item--${size} ${item.selected ? 'checkboxgroup-item--selected' : ''} ${item.disabled ? 'checkboxgroup-item--disabled' : ''} ${!item.icon ? 'checkboxgroup-item--no-icon' : ''} ${className}`}\n      onClick={handleClick}\n    >\n      <div className=\"checkboxgroup-item__content\">\n        {item.icon && (\n          <div className=\"checkboxgroup-item__icon-wrapper\">\n            <FeaturedIcon icon={item.icon} size={size} />\n          </div>\n        )}\n        <div className=\"checkboxgroup-item__text\">\n          <div className=\"checkboxgroup-item__title\">\n            {item.planName} {item.price}/{item.period}\n          </div>\n          <div className=\"checkboxgroup-item__description\">\n            {item.description}\n          </div>\n        </div>\n      </div>\n      <CheckboxInput \n        checked={item.selected || false} \n        size={size}\n        disabled={item.disabled}\n        onChange={(checked) => onSelectionChange?.(item.id, checked)}\n      />\n    </div>\n  );\n};\n\n// Main CheckboxGroup component interface\nexport interface CheckboxGroupProps {\n  /** Array of checkbox items */\n  items: CheckboxGroupItemData[];\n  /** Size variant */\n  size?: 'sm' | 'md';\n  /** Layout variant */\n  layout?: 'simple' | 'card';\n  /** Allow multiple selections */\n  allowMultiple?: boolean;\n  /** Callback when selection changes */\n  onSelectionChange?: (selectedIds: string[]) => void;\n  /** Custom class name */\n  className?: string;\n  /** Disabled state */\n  disabled?: boolean;\n}\n\n// Main CheckboxGroup component\nexport const CheckboxGroup = ({\n  items,\n  size = 'sm',\n  layout = 'simple',\n  allowMultiple = false,\n  onSelectionChange,\n  className = '',\n  disabled = false,\n  ...props\n}: CheckboxGroupProps) => {\n  const [selectedItems, setSelectedItems] = useState<string[]>(\n    items.filter(item => item.selected).map(item => item.id)\n  );\n\n  const handleItemSelectionChange = (id: string, selected: boolean) => {\n    if (disabled) return;\n\n    let newSelection: string[];\n    \n    if (allowMultiple) {\n      if (selected) {\n        newSelection = [...selectedItems, id];\n      } else {\n        newSelection = selectedItems.filter(itemId => itemId !== id);\n      }\n    } else {\n      newSelection = selected ? [id] : [];\n    }\n\n    setSelectedItems(newSelection);\n    onSelectionChange?.(newSelection);\n  };\n\n  const itemsWithSelection = items.map(item => ({\n    ...item,\n    selected: selectedItems.includes(item.id),\n    disabled: disabled || item.disabled\n  }));\n\n  return (\n    <div \n      className={`checkboxgroup checkboxgroup--${size} checkboxgroup--${layout} ${className}`}\n      {...props}\n    >\n      {itemsWithSelection.map((item) => (\n        <CheckboxGroupItem\n          key={item.id}\n          item={item}\n          size={size}\n          layout={layout}\n          onSelectionChange={handleItemSelectionChange}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default CheckboxGroup;\n","import React from 'react';\nimport './progressbar.css';\n\n// Tooltip arrow component for floating labels\nconst TooltipArrow = ({ direction = 'down' }: { direction?: 'up' | 'down' }) => {\n  if (direction === 'down') {\n    return (\n      <svg width=\"16\" height=\"9\" viewBox=\"0 0 16 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M14.0711 0.485289C14.962 0.485289 15.4081 1.56243 14.7782 2.1924L8.70711 8.26347C8.31658 8.654 7.68342 8.654 7.29289 8.26347L1.22183 2.1924C0.591867 1.56243 1.03803 0.485289 1.92894 0.485289L14.0711 0.485289Z\" fill=\"white\"/>\n      </svg>\n    );\n  }\n  \n  return (\n    <svg width=\"16\" height=\"9\" viewBox=\"0 0 16 9\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.92894 8.51471C1.03803 8.51471 0.591868 7.43757 1.22183 6.8076L7.29289 0.736529C7.68342 0.346004 8.31658 0.346005 8.70711 0.736529L14.7782 6.8076C15.4081 7.43757 14.962 8.51471 14.0711 8.51471L1.92894 8.51471Z\" fill=\"white\"/>\n    </svg>\n  );\n};\n\n// Tooltip component for floating labels\nconst Tooltip = ({ \n  children, \n  position = 'top',\n  style \n}: { \n  children: React.ReactNode; \n  position?: 'top' | 'bottom';\n  style?: React.CSSProperties;\n}) => (\n  <div className={`progressbar-tooltip progressbar-tooltip--${position}`} style={style}>\n    {position === 'top' && <TooltipArrow direction=\"down\" />}\n    <div className=\"progressbar-tooltip__content\">\n      {children}\n    </div>\n    {position === 'bottom' && <TooltipArrow direction=\"up\" />}\n  </div>\n);\n\n// ProgressBar component interface\nexport interface ProgressBarProps {\n  /** Progress value between 0 and 100 */\n  value: number;\n  /** Maximum value (default: 100) */\n  max?: number;\n  /** Label position */\n  label?: 'right' | 'bottom' | 'top-floating' | 'bottom-floating' | false;\n  /** Show percentage text */\n  showPercentage?: boolean;\n  /** Custom label text (overrides percentage) */\n  labelText?: string;\n  /** Progress bar width */\n  width?: number | string;\n  /** Progress bar height */\n  height?: number;\n  /** Background color */\n  backgroundColor?: string;\n  /** Progress color */\n  progressColor?: string;\n  /** Disabled state */\n  disabled?: boolean;\n  /** Custom CSS class */\n  className?: string;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** Accessibility description */\n  'aria-describedby'?: string;\n  /** Animation duration in milliseconds */\n  animationDuration?: number;\n  /** Callback when progress changes */\n  onProgressChange?: (value: number) => void;\n}\n\n// Main ProgressBar component\nexport const ProgressBar = ({\n  value,\n  max = 100,\n  label = 'right',\n  showPercentage = true,\n  labelText,\n  width = 320,\n  height = 8,\n  backgroundColor,\n  progressColor,\n  disabled = false,\n  className = '',\n  'aria-label': ariaLabel,\n  'aria-describedby': ariaDescribedBy,\n  animationDuration = 300,\n  onProgressChange,\n  ...props\n}: ProgressBarProps) => {\n  // Clamp value between 0 and max\n  const clampedValue = Math.max(0, Math.min(value, max));\n  const percentage = Math.round((clampedValue / max) * 100);\n  \n  // Calculate progress width\n  const progressWidth = `${percentage}%`;\n  \n  // Get display text\n  const displayText = labelText || `${percentage}%`;\n  \n  // Handle value changes\n  React.useEffect(() => {\n    onProgressChange?.(clampedValue);\n  }, [clampedValue, onProgressChange]);\n\n  // Calculate tooltip position for floating labels\n  const getTooltipPosition = (): React.CSSProperties => {\n    const progressBarWidth = typeof width === 'number' ? width : 320;\n    const tooltipWidth = displayText.length <= 3 ? 43 : displayText.length <= 4 ? 50 : 56;\n    const progressPixels = (percentage / 100) * progressBarWidth;\n    const left = Math.max(-17, Math.min(progressPixels - tooltipWidth / 2, progressBarWidth - tooltipWidth));\n    \n    return { left: `${left}px` };\n  };\n\n  const progressBarClasses = [\n    'progressbar',\n    label && `progressbar--label-${label.replace('-', '_')}`,\n    disabled && 'progressbar--disabled',\n    className\n  ].filter(Boolean).join(' ');\n\n  const progressBarStyle: React.CSSProperties = {\n    width: typeof width === 'number' ? `${width}px` : width,\n    height: `${height}px`,\n    backgroundColor,\n    ...props.style\n  };\n\n  const progressStyle: React.CSSProperties = {\n    width: progressWidth,\n    height: `${height}px`,\n    backgroundColor: progressColor,\n    transition: `width ${animationDuration}ms ease-in-out`\n  };\n\n  return (\n    <div className={progressBarClasses}>\n      <div className=\"progressbar__container\">\n        {/* Progress bar track */}\n        <div \n          className=\"progressbar__track\"\n          style={progressBarStyle}\n          role=\"progressbar\"\n          aria-valuenow={clampedValue}\n          aria-valuemin={0}\n          aria-valuemax={max}\n          aria-label={ariaLabel}\n          aria-describedby={ariaDescribedBy}\n        >\n          {/* Progress bar fill */}\n          <div \n            className=\"progressbar__fill\"\n            style={progressStyle}\n          />\n          \n          {/* Floating tooltips */}\n          {label === 'top-floating' && (\n            <Tooltip position=\"top\" style={getTooltipPosition()}>\n              {showPercentage && displayText}\n            </Tooltip>\n          )}\n          \n          {label === 'bottom-floating' && (\n            <Tooltip position=\"bottom\" style={getTooltipPosition()}>\n              {showPercentage && displayText}\n            </Tooltip>\n          )}\n        </div>\n\n        {/* Static labels */}\n        {label === 'right' && showPercentage && (\n          <div className=\"progressbar__label progressbar__label--right\">\n            {displayText}\n          </div>\n        )}\n      </div>\n\n      {/* Bottom label */}\n      {label === 'bottom' && showPercentage && (\n        <div className=\"progressbar__label progressbar__label--bottom\">\n          {displayText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport './progresscircle.css';\n\n// Size configurations for different circle sizes\nconst SIZE_CONFIG = {\n  xxs: {\n    diameter: 64,\n    strokeWidth: 6,\n    fontSize: 14,\n    labelFontSize: 12\n  },\n  xs: {\n    diameter: 160,\n    strokeWidth: 16,\n    fontSize: 24,\n    labelFontSize: 12\n  },\n  sm: {\n    diameter: 200,\n    strokeWidth: 20,\n    fontSize: 30,\n    labelFontSize: 12\n  },\n  md: {\n    diameter: 240,\n    strokeWidth: 24,\n    fontSize: 36,\n    labelFontSize: 14\n  },\n  lg: {\n    diameter: 280,\n    strokeWidth: 28,\n    fontSize: 48,\n    labelFontSize: 14\n  }\n};\n\n// ProgressCircle component interface\nexport interface ProgressCircleProps {\n  /** Progress value between 0 and 100 */\n  value: number;\n  /** Maximum value (default: 100) */\n  max?: number;\n  /** Size variant */\n  size?: 'xxs' | 'xs' | 'sm' | 'md' | 'lg';\n  /** Shape variant */\n  shape?: 'circle' | 'half-circle';\n  /** Show label text */\n  showLabel?: boolean;\n  /** Label text (overrides default) */\n  label?: string;\n  /** Show percentage text */\n  showPercentage?: boolean;\n  /** Custom percentage text */\n  percentageText?: string;\n  /** Background stroke color */\n  backgroundColor?: string;\n  /** Progress stroke color */\n  progressColor?: string;\n  /** Text color */\n  textColor?: string;\n  /** Label text color */\n  labelColor?: string;\n  /** Disabled state */\n  disabled?: boolean;\n  /** Custom CSS class */\n  className?: string;\n  /** Accessibility label */\n  'aria-label'?: string;\n  /** Animation duration in milliseconds */\n  animationDuration?: number;\n  /** Callback when progress changes */\n  onProgressChange?: (value: number) => void;\n}\n\n// Main ProgressCircle component\nexport const ProgressCircle = ({\n  value,\n  max = 100,\n  size = 'md',\n  shape = 'circle',\n  showLabel = true,\n  label = 'Active users',\n  showPercentage = true,\n  percentageText,\n  backgroundColor,\n  progressColor,\n  textColor,\n  labelColor,\n  disabled = false,\n  className = '',\n  'aria-label': ariaLabel,\n  animationDuration = 1000,\n  onProgressChange,\n  ...props\n}: ProgressCircleProps) => {\n  // Clamp value between 0 and max\n  const clampedValue = Math.max(0, Math.min(value, max));\n  const percentage = Math.round((clampedValue / max) * 100);\n  \n  // Get size configuration\n  const config = SIZE_CONFIG[size];\n  const { diameter, strokeWidth, fontSize, labelFontSize } = config;\n  \n  // Calculate circle properties\n  const radius = (diameter - strokeWidth) / 2;\n  const circumference = 2 * Math.PI * radius;\n  const center = diameter / 2;\n  \n  // Calculate stroke dash array for progress\n  const strokeDasharray = shape === 'half-circle' ? circumference / 2 : circumference;\n  const strokeDashoffset = shape === 'half-circle' \n    ? (strokeDasharray * (100 - percentage)) / 100\n    : (circumference * (100 - percentage)) / 100;\n  \n  // Get display text\n  const displayPercentage = percentageText || `${percentage}%`;\n  \n  // Handle value changes\n  React.useEffect(() => {\n    onProgressChange?.(clampedValue);\n  }, [clampedValue, onProgressChange]);\n\n  // Create path for half circle\n  const getHalfCirclePath = (isBackground = false) => {\n    const startAngle = Math.PI; // Start from left (180 degrees)\n    const endAngle = 0; // End at right (0 degrees)\n    \n    const x1 = center + radius * Math.cos(startAngle);\n    const y1 = center + radius * Math.sin(startAngle);\n    const x2 = center + radius * Math.cos(endAngle);\n    const y2 = center + radius * Math.sin(endAngle);\n    \n    return `M ${x1} ${y1} A ${radius} ${radius} 0 0 1 ${x2} ${y2}`;\n  };\n\n  // Create path for progress half circle\n  const getProgressHalfCirclePath = () => {\n    const progressAngle = Math.PI * (percentage / 100);\n    const startAngle = Math.PI;\n    const endAngle = Math.PI - progressAngle;\n    \n    const x1 = center + radius * Math.cos(startAngle);\n    const y1 = center + radius * Math.sin(startAngle);\n    const x2 = center + radius * Math.cos(endAngle);\n    const y2 = center + radius * Math.sin(endAngle);\n    \n    const largeArcFlag = progressAngle > Math.PI ? 1 : 0;\n    \n    return `M ${x1} ${y1} A ${radius} ${radius} 0 ${largeArcFlag} 1 ${x2} ${y2}`;\n  };\n\n  const progressCircleClasses = [\n    'progresscircle',\n    `progresscircle--${size}`,\n    `progresscircle--${shape.replace('-', '_')}`,\n    disabled && 'progresscircle--disabled',\n    className\n  ].filter(Boolean).join(' ');\n\n  const svgHeight = shape === 'half-circle' ? diameter / 2 + strokeWidth : diameter;\n  const contentCenterY = shape === 'half-circle' ? diameter / 2 - 20 : center;\n\n  return (\n    <div className={progressCircleClasses} {...props}>\n      <div className=\"progresscircle__container\">\n        {/* SVG Circle */}\n        <svg \n          className=\"progresscircle__svg\"\n          width={diameter} \n          height={svgHeight}\n          viewBox={`0 0 ${diameter} ${svgHeight}`}\n          role=\"progressbar\"\n          aria-valuenow={clampedValue}\n          aria-valuemin={0}\n          aria-valuemax={max}\n          aria-label={ariaLabel}\n        >\n          {/* Background circle/half-circle */}\n          {shape === 'circle' ? (\n            <circle\n              className=\"progresscircle__background\"\n              cx={center}\n              cy={center}\n              r={radius}\n              fill=\"none\"\n              stroke={backgroundColor}\n              strokeWidth={strokeWidth}\n              strokeLinecap=\"round\"\n            />\n          ) : (\n            <path\n              className=\"progresscircle__background\"\n              d={getHalfCirclePath(true)}\n              fill=\"none\"\n              stroke={backgroundColor}\n              strokeWidth={strokeWidth}\n              strokeLinecap=\"round\"\n            />\n          )}\n          \n          {/* Progress circle/half-circle */}\n          {shape === 'circle' ? (\n            <circle\n              className=\"progresscircle__progress\"\n              cx={center}\n              cy={center}\n              r={radius}\n              fill=\"none\"\n              stroke={progressColor}\n              strokeWidth={strokeWidth}\n              strokeLinecap=\"round\"\n              strokeDasharray={circumference}\n              strokeDashoffset={strokeDashoffset}\n              style={{\n                transition: `stroke-dashoffset ${animationDuration}ms ease-in-out`,\n                transform: 'rotate(-90deg)',\n                transformOrigin: 'center'\n              }}\n            />\n          ) : (\n            <path\n              className=\"progresscircle__progress\"\n              d={getProgressHalfCirclePath()}\n              fill=\"none\"\n              stroke={progressColor}\n              strokeWidth={strokeWidth}\n              strokeLinecap=\"round\"\n              style={{\n                transition: `d ${animationDuration}ms ease-in-out`\n              }}\n            />\n          )}\n        </svg>\n\n        {/* Content overlay */}\n        <div className=\"progresscircle__content\">\n          {/* Label */}\n          {showLabel && label && size !== 'xxs' && (\n            <div \n              className=\"progresscircle__label\"\n              style={{ \n                fontSize: `${labelFontSize}px`,\n                color: labelColor,\n                ...(shape === 'half-circle' && {\n                  transform: `translateY(${-fontSize / 2}px)`\n                })\n              }}\n            >\n              {label}\n            </div>\n          )}\n          \n          {/* Percentage */}\n          {showPercentage && (\n            <div \n              className=\"progresscircle__percentage\"\n              style={{ \n                fontSize: `${fontSize}px`,\n                color: textColor\n              }}\n            >\n              {displayPercentage}\n            </div>\n          )}\n          \n          {/* XXS size external label */}\n          {size === 'xxs' && showLabel && label && (\n            <div className=\"progresscircle__external-label\">\n              {label}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressCircle;\n","import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './slider.css';\n\n// Slider component interface\nexport interface SliderProps {\n  /** Current value for single slider or start value for range slider */\n  value?: number;\n  /** End value for range slider (if provided, enables range mode) */\n  endValue?: number;\n  /** Minimum value (default: 0) */\n  min?: number;\n  /** Maximum value (default: 100) */\n  max?: number;\n  /** Step increment (default: 1) */\n  step?: number;\n  /** Show value labels */\n  showLabels?: boolean;\n  /** Custom label format function */\n  labelFormat?: (value: number) => string;\n  /** Disabled state */\n  disabled?: boolean;\n  /** Track width in pixels */\n  width?: number | string;\n  /** Track height in pixels */\n  height?: number;\n  /** Handle size in pixels */\n  handleSize?: number;\n  /** Custom CSS class */\n  className?: string;\n  /** Custom styles */\n  style?: React.CSSProperties;\n  /** Callback when value changes */\n  onChange?: (value: number | [number, number]) => void;\n  /** Callback when sliding starts */\n  onSlideStart?: () => void;\n  /** Callback when sliding ends */\n  onSlideEnd?: () => void;\n  /** ARIA label */\n  'aria-label'?: string;\n  /** ARIA labelledby */\n  'aria-labelledby'?: string;\n}\n\nexport const Slider: React.FC<SliderProps> = ({\n  value = 0,\n  endValue,\n  min = 0,\n  max = 100,\n  step = 1,\n  showLabels = true,\n  labelFormat = (val) => `${val}%`,\n  disabled = false,\n  width = '100%',\n  height = 4,\n  handleSize = 20,\n  className = '',\n  style,\n  onChange,\n  onSlideStart,\n  onSlideEnd,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n}) => {\n  const isRange = endValue !== undefined;\n  const [isDragging, setIsDragging] = useState<'start' | 'end' | null>(null);\n  const [startValue, setStartValue] = useState(Math.max(min, Math.min(max, value)));\n  const [endVal, setEndVal] = useState(isRange ? Math.max(min, Math.min(max, endValue)) : value);\n  const trackRef = useRef<HTMLDivElement>(null);\n\n  // Ensure start value is always less than or equal to end value in range mode\n  useEffect(() => {\n    if (isRange && startValue > endVal) {\n      if (isDragging === 'start') {\n        setEndVal(startValue);\n      } else if (isDragging === 'end') {\n        setStartValue(endVal);\n      }\n    }\n  }, [startValue, endVal, isRange, isDragging]);\n\n  // Update internal state when props change\n  useEffect(() => {\n    setStartValue(Math.max(min, Math.min(max, value)));\n  }, [value, min, max]);\n\n  useEffect(() => {\n    if (isRange && endValue !== undefined) {\n      setEndVal(Math.max(min, Math.min(max, endValue)));\n    }\n  }, [endValue, min, max, isRange]);\n\n  const getValueFromPosition = useCallback((clientX: number): number => {\n    if (!trackRef.current) return min;\n    \n    const rect = trackRef.current.getBoundingClientRect();\n    const percentage = Math.max(0, Math.min(1, (clientX - rect.left) / rect.width));\n    const rawValue = min + percentage * (max - min);\n    \n    // Round to nearest step\n    const steppedValue = Math.round(rawValue / step) * step;\n    return Math.max(min, Math.min(max, steppedValue));\n  }, [min, max, step]);\n\n  const handleMouseDown = useCallback((handle: 'start' | 'end') => (e: React.MouseEvent) => {\n    if (disabled) return;\n    \n    e.preventDefault();\n    setIsDragging(handle);\n    onSlideStart?.();\n\n    const handleMouseMove = (e: MouseEvent) => {\n      const newValue = getValueFromPosition(e.clientX);\n      \n      if (handle === 'start') {\n        setStartValue(newValue);\n        if (!isRange && onChange) {\n          onChange(newValue);\n        }\n      } else if (handle === 'end' && isRange) {\n        setEndVal(newValue);\n      }\n    };\n\n    const handleMouseUp = () => {\n      setIsDragging(null);\n      onSlideEnd?.();\n      \n      if (onChange) {\n        if (isRange) {\n          onChange([Math.min(startValue, endVal), Math.max(startValue, endVal)]);\n        } else {\n          onChange(startValue);\n        }\n      }\n      \n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n  }, [disabled, getValueFromPosition, isRange, onChange, onSlideStart, onSlideEnd, startValue, endVal]);\n\n  const handleTrackClick = useCallback((e: React.MouseEvent) => {\n    if (disabled || isDragging) return;\n    \n    const newValue = getValueFromPosition(e.clientX);\n    \n    if (isRange) {\n      // In range mode, move the closest handle\n      const startDistance = Math.abs(newValue - startValue);\n      const endDistance = Math.abs(newValue - endVal);\n      \n      if (startDistance < endDistance) {\n        setStartValue(newValue);\n      } else {\n        setEndVal(newValue);\n      }\n      \n      if (onChange) {\n        const sortedValues = [startValue, endVal].sort((a, b) => a - b);\n        onChange([sortedValues[0], sortedValues[1]]);\n      }\n    } else {\n      setStartValue(newValue);\n      if (onChange) {\n        onChange(newValue);\n      }\n    }\n  }, [disabled, isDragging, getValueFromPosition, isRange, startValue, endVal, onChange]);\n\n  const handleKeyDown = useCallback((handle: 'start' | 'end') => (e: React.KeyboardEvent) => {\n    if (disabled) return;\n    \n    let delta = 0;\n    \n    switch (e.key) {\n      case 'ArrowLeft':\n      case 'ArrowDown':\n        delta = -step;\n        break;\n      case 'ArrowRight':\n      case 'ArrowUp':\n        delta = step;\n        break;\n      case 'Home':\n        delta = min - (handle === 'start' ? startValue : endVal);\n        break;\n      case 'End':\n        delta = max - (handle === 'start' ? startValue : endVal);\n        break;\n      case 'PageDown':\n        delta = -step * 10;\n        break;\n      case 'PageUp':\n        delta = step * 10;\n        break;\n      default:\n        return;\n    }\n    \n    e.preventDefault();\n    \n    const currentValue = handle === 'start' ? startValue : endVal;\n    const newValue = Math.max(min, Math.min(max, currentValue + delta));\n    \n    if (handle === 'start') {\n      setStartValue(newValue);\n      if (!isRange && onChange) {\n        onChange(newValue);\n      }\n    } else if (handle === 'end' && isRange) {\n      setEndVal(newValue);\n    }\n    \n    if (isRange && onChange) {\n      const sortedValues = handle === 'start' \n        ? [newValue, endVal].sort((a, b) => a - b)\n        : [startValue, newValue].sort((a, b) => a - b);\n      onChange([sortedValues[0], sortedValues[1]]);\n    }\n  }, [disabled, step, min, max, startValue, endVal, isRange, onChange]);\n\n  // Calculate positions and progress\n  const startPercent = ((startValue - min) / (max - min)) * 100;\n  const endPercent = isRange ? ((endVal - min) / (max - min)) * 100 : startPercent;\n  const progressLeft = isRange ? Math.min(startPercent, endPercent) : 0;\n  const progressWidth = isRange ? Math.abs(endPercent - startPercent) : startPercent;\n\n  const sliderClasses = [\n    'slider',\n    disabled && 'slider--disabled',\n    isDragging && 'slider--dragging',\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div \n      className={sliderClasses}\n      style={{\n        ...style,\n        width,\n        '--slider-track-height': `${height}px`,\n        '--slider-handle-size': `${handleSize}px`,\n      } as React.CSSProperties}\n    >\n      <div \n        className=\"slider__track-container\"\n        ref={trackRef}\n        onClick={handleTrackClick}\n      >\n        <div className=\"slider__track\" />\n        <div \n          className=\"slider__progress\"\n          style={{\n            left: `${progressLeft}%`,\n            width: `${progressWidth}%`,\n          }}\n        />\n        \n        {/* Start handle */}\n        <div\n          className={`slider__handle slider__handle--start ${\n            isDragging === 'start' ? 'slider__handle--dragging' : ''\n          }`}\n          style={{ left: `${startPercent}%` }}\n          role=\"slider\"\n          tabIndex={disabled ? -1 : 0}\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-valuenow={startValue}\n          aria-valuetext={labelFormat(startValue)}\n          aria-label={ariaLabel || (isRange ? 'Start value' : 'Slider value')}\n          aria-labelledby={ariaLabelledBy}\n          aria-disabled={disabled}\n          onMouseDown={handleMouseDown('start')}\n          onKeyDown={handleKeyDown('start')}\n        />\n        \n        {/* End handle (range mode only) */}\n        {isRange && (\n          <div\n            className={`slider__handle slider__handle--end ${\n              isDragging === 'end' ? 'slider__handle--dragging' : ''\n            }`}\n            style={{ left: `${endPercent}%` }}\n            role=\"slider\"\n            tabIndex={disabled ? -1 : 0}\n            aria-valuemin={min}\n            aria-valuemax={max}\n            aria-valuenow={endVal}\n            aria-valuetext={labelFormat(endVal)}\n            aria-label=\"End value\"\n            aria-labelledby={ariaLabelledBy}\n            aria-disabled={disabled}\n            onMouseDown={handleMouseDown('end')}\n            onKeyDown={handleKeyDown('end')}\n          />\n        )}\n      </div>\n      \n      {/* Labels */}\n      {showLabels && (\n        <div className=\"slider__labels\">\n          <span \n            className=\"slider__label slider__label--start\"\n            style={{ left: `${startPercent}%` }}\n          >\n            {labelFormat(startValue)}\n          </span>\n          {isRange && (\n            <span \n              className=\"slider__label slider__label--end\"\n              style={{ left: `${endPercent}%` }}\n            >\n              {labelFormat(endVal)}\n            </span>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Slider;\n","import React, { useEffect, useRef, useCallback } from 'react';\nimport ReactDOM from 'react-dom';\nimport './modal.css';\n\n// Close icon SVG component\nconst CloseIcon = () => (\n  <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M18 6L6 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path d=\"M6 6L18 18\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\n// Modal component interface\nexport interface ModalProps {\n  /** Whether the modal is open */\n  isOpen: boolean;\n  /** Callback to close the modal */\n  onClose: () => void;\n  /** Modal size variant */\n  size?: 'sm' | 'md' | 'lg' | 'xl' | 'full';\n  /** Modal title */\n  title?: string;\n  /** Modal description/subtitle */\n  description?: string;\n  /** Modal content */\n  children?: React.ReactNode;\n  /** Show close button in header */\n  showCloseButton?: boolean;\n  /** Close modal when clicking backdrop */\n  closeOnBackdropClick?: boolean;\n  /** Close modal when pressing Escape key */\n  closeOnEscape?: boolean;\n  /** Footer content (typically buttons) */\n  footer?: React.ReactNode;\n  /** Custom header content (overrides title/description) */\n  headerContent?: React.ReactNode;\n  /** Disable modal animations */\n  disableAnimation?: boolean;\n  /** Custom CSS class */\n  className?: string;\n  /** Custom styles */\n  style?: React.CSSProperties;\n  /** ARIA label for the modal */\n  'aria-label'?: string;\n  /** ARIA labelledby for the modal */\n  'aria-labelledby'?: string;\n  /** ARIA describedby for the modal */\n  'aria-describedby'?: string;\n  /** Callback when modal opens */\n  onOpen?: () => void;\n  /** Callback after modal animation completes */\n  onAnimationComplete?: () => void;\n  /** Z-index for the modal */\n  zIndex?: number;\n  /** Portal target for modal rendering */\n  portalTarget?: HTMLElement | null;\n  /** Prevent body scroll when modal is open */\n  preventBodyScroll?: boolean;\n}\n\nexport const Modal: React.FC<ModalProps> = ({\n  isOpen,\n  onClose,\n  size = 'md',\n  title,\n  description,\n  children,\n  showCloseButton = true,\n  closeOnBackdropClick = true,\n  closeOnEscape = true,\n  footer,\n  headerContent,\n  disableAnimation = false,\n  className = '',\n  style,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledBy,\n  'aria-describedby': ariaDescribedBy,\n  onOpen,\n  onAnimationComplete,\n  zIndex = 1000,\n  portalTarget,\n  preventBodyScroll = true,\n}) => {\n  const modalRef = useRef<HTMLDivElement>(null);\n  const backdropRef = useRef<HTMLDivElement>(null);\n  const previousFocusRef = useRef<HTMLElement | null>(null);\n\n  // Handle escape key press\n  const handleEscapeKey = useCallback((event: KeyboardEvent) => {\n    if (closeOnEscape && event.key === 'Escape' && isOpen) {\n      onClose();\n    }\n  }, [closeOnEscape, isOpen, onClose]);\n\n  // Handle backdrop click\n  const handleBackdropClick = useCallback((event: React.MouseEvent) => {\n    if (closeOnBackdropClick && event.target === backdropRef.current) {\n      onClose();\n    }\n  }, [closeOnBackdropClick, onClose]);\n\n  // Focus management\n  useEffect(() => {\n    if (isOpen) {\n      // Store previous focus\n      previousFocusRef.current = document.activeElement as HTMLElement;\n      \n      // Focus modal\n      setTimeout(() => {\n        if (modalRef.current) {\n          modalRef.current.focus();\n        }\n      }, 100);\n\n      // Call onOpen callback\n      onOpen?.();\n    } else {\n      // Restore previous focus\n      if (previousFocusRef.current) {\n        previousFocusRef.current.focus();\n      }\n    }\n  }, [isOpen, onOpen]);\n\n  // Keyboard event listeners\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleEscapeKey);\n      return () => {\n        document.removeEventListener('keydown', handleEscapeKey);\n      };\n    }\n  }, [isOpen, handleEscapeKey]);\n\n  // Body scroll management\n  useEffect(() => {\n    if (preventBodyScroll && isOpen) {\n      const originalOverflow = document.body.style.overflow;\n      document.body.style.overflow = 'hidden';\n      \n      return () => {\n        document.body.style.overflow = originalOverflow;\n      };\n    }\n  }, [preventBodyScroll, isOpen]);\n\n  // Focus trap\n  const handleTabKey = useCallback((event: React.KeyboardEvent) => {\n    if (event.key !== 'Tab' || !modalRef.current) return;\n\n    const focusableElements = modalRef.current.querySelectorAll(\n      'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])'\n    );\n    \n    const firstElement = focusableElements[0] as HTMLElement;\n    const lastElement = focusableElements[focusableElements.length - 1] as HTMLElement;\n\n    if (event.shiftKey) {\n      if (document.activeElement === firstElement) {\n        event.preventDefault();\n        lastElement?.focus();\n      }\n    } else {\n      if (document.activeElement === lastElement) {\n        event.preventDefault();\n        firstElement?.focus();\n      }\n    }\n  }, []);\n\n  // Don't render if not open\n  if (!isOpen) return null;\n\n  const modalClasses = [\n    'modal',\n    `modal--${size}`,\n    disableAnimation && 'modal--no-animation',\n    className\n  ].filter(Boolean).join(' ');\n\n  const modalContent = (\n    <div \n      className=\"modal-backdrop\"\n      ref={backdropRef}\n      onClick={handleBackdropClick}\n      style={{ zIndex }}\n    >\n      <div\n        className={modalClasses}\n        ref={modalRef}\n        role=\"dialog\"\n        aria-modal=\"true\"\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabelledBy}\n        aria-describedby={ariaDescribedBy}\n        tabIndex={-1}\n        style={style}\n        onKeyDown={handleTabKey}\n        onAnimationEnd={onAnimationComplete}\n      >\n        {/* Header */}\n        {(title || description || headerContent || showCloseButton) && (\n          <div className=\"modal__header\">\n            {headerContent || (\n              <div className=\"modal__header-content\">\n                {title && (\n                  <h2 \n                    className=\"modal__title\" \n                    id={ariaLabelledBy || 'modal-title'}\n                  >\n                    {title}\n                  </h2>\n                )}\n                {description && (\n                  <p \n                    className=\"modal__description\"\n                    id={ariaDescribedBy || 'modal-description'}\n                  >\n                    {description}\n                  </p>\n                )}\n              </div>\n            )}\n            \n            {showCloseButton && (\n              <button\n                className=\"modal__close-button\"\n                onClick={onClose}\n                aria-label=\"Close modal\"\n                type=\"button\"\n              >\n                <CloseIcon />\n              </button>\n            )}\n          </div>\n        )}\n\n        {/* Content */}\n        {children && (\n          <div className=\"modal__content\">\n            {children}\n          </div>\n        )}\n\n        {/* Footer */}\n        {footer && (\n          <div className=\"modal__footer\">\n            {footer}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  // Portal rendering\n  if (portalTarget) {\n    return ReactDOM.createPortal(modalContent, portalTarget);\n  }\n\n  return modalContent;\n};\n\n// Export additional components for common use cases\nexport const ModalHeader: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className = '' }) => (\n  <div className={`modal__header-content ${className}`}>\n    {children}\n  </div>\n);\n\nexport const ModalTitle: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n  id?: string;\n}> = ({ children, className = '', id }) => (\n  <h2 className={`modal__title ${className}`} id={id}>\n    {children}\n  </h2>\n);\n\nexport const ModalDescription: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n  id?: string;\n}> = ({ children, className = '', id }) => (\n  <p className={`modal__description ${className}`} id={id}>\n    {children}\n  </p>\n);\n\nexport const ModalContent: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n}> = ({ children, className = '' }) => (\n  <div className={`modal__content ${className}`}>\n    {children}\n  </div>\n);\n\nexport const ModalFooter: React.FC<{\n  children: React.ReactNode;\n  className?: string;\n  align?: 'left' | 'center' | 'right' | 'space-between';\n}> = ({ children, className = '', align = 'right' }) => (\n  <div className={`modal__footer modal__footer--${align} ${className}`}>\n    {children}\n  </div>\n);\n\nexport default Modal;\n","import React, { useRef, useEffect, useMemo } from 'react';\nimport './chart.css';\n\nexport interface DataPoint {\n  x: string | number | Date;\n  y: number;\n  label?: string;\n}\n\nexport interface ChartSeries {\n  id: string;\n  title: string;\n  data: DataPoint[];\n  color?: string;\n  type?: 'line' | 'bar' | 'area';\n}\n\nexport interface ChartProps {\n  /**\n   * Array of data series to display\n   */\n  series: ChartSeries[];\n  \n  /**\n   * Chart type - determines the visualization style\n   */\n  type?: 'line' | 'bar' | 'area' | 'mixed';\n  \n  /**\n   * Chart variant - affects styling and layout\n   */\n  variant?: 'default' | 'minimal' | 'detailed';\n  \n  /**\n   * Chart size\n   */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /**\n   * Chart title\n   */\n  title?: string;\n  \n  /**\n   * X-axis label\n   */\n  xAxisLabel?: string;\n  \n  /**\n   * Y-axis label\n   */\n  yAxisLabel?: string;\n  \n  /**\n   * Whether to show grid lines\n   */\n  showGrid?: boolean;\n  \n  /**\n   * Whether to show legend\n   */\n  showLegend?: boolean;\n  \n  /**\n   * Whether to show axes labels\n   */\n  showAxes?: boolean;\n  \n  /**\n   * Height of the chart container\n   */\n  height?: number;\n  \n  /**\n   * Width of the chart container\n   */\n  width?: number;\n  \n  /**\n   * Whether the chart is loading\n   */\n  loading?: boolean;\n  \n  /**\n   * Error state\n   */\n  error?: string;\n  \n  /**\n   * Custom color palette\n   */\n  colors?: string[];\n  \n  /**\n   * Animation duration in milliseconds\n   */\n  animationDuration?: number;\n  \n  /**\n   * Whether to enable animations\n   */\n  animate?: boolean;\n  \n  /**\n   * Responsive behavior\n   */\n  responsive?: boolean;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * Callback for data point interactions\n   */\n  onDataPointClick?: (point: DataPoint, seriesId: string) => void;\n  \n  /**\n   * Callback for data point hover\n   */\n  onDataPointHover?: (point: DataPoint | null, seriesId: string | null) => void;\n}\n\n// Default color palette based on design tokens\nconst DEFAULT_COLORS = [\n  'var(--chart-color-1, #1890ff)',\n  'var(--chart-color-2, #52c41a)',\n  'var(--chart-color-3, #faad14)',\n  'var(--chart-color-4, #f5222d)',\n  'var(--chart-color-5, #fa541c)',\n  'var(--chart-color-6, #722ed1)',\n  'var(--chart-color-7, #13c2c2)',\n  'var(--chart-color-8, #eb2f96)',\n];\n\n/**\n * Chart component for displaying various types of data visualizations\n */\nexport const Chart = React.forwardRef<HTMLDivElement, ChartProps>(({\n  series = [],\n  type = 'line',\n  variant = 'default',\n  size = 'md',\n  title,\n  xAxisLabel,\n  yAxisLabel,\n  showGrid = true,\n  showLegend = true,\n  showAxes = true,\n  height,\n  width,\n  loading = false,\n  error,\n  colors = DEFAULT_COLORS,\n  animationDuration = 300,\n  animate = true,\n  responsive = true,\n  className,\n  onDataPointClick,\n  onDataPointHover,\n  ...props\n}, ref) => {\n  const chartRef = useRef<HTMLDivElement>(null);\n  const [hoveredPoint, setHoveredPoint] = React.useState<{point: DataPoint, seriesId: string} | null>(null);\n\n  // Build CSS classes\n  const baseClasses = 'nexus-chart';\n  const typeClass = `nexus-chart--${type}`;\n  const variantClass = `nexus-chart--${variant}`;\n  const sizeClass = `nexus-chart--${size}`;\n  const loadingClass = loading ? 'nexus-chart--loading' : '';\n  const errorClass = error ? 'nexus-chart--error' : '';\n  const responsiveClass = responsive ? 'nexus-chart--responsive' : '';\n\n  const classes = [\n    baseClasses,\n    typeClass,\n    variantClass,\n    sizeClass,\n    loadingClass,\n    errorClass,\n    responsiveClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Calculate chart dimensions and data ranges\n  const chartData = useMemo(() => {\n    if (!series.length) return null;\n\n    const allDataPoints = series.flatMap(s => s.data);\n    const yValues = allDataPoints.map(d => d.y);\n    const xValues = allDataPoints.map(d => d.x);\n\n    const yMin = Math.min(...yValues);\n    const yMax = Math.max(...yValues);\n    const yRange = yMax - yMin;\n\n    return {\n      yMin: yMin - yRange * 0.1, // Add 10% padding\n      yMax: yMax + yRange * 0.1,\n      yRange: yRange * 1.2,\n      xValues,\n      yValues,\n      dataPointCount: Math.max(...series.map(s => s.data.length))\n    };\n  }, [series]);\n\n  // Generate chart elements based on type\n  const renderChartElements = () => {\n    if (!chartData || !series.length) return null;\n\n    const chartWidth = 300; // Base width for calculations\n    const chartHeight = 200; // Base height for calculations\n\n    return series.map((seriesData, seriesIndex) => {\n      const seriesColor = seriesData.color || colors[seriesIndex % colors.length];\n      \n      if (type === 'bar') {\n        return renderBarSeries(seriesData, seriesIndex, seriesColor, chartWidth, chartHeight);\n      } else if (type === 'line') {\n        return renderLineSeries(seriesData, seriesIndex, seriesColor, chartWidth, chartHeight);\n      } else if (type === 'area') {\n        return renderAreaSeries(seriesData, seriesIndex, seriesColor, chartWidth, chartHeight);\n      }\n      \n      return null;\n    });\n  };\n\n  const renderBarSeries = (seriesData: ChartSeries, seriesIndex: number, color: string, chartWidth: number, chartHeight: number) => {\n    const barWidth = chartWidth / (chartData!.dataPointCount * series.length + (series.length - 1));\n    \n    return (\n      <div key={seriesData.id} className=\"nexus-chart__series nexus-chart__series--bar\">\n        {seriesData.data.map((point, pointIndex) => {\n          const barHeight = ((point.y - chartData!.yMin) / chartData!.yRange) * chartHeight;\n          const xPos = pointIndex * (chartWidth / chartData!.dataPointCount) + seriesIndex * barWidth;\n          \n          return (\n            <div\n              key={`${seriesData.id}-${pointIndex}`}\n              className=\"nexus-chart__bar\"\n              style={{\n                left: `${(xPos / chartWidth) * 100}%`,\n                width: `${(barWidth / chartWidth) * 100}%`,\n                height: `${(barHeight / chartHeight) * 100}%`,\n                backgroundColor: color,\n                bottom: 0,\n              }}\n              onClick={() => onDataPointClick?.(point, seriesData.id)}\n              onMouseEnter={() => {\n                setHoveredPoint({point, seriesId: seriesData.id});\n                onDataPointHover?.(point, seriesData.id);\n              }}\n              onMouseLeave={() => {\n                setHoveredPoint(null);\n                onDataPointHover?.(null, null);\n              }}\n            />\n          );\n        })}\n      </div>\n    );\n  };\n\n  const renderLineSeries = (seriesData: ChartSeries, seriesIndex: number, color: string, chartWidth: number, chartHeight: number) => {\n    const points = seriesData.data.map((point, index) => {\n      const x = (index / (chartData!.dataPointCount - 1)) * chartWidth;\n      const y = chartHeight - ((point.y - chartData!.yMin) / chartData!.yRange) * chartHeight;\n      return `${x},${y}`;\n    }).join(' ');\n\n    return (\n      <div key={seriesData.id} className=\"nexus-chart__series nexus-chart__series--line\">\n        <svg\n          className=\"nexus-chart__line-svg\"\n          viewBox={`0 0 ${chartWidth} ${chartHeight}`}\n          preserveAspectRatio=\"none\"\n        >\n          <polyline\n            points={points}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"2\"\n            className=\"nexus-chart__line\"\n          />\n          {seriesData.data.map((point, pointIndex) => {\n            const x = (pointIndex / (chartData!.dataPointCount - 1)) * chartWidth;\n            const y = chartHeight - ((point.y - chartData!.yMin) / chartData!.yRange) * chartHeight;\n            \n            return (\n              <circle\n                key={`${seriesData.id}-point-${pointIndex}`}\n                cx={x}\n                cy={y}\n                r=\"4\"\n                fill={color}\n                className=\"nexus-chart__point\"\n                onClick={() => onDataPointClick?.(point, seriesData.id)}\n                onMouseEnter={() => {\n                  setHoveredPoint({point, seriesId: seriesData.id});\n                  onDataPointHover?.(point, seriesData.id);\n                }}\n                onMouseLeave={() => {\n                  setHoveredPoint(null);\n                  onDataPointHover?.(null, null);\n                }}\n              />\n            );\n          })}\n        </svg>\n      </div>\n    );\n  };\n\n  const renderAreaSeries = (seriesData: ChartSeries, seriesIndex: number, color: string, chartWidth: number, chartHeight: number) => {\n    const points = seriesData.data.map((point, index) => {\n      const x = (index / (chartData!.dataPointCount - 1)) * chartWidth;\n      const y = chartHeight - ((point.y - chartData!.yMin) / chartData!.yRange) * chartHeight;\n      return `${x},${y}`;\n    }).join(' ');\n\n    const areaPoints = `0,${chartHeight} ${points} ${chartWidth},${chartHeight}`;\n\n    return (\n      <div key={seriesData.id} className=\"nexus-chart__series nexus-chart__series--area\">\n        <svg\n          className=\"nexus-chart__area-svg\"\n          viewBox={`0 0 ${chartWidth} ${chartHeight}`}\n          preserveAspectRatio=\"none\"\n        >\n          <polygon\n            points={areaPoints}\n            fill={color}\n            fillOpacity=\"0.3\"\n            className=\"nexus-chart__area\"\n          />\n          <polyline\n            points={points}\n            fill=\"none\"\n            stroke={color}\n            strokeWidth=\"2\"\n            className=\"nexus-chart__area-line\"\n          />\n        </svg>\n      </div>\n    );\n  };\n\n  const renderLegend = () => {\n    if (!showLegend || !series.length) return null;\n\n    return (\n      <div className=\"nexus-chart__legend\">\n        {series.map((seriesData, index) => (\n          <div key={seriesData.id} className=\"nexus-chart__legend-item\">\n            <div \n              className=\"nexus-chart__legend-indicator\"\n              style={{ backgroundColor: seriesData.color || colors[index % colors.length] }}\n            />\n            <span className=\"nexus-chart__legend-label\">{seriesData.title}</span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderAxes = () => {\n    if (!showAxes || !chartData) return null;\n\n    return (\n      <div className=\"nexus-chart__axes\">\n        {xAxisLabel && (\n          <div className=\"nexus-chart__axis-label nexus-chart__axis-label--x\">\n            {xAxisLabel}\n          </div>\n        )}\n        {yAxisLabel && (\n          <div className=\"nexus-chart__axis-label nexus-chart__axis-label--y\">\n            {yAxisLabel}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderTooltip = () => {\n    if (!hoveredPoint) return null;\n\n    return (\n      <div className=\"nexus-chart__tooltip\">\n        <div className=\"nexus-chart__tooltip-content\">\n          <div className=\"nexus-chart__tooltip-label\">\n            {hoveredPoint.point.label || hoveredPoint.point.x}\n          </div>\n          <div className=\"nexus-chart__tooltip-value\">\n            {hoveredPoint.point.y}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div ref={ref} className={classes} {...props}>\n        <div className=\"nexus-chart__loading\">\n          <div className=\"nexus-chart__loading-spinner\" />\n          <span className=\"nexus-chart__loading-text\">Loading chart...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div ref={ref} className={classes} {...props}>\n        <div className=\"nexus-chart__error\">\n          <span className=\"nexus-chart__error-text\">{error}</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (!series.length) {\n    return (\n      <div ref={ref} className={classes} {...props}>\n        <div className=\"nexus-chart__empty\">\n          <span className=\"nexus-chart__empty-text\">No data available</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div ref={ref} className={classes} style={{ height, width }} {...props}>\n      {title && (\n        <div className=\"nexus-chart__header\">\n          <h3 className=\"nexus-chart__title\">{title}</h3>\n        </div>\n      )}\n      \n      <div className=\"nexus-chart__container\" ref={chartRef}>\n        {showGrid && <div className=\"nexus-chart__grid\" />}\n        \n        <div className=\"nexus-chart__content\">\n          {renderChartElements()}\n        </div>\n        \n        {renderAxes()}\n        {renderTooltip()}\n      </div>\n      \n      {renderLegend()}\n    </div>\n  );\n});\n\nChart.displayName = 'Chart';\n","import React, { useMemo } from 'react';\nimport './radarchart.css';\n\nexport interface RadarDataPoint {\n  axis: string;\n  value: number;\n  label?: string;\n}\n\nexport interface RadarSeries {\n  id: string;\n  title: string;\n  data: RadarDataPoint[];\n  color?: string;\n}\n\nexport interface RadarChartProps {\n  /**\n   * Array of data series to display\n   */\n  series: RadarSeries[];\n  \n  /**\n   * Chart size variant\n   */\n  size?: 'sm' | 'md' | 'lg';\n  \n  /**\n   * Chart title\n   */\n  title?: string;\n  \n  /**\n   * Whether to show legend\n   */\n  showLegend?: boolean;\n  \n  /**\n   * Legend position\n   */\n  legendPosition?: 'right' | 'bottom';\n  \n  /**\n   * Maximum value for the radar chart scale\n   */\n  maxValue?: number;\n  \n  /**\n   * Number of scale levels (concentric polygons)\n   */\n  levels?: number;\n  \n  /**\n   * Whether to show scale labels\n   */\n  showScaleLabels?: boolean;\n  \n  /**\n   * Whether to show axis labels\n   */\n  showAxisLabels?: boolean;\n  \n  /**\n   * Height of the chart container\n   */\n  height?: number;\n  \n  /**\n   * Width of the chart container\n   */\n  width?: number;\n  \n  /**\n   * Custom color palette\n   */\n  colors?: string[];\n  \n  /**\n   * Whether to enable animations\n   */\n  animate?: boolean;\n  \n  /**\n   * Animation duration in milliseconds\n   */\n  animationDuration?: number;\n  \n  /**\n   * Whether the chart is loading\n   */\n  loading?: boolean;\n  \n  /**\n   * Error state\n   */\n  error?: string;\n  \n  /**\n   * Additional CSS classes\n   */\n  className?: string;\n  \n  /**\n   * Callback for data point interactions\n   */\n  onDataPointClick?: (point: RadarDataPoint, seriesId: string) => void;\n  \n  /**\n   * Callback for data point hover\n   */\n  onDataPointHover?: (point: RadarDataPoint | null, seriesId: string | null) => void;\n}\n\n// Default color palette matching Figma design\nconst DEFAULT_COLORS = [\n  'var(--radar-color-1, #0F172A)',\n  'var(--radar-color-2, #EE46BC)', \n  'var(--radar-color-3, #0BA5EC)',\n  'var(--radar-color-4, #52c41a)',\n  'var(--radar-color-5, #faad14)',\n  'var(--radar-color-6, #f5222d)',\n];\n\n/**\n * RadarChart component for displaying multi-dimensional data in a circular layout\n */\nexport const RadarChart = React.forwardRef<HTMLDivElement, RadarChartProps>(({\n  series = [],\n  size = 'md',\n  title,\n  showLegend = false,\n  legendPosition = 'right',\n  maxValue,\n  levels = 5,\n  showScaleLabels = true,\n  showAxisLabels = true,\n  height,\n  width,\n  colors = DEFAULT_COLORS,\n  animate = true,\n  animationDuration = 300,\n  loading = false,\n  error,\n  className,\n  onDataPointClick,\n  onDataPointHover,\n  ...props\n}, ref) => {\n  const [hoveredSeries, setHoveredSeries] = React.useState<string | null>(null);\n\n  // Build CSS classes\n  const baseClasses = 'nexus-radar-chart';\n  const sizeClass = `nexus-radar-chart--${size}`;\n  const legendClass = showLegend ? `nexus-radar-chart--legend-${legendPosition}` : '';\n  const loadingClass = loading ? 'nexus-radar-chart--loading' : '';\n  const errorClass = error ? 'nexus-radar-chart--error' : '';\n\n  const classes = [\n    baseClasses,\n    sizeClass,\n    legendClass,\n    loadingClass,\n    errorClass,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Calculate chart dimensions and data ranges\n  const chartData = useMemo(() => {\n    if (!series.length) return null;\n\n    // Get all unique axes from all series\n    const allAxes = Array.from(new Set(\n      series.flatMap(s => s.data.map(d => d.axis))\n    ));\n\n    // Calculate max value across all series\n    const allValues = series.flatMap(s => s.data.map(d => d.value));\n    const calculatedMaxValue = maxValue || Math.max(...allValues, 1000);\n\n    // Ensure all series have data for all axes\n    const normalizedSeries = series.map(s => ({\n      ...s,\n      data: allAxes.map(axis => {\n        const existing = s.data.find(d => d.axis === axis);\n        return existing || { axis, value: 0 };\n      })\n    }));\n\n    return {\n      axes: allAxes,\n      maxValue: calculatedMaxValue,\n      series: normalizedSeries,\n      angleStep: (2 * Math.PI) / allAxes.length\n    };\n  }, [series, maxValue]);\n\n  // Generate scale levels (concentric polygons)\n  const generateScaleLevels = () => {\n    if (!chartData) return [];\n    \n    const centerX = 156; // Center of the 312px viewBox\n    const centerY = 156;\n    const maxRadius = 140; // Maximum radius\n    \n    return Array.from({ length: levels }, (_, i) => {\n      const level = i + 1;\n      const radius = (maxRadius * level) / levels;\n      const value = (chartData.maxValue * level) / levels;\n      \n      // Generate polygon points\n      const points = chartData.axes.map((_, axisIndex) => {\n        const angle = axisIndex * chartData.angleStep - Math.PI / 2; // Start from top\n        const x = centerX + radius * Math.cos(angle);\n        const y = centerY + radius * Math.sin(angle);\n        return `${x},${y}`;\n      }).join(' ');\n      \n      return { level, radius, value, points };\n    });\n  };\n\n  // Generate axis rays\n  const generateAxisRays = () => {\n    if (!chartData) return [];\n    \n    const centerX = 156;\n    const centerY = 156;\n    const maxRadius = 140;\n    \n    return chartData.axes.map((axis, index) => {\n      const angle = index * chartData.angleStep - Math.PI / 2;\n      const x = centerX + maxRadius * Math.cos(angle);\n      const y = centerY + maxRadius * Math.sin(angle);\n      \n      return {\n        axis,\n        x1: centerX,\n        y1: centerY,\n        x2: x,\n        y2: y,\n        labelX: centerX + (maxRadius + 20) * Math.cos(angle),\n        labelY: centerY + (maxRadius + 20) * Math.sin(angle)\n      };\n    });\n  };\n\n  // Generate data series paths\n  const generateSeriesPaths = () => {\n    if (!chartData) return [];\n    \n    const centerX = 156;\n    const centerY = 156;\n    const maxRadius = 140;\n    \n    return chartData.series.map((seriesData, seriesIndex) => {\n      const points = seriesData.data.map((point, index) => {\n        const angle = index * chartData.angleStep - Math.PI / 2;\n        const normalizedValue = point.value / chartData.maxValue;\n        const radius = maxRadius * normalizedValue;\n        const x = centerX + radius * Math.cos(angle);\n        const y = centerY + radius * Math.sin(angle);\n        return `${x},${y}`;\n      }).join(' ');\n      \n      const color = seriesData.color || colors[seriesIndex % colors.length];\n      \n      return {\n        ...seriesData,\n        points,\n        color,\n        fillOpacity: hoveredSeries && hoveredSeries !== seriesData.id ? 0.3 : 0.2\n      };\n    });\n  };\n\n  const scaleLevels = generateScaleLevels();\n  const axisRays = generateAxisRays();\n  const seriesPaths = generateSeriesPaths();\n\n  const renderScaleLevels = () => {\n    return scaleLevels.map(level => (\n      <polygon\n        key={level.level}\n        points={level.points}\n        className=\"nexus-radar-chart__scale-level\"\n        fill=\"none\"\n        stroke=\"var(--radar-grid-color)\"\n        strokeWidth=\"1\"\n      />\n    ));\n  };\n\n  const renderAxisRays = () => {\n    return axisRays.map((ray, index) => (\n      <line\n        key={ray.axis}\n        x1={ray.x1}\n        y1={ray.y1}\n        x2={ray.x2}\n        y2={ray.y2}\n        className=\"nexus-radar-chart__axis-ray\"\n        stroke=\"var(--radar-grid-color)\"\n        strokeWidth=\"1\"\n      />\n    ));\n  };\n\n  const renderScaleLabels = () => {\n    if (!showScaleLabels || !chartData) return null;\n    \n    const centerX = 156;\n    const centerY = 156;\n    const maxRadius = 140;\n    \n    // Show labels on the first axis (top)\n    const angle = -Math.PI / 2;\n    \n    return scaleLevels.map(level => {\n      const radius = (maxRadius * level.level) / levels;\n      const x = centerX + radius * Math.cos(angle);\n      const y = centerY + radius * Math.sin(angle);\n      \n      return (\n        <g key={`scale-${level.level}`} className=\"nexus-radar-chart__scale-label-group\">\n          <rect\n            x={x - 24}\n            y={y - 11}\n            width={48}\n            height={22}\n            rx={11}\n            className=\"nexus-radar-chart__scale-label-bg\"\n          />\n          <text\n            x={x}\n            y={y + 4}\n            className=\"nexus-radar-chart__scale-label\"\n            textAnchor=\"middle\"\n          >\n            {level.value.toLocaleString()}\n          </text>\n        </g>\n      );\n    });\n  };\n\n  const renderAxisLabels = () => {\n    if (!showAxisLabels) return null;\n    \n    return axisRays.map(ray => (\n      <text\n        key={`axis-${ray.axis}`}\n        x={ray.labelX}\n        y={ray.labelY + 4}\n        className=\"nexus-radar-chart__axis-label\"\n        textAnchor=\"middle\"\n      >\n        {ray.axis}\n      </text>\n    ));\n  };\n\n  const renderSeries = () => {\n    return seriesPaths.map((seriesData, index) => (\n      <g\n        key={seriesData.id}\n        className=\"nexus-radar-chart__series\"\n        onMouseEnter={() => {\n          setHoveredSeries(seriesData.id);\n          onDataPointHover?.(null, seriesData.id);\n        }}\n        onMouseLeave={() => {\n          setHoveredSeries(null);\n          onDataPointHover?.(null, null);\n        }}\n      >\n        <polygon\n          points={seriesData.points}\n          fill={seriesData.color}\n          fillOpacity={seriesData.fillOpacity}\n          stroke={seriesData.color}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          className=\"nexus-radar-chart__series-path\"\n          style={{\n            transition: animate ? `all ${animationDuration}ms ease-in-out` : 'none'\n          }}\n        />\n      </g>\n    ));\n  };\n\n  const renderLegend = () => {\n    if (!showLegend || !series.length) return null;\n\n    return (\n      <div className={`nexus-radar-chart__legend nexus-radar-chart__legend--${legendPosition}`}>\n        {series.map((seriesData, index) => (\n          <div key={seriesData.id} className=\"nexus-radar-chart__legend-item\">\n            <div \n              className=\"nexus-radar-chart__legend-indicator\"\n              style={{ backgroundColor: seriesData.color || colors[index % colors.length] }}\n            />\n            <span className=\"nexus-radar-chart__legend-label\">{seriesData.title}</span>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div ref={ref} className={classes} style={{ height, width }} {...props}>\n        <div className=\"nexus-radar-chart__loading\">\n          <div className=\"nexus-radar-chart__loading-spinner\" />\n          <span className=\"nexus-radar-chart__loading-text\">Loading chart...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div ref={ref} className={classes} style={{ height, width }} {...props}>\n        <div className=\"nexus-radar-chart__error\">\n          <span className=\"nexus-radar-chart__error-text\">{error}</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (!series.length) {\n    return (\n      <div ref={ref} className={classes} style={{ height, width }} {...props}>\n        <div className=\"nexus-radar-chart__empty\">\n          <span className=\"nexus-radar-chart__empty-text\">No data available</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div ref={ref} className={classes} style={{ height, width }} {...props}>\n      {title && (\n        <div className=\"nexus-radar-chart__header\">\n          <h3 className=\"nexus-radar-chart__title\">{title}</h3>\n        </div>\n      )}\n      \n      <div className=\"nexus-radar-chart__container\">\n        <div className=\"nexus-radar-chart__chart\">\n          <svg\n            className=\"nexus-radar-chart__svg\"\n            viewBox=\"0 0 312 312\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          >\n            {/* Scale levels (concentric polygons) */}\n            {renderScaleLevels()}\n            \n            {/* Axis rays */}\n            {renderAxisRays()}\n            \n            {/* Scale labels */}\n            {renderScaleLabels()}\n            \n            {/* Axis labels */}\n            {renderAxisLabels()}\n            \n            {/* Data series */}\n            {renderSeries()}\n          </svg>\n        </div>\n        \n        {renderLegend()}\n      </div>\n    </div>\n  );\n});\n\nRadarChart.displayName = 'RadarChart';\n","import React from 'react';\nimport './piechart.css';\n\nexport interface PieChartDataPoint {\n  label: string;\n  value: number;\n  color?: string;\n}\n\nexport interface PieChartProps {\n  data: PieChartDataPoint[];\n  size?: 'xxs' | 'xs' | 'sm' | 'md' | 'lg';\n  showLegend?: boolean;\n  innerRadius?: number;\n  outerRadius?: number;\n  className?: string;\n  legendPosition?: 'right' | 'bottom';\n  centerContent?: React.ReactNode;\n  animationDuration?: number;\n  strokeWidth?: number;\n  strokeColor?: string;\n}\n\nconst DEFAULT_COLORS = [\n  '#0F172A', // slate-900\n  '#475569', // slate-600  \n  '#64748B', // slate-500\n  '#94A3B8', // slate-400\n  '#CBD5E1', // slate-300\n  '#E2E8F0', // slate-200\n];\n\nconst SIZE_CONFIG = {\n  xxs: { size: 120, strokeWidth: 30 },\n  xs: { size: 160, strokeWidth: 40 },\n  sm: { size: 200, strokeWidth: 50 },\n  md: { size: 240, strokeWidth: 60 },\n  lg: { size: 280, strokeWidth: 70 },\n};\n\nfunction calculatePieSlices(data: PieChartDataPoint[]): Array<PieChartDataPoint & { \n  angle: number; \n  startAngle: number; \n  endAngle: number;\n  color: string;\n}> {\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  let currentAngle = -90; // Start from top\n\n  return data.map((item, index) => {\n    const angle = (item.value / total) * 360;\n    const startAngle = currentAngle;\n    const endAngle = currentAngle + angle;\n    currentAngle = endAngle;\n\n    return {\n      ...item,\n      angle,\n      startAngle,\n      endAngle,\n      color: item.color || DEFAULT_COLORS[index % DEFAULT_COLORS.length],\n    };\n  });\n}\n\nfunction createArcPath(\n  centerX: number,\n  centerY: number,\n  innerRadius: number,\n  outerRadius: number,\n  startAngle: number,\n  endAngle: number\n): string {\n  const startAngleRad = (startAngle * Math.PI) / 180;\n  const endAngleRad = (endAngle * Math.PI) / 180;\n\n  const x1 = centerX + outerRadius * Math.cos(startAngleRad);\n  const y1 = centerY + outerRadius * Math.sin(startAngleRad);\n  const x2 = centerX + outerRadius * Math.cos(endAngleRad);\n  const y2 = centerY + outerRadius * Math.sin(endAngleRad);\n\n  const x3 = centerX + innerRadius * Math.cos(endAngleRad);\n  const y3 = centerY + innerRadius * Math.sin(endAngleRad);\n  const x4 = centerX + innerRadius * Math.cos(startAngleRad);\n  const y4 = centerY + innerRadius * Math.sin(startAngleRad);\n\n  const largeArcFlag = endAngle - startAngle <= 180 ? '0' : '1';\n\n  return [\n    'M', x1, y1,\n    'A', outerRadius, outerRadius, 0, largeArcFlag, 1, x2, y2,\n    'L', x3, y3,\n    'A', innerRadius, innerRadius, 0, largeArcFlag, 0, x4, y4,\n    'Z'\n  ].join(' ');\n}\n\nconst LegendItem: React.FC<{ \n  color: string; \n  label: string; \n  className?: string;\n}> = ({ color, label, className }) => (\n  <div className={`piechart-legend-item ${className || ''}`}>\n    <div className=\"piechart-legend-dot\" style={{ backgroundColor: color }} />\n    <span className=\"piechart-legend-label\">{label}</span>\n  </div>\n);\n\nconst Legend: React.FC<{\n  items: Array<{ color: string; label: string }>;\n  position: 'right' | 'bottom';\n  className?: string;\n}> = ({ items, position, className }) => (\n  <div className={`piechart-legend piechart-legend--${position} ${className || ''}`}>\n    {items.map((item, index) => (\n      <LegendItem \n        key={`${item.label}-${index}`}\n        color={item.color}\n        label={item.label}\n      />\n    ))}\n  </div>\n);\n\nexport const PieChart: React.FC<PieChartProps> = ({\n  data,\n  size = 'md',\n  showLegend = true,\n  innerRadius,\n  outerRadius,\n  className = '',\n  legendPosition = 'right',\n  centerContent,\n  animationDuration = 300,\n  strokeWidth = 1,\n  strokeColor = 'transparent',\n  ...props\n}) => {\n  const config = SIZE_CONFIG[size];\n  const defaultInnerRadius = config.size / 2 - config.strokeWidth;\n  const defaultOuterRadius = config.size / 2;\n  \n  const finalInnerRadius = innerRadius ?? defaultInnerRadius;\n  const finalOuterRadius = outerRadius ?? defaultOuterRadius;\n  \n  const slices = calculatePieSlices(data);\n  const centerX = config.size / 2;\n  const centerY = config.size / 2;\n\n  const legendItems = slices.map(slice => ({\n    color: slice.color,\n    label: slice.label,\n  }));\n\n  if (data.length === 0) {\n    return (\n      <div className={`piechart piechart--${size} piechart--empty ${className}`}>\n        <div className=\"piechart-empty-message\">No data available</div>\n      </div>\n    );\n  }\n\n  return (\n    <div \n      className={`piechart piechart--${size} ${showLegend ? `piechart--with-legend piechart--legend-${legendPosition}` : ''} ${className}`}\n      {...props}\n    >\n      <div className=\"piechart-chart-container\">\n        <svg\n          className=\"piechart-svg\"\n          width={config.size}\n          height={config.size}\n          viewBox={`0 0 ${config.size} ${config.size}`}\n        >\n          {/* Background ring */}\n          <circle\n            cx={centerX}\n            cy={centerY}\n            r={finalOuterRadius}\n            fill=\"var(--piechart-background-color, #E2E8F0)\"\n            className=\"piechart-background\"\n          />\n          <circle\n            cx={centerX}\n            cy={centerY}\n            r={finalInnerRadius}\n            fill=\"var(--piechart-inner-background, white)\"\n            className=\"piechart-inner-background\"\n          />\n\n          {/* Pie slices */}\n          {slices.map((slice, index) => {\n            const path = createArcPath(\n              centerX,\n              centerY,\n              finalInnerRadius,\n              finalOuterRadius,\n              slice.startAngle,\n              slice.endAngle\n            );\n\n            return (\n              <path\n                key={`slice-${index}`}\n                d={path}\n                fill={slice.color}\n                stroke={strokeColor}\n                strokeWidth={strokeWidth}\n                className=\"piechart-slice\"\n                style={{\n                  animationDelay: `${index * 50}ms`,\n                  animationDuration: `${animationDuration}ms`,\n                }}\n              />\n            );\n          })}\n        </svg>\n\n        {/* Center content */}\n        {centerContent && (\n          <div className=\"piechart-center-content\">\n            {centerContent}\n          </div>\n        )}\n      </div>\n\n      {/* Legend */}\n      {showLegend && (\n        <Legend \n          items={legendItems}\n          position={legendPosition}\n          className=\"piechart-legend-container\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default PieChart;\n","import React from 'react';\nimport './activitychart.css';\n\nexport interface ActivityDataPoint {\n  label: string;\n  value: number;\n  color?: string;\n}\n\nexport interface ActivityChartProps {\n  /** Data for the three activity rings */\n  data: ActivityDataPoint[];\n  /** Size variant */\n  size?: 'xs' | 'sm' | 'md' | 'lg';\n  /** Show center label */\n  showLabel?: boolean;\n  /** Show legend */\n  showLegend?: boolean;\n  /** Legend position */\n  legendPosition?: 'bottom' | 'right';\n  /** Center text label */\n  label?: string;\n  /** Center value to display */\n  value?: string | number;\n  /** Custom className */\n  className?: string;\n}\n\n// Default colors matching the Figma design\nconst DEFAULT_COLORS = [\n  '#0F172A', // Brand-600 - outer ring\n  '#64748B', // Brand-400 - middle ring  \n  '#09101F', // Brand-800 - inner ring\n];\n\n// Size configurations\nconst SIZE_CONFIG = {\n  xs: {\n    container: 160,\n    outerRing: { radius: 76, strokeWidth: 8 },\n    middleRing: { radius: 68, strokeWidth: 8 },\n    innerRing: { radius: 56, strokeWidth: 8 },\n    numberSize: 20,\n    labelSize: 12\n  },\n  sm: {\n    container: 200,\n    outerRing: { radius: 94, strokeWidth: 12 },\n    middleRing: { radius: 83, strokeWidth: 12 },\n    innerRing: { radius: 67, strokeWidth: 12 },\n    numberSize: 24,\n    labelSize: 12\n  },\n  md: {\n    container: 240,\n    outerRing: { radius: 112, strokeWidth: 16 },\n    middleRing: { radius: 100, strokeWidth: 16 },\n    innerRing: { radius: 80, strokeWidth: 16 },\n    numberSize: 30,\n    labelSize: 14\n  },\n  lg: {\n    container: 280,\n    outerRing: { radius: 131, strokeWidth: 18 },\n    middleRing: { radius: 116, strokeWidth: 18 },\n    innerRing: { radius: 92, strokeWidth: 18 },\n    numberSize: 36,\n    labelSize: 14\n  }\n};\n\ninterface ActivityRingProps {\n  radius: number;\n  strokeWidth: number;\n  progress: number;\n  color: string;\n  backgroundColor?: string;\n}\n\nconst ActivityRing: React.FC<ActivityRingProps> = ({\n  radius,\n  strokeWidth,\n  progress,\n  color,\n  backgroundColor = '#F5F5F5'\n}) => {\n  const center = 140; // Fixed center point\n  const circumference = 2 * Math.PI * radius;\n  const strokeDasharray = circumference;\n  const strokeDashoffset = circumference * (1 - progress);\n\n  return (\n    <g>\n      {/* Background ring */}\n      <circle\n        cx={center}\n        cy={center}\n        r={radius}\n        fill=\"none\"\n        stroke={backgroundColor}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      {/* Progress ring */}\n      <circle\n        cx={center}\n        cy={center}\n        r={radius}\n        fill=\"none\"\n        stroke={color}\n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        strokeDasharray={strokeDasharray}\n        strokeDashoffset={strokeDashoffset}\n        transform={`rotate(-90 ${center} ${center})`}\n        className=\"activity-ring-progress\"\n      />\n    </g>\n  );\n};\n\nconst LegendItem: React.FC<{\n  color: string;\n  label: string;\n  isVertical?: boolean;\n}> = ({ color, label, isVertical = false }) => (\n  <div className={`activity-legend-item ${isVertical ? 'activity-legend-item--vertical' : ''}`}>\n    <div className=\"activity-legend-dot\" style={{ backgroundColor: color }} />\n    <span className=\"activity-legend-label\">{label}</span>\n  </div>\n);\n\nexport const ActivityChart: React.FC<ActivityChartProps> = ({\n  data = [],\n  size = 'md',\n  showLabel = true,\n  showLegend = false,\n  legendPosition = 'bottom',\n  label = 'Active users',\n  value = '1,000',\n  className = '',\n  ...props\n}) => {\n  const config = SIZE_CONFIG[size];\n  const center = 140;\n\n  // Ensure we have exactly 3 data points (outer, middle, inner)\n  const normalizedData = [...data];\n  while (normalizedData.length < 3) {\n    normalizedData.push({ label: `Series ${normalizedData.length + 1}`, value: 0.75 });\n  }\n  normalizedData.splice(3); // Keep only first 3\n\n  // Add default colors if not provided\n  const dataWithColors = normalizedData.map((item, index) => ({\n    ...item,\n    color: item.color || DEFAULT_COLORS[index % DEFAULT_COLORS.length]\n  }));\n\n  const containerClasses = [\n    'activity-chart',\n    `activity-chart--${size}`,\n    showLegend && `activity-chart--legend-${legendPosition}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClasses} {...props}>\n      <div className=\"activity-chart-container\">\n        <div className=\"activity-chart-gauge\">\n          <svg\n            width={config.container}\n            height={config.container}\n            viewBox=\"0 0 280 280\"\n            className=\"activity-chart-svg\"\n          >\n            {/* Outer ring */}\n            <ActivityRing\n              radius={config.outerRing.radius}\n              strokeWidth={config.outerRing.strokeWidth}\n              progress={Math.min(Math.max(dataWithColors[0]?.value || 0, 0), 1)}\n              color={dataWithColors[0]?.color || DEFAULT_COLORS[0]}\n            />\n            \n            {/* Middle ring */}\n            <ActivityRing\n              radius={config.middleRing.radius}\n              strokeWidth={config.middleRing.strokeWidth}\n              progress={Math.min(Math.max(dataWithColors[1]?.value || 0, 0), 1)}\n              color={dataWithColors[1]?.color || DEFAULT_COLORS[1]}\n            />\n            \n            {/* Inner ring */}\n            <ActivityRing\n              radius={config.innerRing.radius}\n              strokeWidth={config.innerRing.strokeWidth}\n              progress={Math.min(Math.max(dataWithColors[2]?.value || 0, 0), 1)}\n              color={dataWithColors[2]?.color || DEFAULT_COLORS[2]}\n            />\n          </svg>\n\n          {/* Center content */}\n          <div className=\"activity-chart-center\">\n            {showLabel && (\n              <div className=\"activity-chart-center-content\">\n                <div \n                  className=\"activity-chart-label\"\n                  style={{ fontSize: `${config.labelSize}px` }}\n                >\n                  {label}\n                </div>\n                <div \n                  className=\"activity-chart-value\"\n                  style={{ fontSize: `${config.numberSize}px` }}\n                >\n                  {value}\n                </div>\n              </div>\n            )}\n            {!showLabel && (\n              <div \n                className=\"activity-chart-value activity-chart-value--no-label\"\n                style={{ fontSize: `${config.numberSize}px` }}\n              >\n                {value}\n              </div>\n            )}\n          </div>\n        </div>\n\n        {showLegend && (\n          <div className={`activity-chart-legend activity-chart-legend--${legendPosition}`}>\n            {dataWithColors.map((item, index) => (\n              <LegendItem\n                key={index}\n                color={item.color}\n                label={item.label}\n                isVertical={legendPosition === 'right'}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './pagination.css';\n\nexport interface PaginationProps {\n  /** Current page number (1-based) */\n  currentPage: number;\n  /** Total number of pages */\n  totalPages: number;\n  /** Type of pagination layout */\n  type?: 'page-default' | 'page-minimal' | 'card-default' | 'card-minimal' | 'card-button-group' | 'dots' | 'lines';\n  /** Shape of page number buttons */\n  shape?: 'square' | 'circle';\n  /** Responsive breakpoint */\n  breakpoint?: 'desktop' | 'mobile';\n  /** Alignment for certain types */\n  alignment?: 'left' | 'center' | 'right';\n  /** Show Previous/Next buttons */\n  showNavigation?: boolean;\n  /** Show page numbers */\n  showPageNumbers?: boolean;\n  /** Show page info text (e.g., \"Page 1 of 10\") */\n  showPageInfo?: boolean;\n  /** Maximum number of page buttons to show */\n  maxPageButtons?: number;\n  /** Custom labels */\n  labels?: {\n    previous?: string;\n    next?: string;\n    pageInfo?: string; // Template: \"Page {current} of {total}\"\n  };\n  /** Event handlers */\n  onPageChange?: (page: number) => void;\n  onPrevious?: () => void;\n  onNext?: () => void;\n  /** Additional CSS class */\n  className?: string;\n  /** Disabled state */\n  disabled?: boolean;\n  /** Pagination dots configuration */\n  dotsConfig?: {\n    size?: 'md' | 'lg';\n    color?: 'primary-light' | 'primary-dark' | 'gray-light' | 'gray-dark';\n    framed?: boolean;\n  };\n}\n\ninterface PaginationButtonProps {\n  page: number;\n  isActive?: boolean;\n  isEllipsis?: boolean;\n  shape?: 'square' | 'circle';\n  onClick?: (page: number) => void;\n  disabled?: boolean;\n}\n\ninterface NavigationButtonProps {\n  direction: 'previous' | 'next';\n  type?: 'link' | 'secondary' | 'tertiary' | 'icon-only';\n  disabled?: boolean;\n  onClick?: () => void;\n  children?: React.ReactNode;\n}\n\nconst ArrowLeftIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M15.8333 10H4.16663M4.16663 10L9.99996 15.8334M4.16663 10L9.99996 4.16669\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.67\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ArrowRightIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M4.16675 10H15.8334M15.8334 10L10.0001 4.16669M15.8334 10L10.0001 15.8334\"\n      stroke=\"currentColor\"\n      strokeWidth=\"1.67\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\ninterface PaginationDotsProps {\n  currentPage: number;\n  totalPages: number;\n  size?: 'md' | 'lg';\n  color?: 'primary-light' | 'primary-dark' | 'gray-light' | 'gray-dark';\n  framed?: boolean;\n  style?: 'dot' | 'line';\n  onPageChange?: (page: number) => void;\n  disabled?: boolean;\n}\n\nconst PaginationDots: React.FC<PaginationDotsProps> = ({\n  currentPage,\n  totalPages,\n  size = 'md',\n  color = 'primary-light',\n  framed = false,\n  style = 'dot',\n  onPageChange,\n  disabled = false\n}) => {\n  const handleDotClick = (page: number) => {\n    if (!disabled && onPageChange && page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const containerClasses = [\n    'pagination-dots',\n    `pagination-dots--${size}`,\n    `pagination-dots--${color}`,\n    `pagination-dots--${style}`,\n    framed ? 'pagination-dots--framed' : ''\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClasses} role=\"tablist\" aria-label=\"Pagination dots\">\n      {Array.from({ length: totalPages }, (_, index) => {\n        const page = index + 1;\n        const isActive = page === currentPage;\n\n        return (\n          <button\n            key={page}\n            className={`pagination-dot ${isActive ? 'pagination-dot--active' : ''}`}\n            onClick={() => handleDotClick(page)}\n            disabled={disabled}\n            role=\"tab\"\n            aria-selected={isActive}\n            aria-label={`Go to page ${page}`}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nconst PaginationButton: React.FC<PaginationButtonProps> = ({\n  page,\n  isActive = false,\n  isEllipsis = false,\n  shape = 'square',\n  onClick,\n  disabled = false\n}) => {\n  const handleClick = () => {\n    if (!disabled && !isEllipsis && onClick) {\n      onClick(page);\n    }\n  };\n\n  return (\n    <button\n      className={`pagination-number ${shape === 'circle' ? 'pagination-number--circle' : 'pagination-number--square'} ${\n        isActive ? 'pagination-number--active' : ''\n      } ${isEllipsis ? 'pagination-number--ellipsis' : ''}`}\n      onClick={handleClick}\n      disabled={disabled || isEllipsis}\n      aria-current={isActive ? 'page' : undefined}\n      aria-label={isEllipsis ? 'More pages' : `Page ${page}`}\n    >\n      {isEllipsis ? '...' : page}\n    </button>\n  );\n};\n\nconst NavigationButton: React.FC<NavigationButtonProps> = ({\n  direction,\n  type = 'link',\n  disabled = false,\n  onClick,\n  children\n}) => {\n  const icon = direction === 'previous' ? <ArrowLeftIcon /> : <ArrowRightIcon />;\n  const label = direction === 'previous' ? 'Previous' : 'Next';\n\n  return (\n    <button\n      className={`pagination-nav pagination-nav--${direction} pagination-nav--${type}`}\n      onClick={onClick}\n      disabled={disabled}\n      aria-label={`Go to ${direction} page`}\n    >\n      {type === 'icon-only' ? (\n        icon\n      ) : direction === 'previous' ? (\n        <>\n          {icon}\n          <span>{children || label}</span>\n        </>\n      ) : (\n        <>\n          <span>{children || label}</span>\n          {icon}\n        </>\n      )}\n    </button>\n  );\n};\n\nconst ButtonGroup: React.FC<{\n  currentPage: number;\n  totalPages: number;\n  maxPageButtons: number;\n  onPageChange?: (page: number) => void;\n  onPrevious?: () => void;\n  onNext?: () => void;\n  disabled?: boolean;\n}> = ({ currentPage, totalPages, maxPageButtons, onPageChange, onPrevious, onNext, disabled }) => {\n  const pages = generatePageNumbers(currentPage, totalPages, maxPageButtons);\n\n  return (\n    <div className=\"pagination-button-group\">\n      <button\n        className=\"pagination-button-group__button pagination-button-group__button--previous\"\n        onClick={onPrevious}\n        disabled={disabled || currentPage <= 1}\n        aria-label=\"Go to previous page\"\n      >\n        <ArrowLeftIcon />\n        <span>Previous</span>\n      </button>\n      \n      {pages.map((page, index) => (\n        <React.Fragment key={index}>\n          {index > 0 && <div className=\"pagination-button-group__divider\" />}\n          <button\n            className={`pagination-button-group__button pagination-button-group__button--page ${\n              page === currentPage ? 'pagination-button-group__button--active' : ''\n            }`}\n            onClick={() => onPageChange && onPageChange(page)}\n            disabled={disabled || typeof page !== 'number'}\n            aria-current={page === currentPage ? 'page' : undefined}\n            aria-label={typeof page === 'number' ? `Page ${page}` : 'More pages'}\n          >\n            {typeof page === 'number' ? page : '...'}\n          </button>\n        </React.Fragment>\n      ))}\n      \n      <div className=\"pagination-button-group__divider\" />\n      <button\n        className=\"pagination-button-group__button pagination-button-group__button--next\"\n        onClick={onNext}\n        disabled={disabled || currentPage >= totalPages}\n        aria-label=\"Go to next page\"\n      >\n        <span>Next</span>\n        <ArrowRightIcon />\n      </button>\n    </div>\n  );\n};\n\nconst generatePageNumbers = (\n  currentPage: number,\n  totalPages: number,\n  maxButtons: number\n): (number | string)[] => {\n  if (totalPages <= maxButtons) {\n    return Array.from({ length: totalPages }, (_, i) => i + 1);\n  }\n\n  const pages: (number | string)[] = [];\n  const halfMax = Math.floor(maxButtons / 2);\n\n  // Always show first page\n  pages.push(1);\n\n  if (currentPage <= halfMax + 2) {\n    // Show pages from start\n    for (let i = 2; i <= Math.min(maxButtons - 1, totalPages - 1); i++) {\n      pages.push(i);\n    }\n    if (totalPages > maxButtons) {\n      pages.push('...');\n    }\n  } else if (currentPage >= totalPages - halfMax - 1) {\n    // Show pages from end\n    if (totalPages > maxButtons) {\n      pages.push('...');\n    }\n    for (let i = Math.max(totalPages - maxButtons + 2, 2); i <= totalPages - 1; i++) {\n      pages.push(i);\n    }\n  } else {\n    // Show pages around current\n    pages.push('...');\n    for (let i = currentPage - halfMax + 1; i <= currentPage + halfMax - 1; i++) {\n      pages.push(i);\n    }\n    pages.push('...');\n  }\n\n  // Always show last page (if not already included)\n  if (totalPages > 1) {\n    pages.push(totalPages);\n  }\n\n  return pages;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  currentPage,\n  totalPages,\n  type = 'page-default',\n  shape = 'square',\n  breakpoint = 'desktop',\n  alignment = 'center',\n  showNavigation = true,\n  showPageNumbers = true,\n  showPageInfo = false,\n  maxPageButtons = 7,\n  labels = {},\n  onPageChange,\n  onPrevious,\n  onNext,\n  className = '',\n  disabled = false,\n  dotsConfig = {\n    size: 'md',\n    color: 'primary-light',\n    framed: false\n  },\n  ...props\n}) => {\n  const {\n    previous = 'Previous',\n    next = 'Next',\n    pageInfo = `Page ${currentPage} of ${totalPages}`\n  } = labels;\n\n  const handlePageChange = (page: number) => {\n    if (page !== currentPage && onPageChange) {\n      onPageChange(page);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentPage > 1) {\n      if (onPrevious) {\n        onPrevious();\n      } else if (onPageChange) {\n        onPageChange(currentPage - 1);\n      }\n    }\n  };\n\n  const handleNext = () => {\n    if (currentPage < totalPages) {\n      if (onNext) {\n        onNext();\n      } else if (onPageChange) {\n        onPageChange(currentPage + 1);\n      }\n    }\n  };\n\n  const pages = generatePageNumbers(currentPage, totalPages, maxPageButtons);\n\n  const containerClasses = [\n    'pagination',\n    `pagination--${type}`,\n    `pagination--${breakpoint}`,\n    `pagination--${alignment}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Handle dots and lines pagination types\n  if (type === 'dots' || type === 'lines') {\n    const style = type === 'dots' ? 'dot' : 'line';\n\n    return (\n      <nav className={containerClasses} aria-label=\"Pagination\" {...props}>\n        <PaginationDots\n          currentPage={currentPage}\n          totalPages={totalPages}\n          size={dotsConfig.size}\n          color={dotsConfig.color}\n          framed={dotsConfig.framed}\n          style={style}\n          onPageChange={handlePageChange}\n          disabled={disabled}\n        />\n      </nav>\n    );\n  }\n\n  // Mobile simplified layout\n  if (breakpoint === 'mobile') {\n    if (type.includes('button-group')) {\n      return (\n        <nav className={containerClasses} aria-label=\"Pagination\" {...props}>\n          <ButtonGroup\n            currentPage={currentPage}\n            totalPages={totalPages}\n            maxPageButtons={5} // Fewer buttons on mobile\n            onPageChange={handlePageChange}\n            onPrevious={handlePrevious}\n            onNext={handleNext}\n            disabled={disabled}\n          />\n        </nav>\n      );\n    }\n\n    return (\n      <nav className={containerClasses} aria-label=\"Pagination\" {...props}>\n        {showNavigation && (\n          <NavigationButton\n            direction=\"previous\"\n            type=\"icon-only\"\n            disabled={disabled || currentPage <= 1}\n            onClick={handlePrevious}\n          />\n        )}\n        \n        {showPageInfo && (\n          <div className=\"pagination-info\">\n            {pageInfo}\n          </div>\n        )}\n        \n        {showNavigation && (\n          <NavigationButton\n            direction=\"next\"\n            type=\"icon-only\"\n            disabled={disabled || currentPage >= totalPages}\n            onClick={handleNext}\n          />\n        )}\n      </nav>\n    );\n  }\n\n  // Desktop layouts\n  if (type.includes('button-group')) {\n    return (\n      <nav className={containerClasses} aria-label=\"Pagination\" {...props}>\n        <ButtonGroup\n          currentPage={currentPage}\n          totalPages={totalPages}\n          maxPageButtons={maxPageButtons}\n          onPageChange={handlePageChange}\n          onPrevious={handlePrevious}\n          onNext={handleNext}\n          disabled={disabled}\n        />\n      </nav>\n    );\n  }\n\n  if (type.includes('minimal')) {\n    const navType = type.includes('card') ? 'secondary' : 'link';\n    \n    return (\n      <nav className={containerClasses} aria-label=\"Pagination\" {...props}>\n        {alignment === 'left' && showPageInfo && (\n          <div className=\"pagination-info\">\n            {pageInfo}\n          </div>\n        )}\n        \n        {showNavigation && (\n          <div className=\"pagination-actions\">\n            <NavigationButton\n              direction=\"previous\"\n              type={navType}\n              disabled={disabled || currentPage <= 1}\n              onClick={handlePrevious}\n            >\n              {previous}\n            </NavigationButton>\n            \n            <NavigationButton\n              direction=\"next\"\n              type={navType}\n              disabled={disabled || currentPage >= totalPages}\n              onClick={handleNext}\n            >\n              {next}\n            </NavigationButton>\n          </div>\n        )}\n        \n        {(alignment === 'center' || alignment === 'right') && showPageInfo && (\n          <div className=\"pagination-info\">\n            {pageInfo}\n          </div>\n        )}\n      </nav>\n    );\n  }\n\n  // Default page layout with page numbers\n  const navType = type.includes('card') ? 'secondary' : 'link';\n\n  return (\n    <nav className={containerClasses} aria-label=\"Pagination\" {...props}>\n      {showNavigation && (\n        <NavigationButton\n          direction=\"previous\"\n          type={navType}\n          disabled={disabled || currentPage <= 1}\n          onClick={handlePrevious}\n        >\n          {previous}\n        </NavigationButton>\n      )}\n      \n      {showPageNumbers && (\n        <div className=\"pagination-numbers\">\n          {pages.map((page, index) => (\n            <PaginationButton\n              key={index}\n              page={typeof page === 'number' ? page : 0}\n              isActive={page === currentPage}\n              isEllipsis={typeof page === 'string'}\n              shape={shape}\n              onClick={handlePageChange}\n              disabled={disabled}\n            />\n          ))}\n        </div>\n      )}\n      \n      {showNavigation && (\n        <NavigationButton\n          direction=\"next\"\n          type={navType}\n          disabled={disabled || currentPage >= totalPages}\n          onClick={handleNext}\n        >\n          {next}\n        </NavigationButton>\n      )}\n    </nav>\n  );\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport './carousel.css';\n\nexport interface CarouselProps {\n  /** Array of image URLs or slide content */\n  slides: (string | React.ReactNode)[];\n  /** Size of the carousel */\n  size?: 'md' | 'lg';\n  /** Theme variant */\n  theme?: 'primary' | 'dark' | 'light';\n  /** Auto-play interval in milliseconds (0 to disable) */\n  autoPlay?: number;\n  /** Show navigation arrows */\n  showArrows?: boolean;\n  /** Show pagination dots */\n  showDots?: boolean;\n  /** Custom alt text for images */\n  altTexts?: string[];\n  /** Event handlers */\n  onSlideChange?: (index: number) => void;\n  /** Additional CSS class */\n  className?: string;\n  /** Disabled state */\n  disabled?: boolean;\n}\n\ninterface CarouselArrowProps {\n  direction: 'left' | 'right';\n  size?: 'md' | 'lg';\n  theme?: 'primary' | 'dark' | 'light';\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nconst ChevronLeftIcon: React.FC<{ size?: 'md' | 'lg' }> = ({ size = 'md' }) => {\n  const iconSize = size === 'lg' ? 24 : 20;\n  const strokeWidth = size === 'lg' ? 2 : 1.67;\n\n  return (\n    <svg width={iconSize} height={iconSize} viewBox={`0 0 ${iconSize} ${iconSize}`} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path \n        d={size === 'lg' ? \"M15 18L9 12L15 6\" : \"M12.5 15L7.5 10L12.5 5\"}\n        stroke=\"currentColor\" \n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nconst ChevronRightIcon: React.FC<{ size?: 'md' | 'lg' }> = ({ size = 'md' }) => {\n  const iconSize = size === 'lg' ? 24 : 20;\n  const strokeWidth = size === 'lg' ? 2 : 1.67;\n\n  return (\n    <svg width={iconSize} height={iconSize} viewBox={`0 0 ${iconSize} ${iconSize}`} fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path \n        d={size === 'lg' ? \"M9 18L15 12L9 6\" : \"M7.5 15L12.5 10L7.5 5\"}\n        stroke=\"currentColor\" \n        strokeWidth={strokeWidth}\n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n};\n\nconst CarouselArrow: React.FC<CarouselArrowProps> = ({\n  direction,\n  size = 'md',\n  theme = 'primary',\n  onClick,\n  disabled = false\n}) => {\n  const Icon = direction === 'left' ? ChevronLeftIcon : ChevronRightIcon;\n  \n  return (\n    <button\n      className={`carousel-arrow carousel-arrow--${direction} carousel-arrow--${size} carousel-arrow--${theme}`}\n      onClick={onClick}\n      disabled={disabled}\n      aria-label={`${direction === 'left' ? 'Previous' : 'Next'} slide`}\n    >\n      <Icon size={size} />\n    </button>\n  );\n};\n\ninterface CarouselDotsProps {\n  currentSlide: number;\n  totalSlides: number;\n  size?: 'md' | 'lg';\n  theme?: 'primary' | 'dark' | 'light';\n  onDotClick?: (index: number) => void;\n  disabled?: boolean;\n}\n\nconst CarouselDots: React.FC<CarouselDotsProps> = ({\n  currentSlide,\n  totalSlides,\n  size = 'md',\n  theme = 'primary',\n  onDotClick,\n  disabled = false\n}) => {\n  const handleDotClick = (index: number) => {\n    if (!disabled && onDotClick && index !== currentSlide) {\n      onDotClick(index);\n    }\n  };\n\n  const containerClasses = [\n    'carousel-dots',\n    `carousel-dots--${size}`,\n    `carousel-dots--${theme}`\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div className={containerClasses} role=\"tablist\" aria-label=\"Slide navigation\">\n      {Array.from({ length: totalSlides }, (_, index) => {\n        const isActive = index === currentSlide;\n        \n        return (\n          <button\n            key={index}\n            className={`carousel-dot ${isActive ? 'carousel-dot--active' : ''}`}\n            onClick={() => handleDotClick(index)}\n            disabled={disabled}\n            role=\"tab\"\n            aria-selected={isActive}\n            aria-label={`Go to slide ${index + 1}`}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport const Carousel: React.FC<CarouselProps> = ({\n  slides,\n  size = 'md',\n  theme = 'primary',\n  autoPlay = 0,\n  showArrows = true,\n  showDots = true,\n  altTexts = [],\n  onSlideChange,\n  className = '',\n  disabled = false,\n  ...props\n}) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const intervalRef = useRef<NodeJS.Timeout | null>(null);\n  const touchStartX = useRef<number | null>(null);\n  const touchEndX = useRef<number | null>(null);\n\n  const totalSlides = slides.length;\n\n  const goToSlide = (index: number) => {\n    if (disabled || isTransitioning || index === currentSlide) return;\n    \n    setIsTransitioning(true);\n    setCurrentSlide(index);\n    \n    if (onSlideChange) {\n      onSlideChange(index);\n    }\n    \n    setTimeout(() => setIsTransitioning(false), 300);\n  };\n\n  const goToPrevious = () => {\n    const prevIndex = currentSlide === 0 ? totalSlides - 1 : currentSlide - 1;\n    goToSlide(prevIndex);\n  };\n\n  const goToNext = () => {\n    const nextIndex = currentSlide === totalSlides - 1 ? 0 : currentSlide + 1;\n    goToSlide(nextIndex);\n  };\n\n  const handleTouchStart = (e: React.TouchEvent) => {\n    if (disabled) return;\n    touchStartX.current = e.touches[0].clientX;\n  };\n\n  const handleTouchMove = (e: React.TouchEvent) => {\n    if (disabled) return;\n    touchEndX.current = e.touches[0].clientX;\n  };\n\n  const handleTouchEnd = () => {\n    if (disabled || touchStartX.current === null || touchEndX.current === null) return;\n    \n    const deltaX = touchStartX.current - touchEndX.current;\n    const minSwipeDistance = 50;\n    \n    if (Math.abs(deltaX) > minSwipeDistance) {\n      if (deltaX > 0) {\n        goToNext();\n      } else {\n        goToPrevious();\n      }\n    }\n    \n    touchStartX.current = null;\n    touchEndX.current = null;\n  };\n\n  // Auto-play functionality\n  useEffect(() => {\n    if (autoPlay > 0 && !disabled) {\n      intervalRef.current = setInterval(() => {\n        goToNext();\n      }, autoPlay);\n      \n      return () => {\n        if (intervalRef.current) {\n          clearInterval(intervalRef.current);\n        }\n      };\n    }\n  }, [autoPlay, currentSlide, disabled, totalSlides]);\n\n  // Cleanup interval on unmount\n  useEffect(() => {\n    return () => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n    };\n  }, []);\n\n  const containerClasses = [\n    'carousel',\n    `carousel--${size}`,\n    `carousel--${theme}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  const renderSlide = (slide: string | React.ReactNode, index: number) => {\n    if (typeof slide === 'string') {\n      return (\n        <img\n          src={slide}\n          alt={altTexts[index] || `Slide ${index + 1}`}\n          className=\"carousel-image\"\n          loading={index === 0 ? 'eager' : 'lazy'}\n        />\n      );\n    }\n    return slide;\n  };\n\n  return (\n    <div \n      className={containerClasses} \n      {...props}\n      onTouchStart={handleTouchStart}\n      onTouchMove={handleTouchMove}\n      onTouchEnd={handleTouchEnd}\n    >\n      <div className=\"carousel-container\">\n        <div \n          className=\"carousel-track\"\n          style={{ transform: `translateX(-${currentSlide * 100}%)` }}\n        >\n          {slides.map((slide, index) => (\n            <div\n              key={index}\n              className={`carousel-slide ${index === currentSlide ? 'carousel-slide--active' : ''}`}\n              aria-hidden={index !== currentSlide}\n            >\n              {renderSlide(slide, index)}\n            </div>\n          ))}\n        </div>\n\n        {showArrows && totalSlides > 1 && (\n          <>\n            <CarouselArrow\n              direction=\"left\"\n              size={size}\n              theme={theme}\n              onClick={goToPrevious}\n              disabled={disabled}\n            />\n            <CarouselArrow\n              direction=\"right\"\n              size={size}\n              theme={theme}\n              onClick={goToNext}\n              disabled={disabled}\n            />\n          </>\n        )}\n      </div>\n\n      {showDots && totalSlides > 1 && (\n        <CarouselDots\n          currentSlide={currentSlide}\n          totalSlides={totalSlides}\n          size={size}\n          theme={theme}\n          onDotClick={goToSlide}\n          disabled={disabled}\n        />\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './message.css';\n\nexport interface MessageProps {\n  /** Message content */\n  content: string;\n  /** Message type */\n  type: 'sent' | 'received';\n  /** Message variant */\n  variant?: 'text' | 'attachment' | 'typing';\n  /** Sender information */\n  sender: {\n    name: string;\n    avatar?: string;\n    isOnline?: boolean;\n  };\n  /** Timestamp */\n  timestamp: string;\n  /** Attachment information (for attachment variant) */\n  attachment?: {\n    name: string;\n    size: string;\n    type: 'image' | 'document';\n    url?: string;\n  };\n  /** Reactions on the message */\n  reactions?: MessageReaction[];\n  /** Show reactions */\n  showReactions?: boolean;\n  /** Event handlers */\n  onReactionClick?: (emoji: string) => void;\n  onAttachmentClick?: () => void;\n  /** Additional CSS class */\n  className?: string;\n}\n\nexport interface MessageReaction {\n  emoji: string;\n  count?: number;\n  reacted?: boolean;\n}\n\ninterface MessageReactionProps {\n  emoji: string;\n  count?: number;\n  reacted?: boolean;\n  onClick?: () => void;\n}\n\ninterface TypingIndicatorProps {\n  sender: {\n    name: string;\n    avatar?: string;\n  };\n}\n\ninterface FileIconProps {\n  type: 'image' | 'document';\n}\n\nconst FileIcon: React.FC<FileIconProps> = ({ type }) => {\n  if (type === 'image') {\n    return (\n      <div className=\"message-file-icon message-file-icon--image\">\n        <div className=\"message-file-icon__background\">\n          <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path \n              d=\"M3.33333 14H12.6667C13.403 14 14 13.403 14 12.6667V3.33333C14 2.59695 13.403 2 12.6667 2H3.33333C2.59695 2 2 2.59695 2 3.33333V12.6667C2 13.403 2.59695 14 3.33333 14ZM3.33333 14L10.6667 6.66667L14 10M6.66667 5.66667C6.66667 6.21895 6.21895 6.66667 5.66667 6.66667C5.11438 6.66667 4.66667 6.21895 4.66667 5.66667C4.66667 5.11438 5.11438 4.66667 5.66667 4.66667C6.21895 4.66667 6.66667 5.11438 6.66667 5.66667Z\" \n              stroke=\"#0F172A\" \n              strokeWidth=\"1.33333\" \n              strokeLinecap=\"round\" \n              strokeLinejoin=\"round\"\n            />\n          </svg>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"message-file-icon message-file-icon--document\">\n      <div className=\"message-file-icon__background\">\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path \n            d=\"M8.66675 1.33337H4.00008C3.64646 1.33337 3.30732 1.47385 3.05727 1.7239C2.80722 1.97395 2.66675 2.31309 2.66675 2.66671V13.3334C2.66675 13.687 2.80722 14.0261 3.05727 14.2762C3.30732 14.5262 3.64646 14.6667 4.00008 14.6667H12.0001C12.3537 14.6667 12.6928 14.5262 12.9429 14.2762C13.1929 14.0261 13.3334 13.687 13.3334 13.3334V6.00004M8.66675 1.33337L13.3334 6.00004M8.66675 1.33337V6.00004H13.3334\" \n            stroke=\"#0F172A\" \n            strokeWidth=\"1.33333\" \n            strokeLinecap=\"round\" \n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nconst MessageReactionComponent: React.FC<MessageReactionProps> = ({\n  emoji,\n  count,\n  reacted = false,\n  onClick\n}) => {\n  const handleClick = () => {\n    if (onClick) {\n      onClick();\n    }\n  };\n\n  return (\n    <button\n      className={`message-reaction ${reacted ? 'message-reaction--reacted' : ''}`}\n      onClick={handleClick}\n      aria-label={`React with ${emoji}${count ? ` (${count} reactions)` : ''}`}\n    >\n      <span className=\"message-reaction__emoji\">{emoji}</span>\n      {count && <span className=\"message-reaction__count\">{count}</span>}\n    </button>\n  );\n};\n\nconst TypingIndicator: React.FC<TypingIndicatorProps> = ({ sender }) => {\n  return (\n    <div className=\"message message--received message--typing\">\n      <div className=\"message__avatar\">\n        {sender.avatar ? (\n          <img src={sender.avatar} alt={sender.name} className=\"message__avatar-image\" />\n        ) : (\n          <div className=\"message__avatar-placeholder\">\n            {sender.name.charAt(0).toUpperCase()}\n          </div>\n        )}\n      </div>\n      <div className=\"message__content\">\n        <div className=\"message__sender\">{sender.name}</div>\n        <div className=\"message__bubble message__bubble--typing\">\n          <div className=\"typing-indicator\">\n            <div className=\"typing-indicator__dot\"></div>\n            <div className=\"typing-indicator__dot\"></div>\n            <div className=\"typing-indicator__dot\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport const Message: React.FC<MessageProps> = ({\n  content,\n  type,\n  variant = 'text',\n  sender,\n  timestamp,\n  attachment,\n  reactions = [],\n  showReactions = false,\n  onReactionClick,\n  onAttachmentClick,\n  className = '',\n  ...props\n}) => {\n  if (variant === 'typing') {\n    return <TypingIndicator sender={sender} />;\n  }\n\n  const messageClasses = [\n    'message',\n    `message--${type}`,\n    `message--${variant}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  const handleAttachmentClick = () => {\n    if (onAttachmentClick) {\n      onAttachmentClick();\n    }\n  };\n\n  const handleReactionClick = (emoji: string) => {\n    if (onReactionClick) {\n      onReactionClick(emoji);\n    }\n  };\n\n  const renderMessageContent = () => {\n    if (variant === 'attachment' && attachment) {\n      return (\n        <div className=\"message__attachment\" onClick={handleAttachmentClick}>\n          <FileIcon type={attachment.type} />\n          <div className=\"message__attachment-info\">\n            <div className=\"message__attachment-name\">{attachment.name}</div>\n            <div className=\"message__attachment-size\">{attachment.size}</div>\n          </div>\n        </div>\n      );\n    }\n\n    return <div className=\"message__text\">{content}</div>;\n  };\n\n  return (\n    <div className={messageClasses} {...props}>\n      {type === 'received' && (\n        <div className=\"message__avatar\">\n          {sender.avatar ? (\n            <img src={sender.avatar} alt={sender.name} className=\"message__avatar-image\" />\n          ) : (\n            <div className=\"message__avatar-placeholder\">\n              {sender.name.charAt(0).toUpperCase()}\n            </div>\n          )}\n          {sender.isOnline && <div className=\"message__avatar-status\"></div>}\n        </div>\n      )}\n      \n      <div className=\"message__content\">\n        <div className=\"message__header\">\n          <div className=\"message__sender\">{type === 'sent' ? 'You' : sender.name}</div>\n          <div className=\"message__timestamp\">{timestamp}</div>\n        </div>\n        \n        <div className={`message__bubble message__bubble--${type} message__bubble--${variant}`}>\n          {renderMessageContent()}\n        </div>\n        \n        {showReactions && reactions.length > 0 && (\n          <div className=\"message__reactions\">\n            {reactions.map((reaction, index) => (\n              <MessageReactionComponent\n                key={index}\n                emoji={reaction.emoji}\n                count={reaction.count}\n                reacted={reaction.reacted}\n                onClick={() => handleReactionClick(reaction.emoji)}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport { MessageReactionComponent as MessageReaction, TypingIndicator };\n","import React, { useState, useRef, useEffect } from 'react';\nimport { Message, MessageProps } from './Message';\nimport './chatinterface.css';\n\nexport interface ChatInterfaceProps {\n  /** Chat title */\n  title?: string;\n  /** List of messages */\n  messages: MessageProps[];\n  /** Current user info for sent messages */\n  currentUser?: {\n    name: string;\n    avatar?: string;\n  };\n  /** Show participants count */\n  participantCount?: number;\n  /** Active tab */\n  activeTab?: 'messages' | 'participants';\n  /** Placeholder text for message input */\n  placeholder?: string;\n  /** Loading state */\n  isLoading?: boolean;\n  /** Event handlers */\n  onSendMessage?: (message: string) => void;\n  onTabChange?: (tab: 'messages' | 'participants') => void;\n  onClose?: () => void;\n  /** Additional CSS class */\n  className?: string;\n  /** Show as slide-out panel */\n  variant?: 'inline' | 'panel';\n}\n\ninterface ChatTabsProps {\n  activeTab: 'messages' | 'participants';\n  participantCount?: number;\n  onTabChange: (tab: 'messages' | 'participants') => void;\n}\n\ninterface MessageInputProps {\n  placeholder: string;\n  onSendMessage: (message: string) => void;\n  disabled?: boolean;\n}\n\ninterface DateDividerProps {\n  date: string;\n}\n\nconst SendIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0_send)\">\n      <path \n        d=\"M18.3332 1.66663L9.1665 10.8333M18.3332 1.66663L12.4998 18.3333L9.1665 10.8333M18.3332 1.66663L1.6665 7.49996L9.1665 10.8333\" \n        stroke=\"currentColor\" \n        strokeWidth=\"1.67\" \n        strokeLinecap=\"round\" \n        strokeLinejoin=\"round\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_send\">\n        <rect width=\"20\" height=\"20\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nconst CloseIcon = () => (\n  <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path \n      d=\"M15 5L5 15M5 5L15 15\" \n      stroke=\"currentColor\" \n      strokeWidth=\"1.66667\" \n      strokeLinecap=\"round\" \n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nconst ChatTabs: React.FC<ChatTabsProps> = ({ activeTab, participantCount, onTabChange }) => {\n  return (\n    <div className=\"chat-tabs\">\n      <div className=\"chat-tabs__container\">\n        <button\n          className={`chat-tabs__tab ${activeTab === 'messages' ? 'chat-tabs__tab--active' : ''}`}\n          onClick={() => onTabChange('messages')}\n        >\n          Messages\n        </button>\n        <button\n          className={`chat-tabs__tab ${activeTab === 'participants' ? 'chat-tabs__tab--active' : ''}`}\n          onClick={() => onTabChange('participants')}\n        >\n          Participants\n          {participantCount && (\n            <span className=\"chat-tabs__badge\">{participantCount}</span>\n          )}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst MessageInput: React.FC<MessageInputProps> = ({ placeholder, onSendMessage, disabled = false }) => {\n  const [message, setMessage] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (message.trim() && !disabled) {\n      onSendMessage(message.trim());\n      setMessage('');\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n\n  return (\n    <form className=\"message-input\" onSubmit={handleSubmit}>\n      <div className=\"message-input__field\">\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          disabled={disabled}\n          className=\"message-input__input\"\n        />\n      </div>\n      <button\n        type=\"submit\"\n        disabled={!message.trim() || disabled}\n        className=\"message-input__send\"\n        aria-label=\"Send message\"\n      >\n        <SendIcon />\n      </button>\n    </form>\n  );\n};\n\nconst DateDivider: React.FC<DateDividerProps> = ({ date }) => {\n  return (\n    <div className=\"date-divider\">\n      <div className=\"date-divider__line\"></div>\n      <div className=\"date-divider__text\">{date}</div>\n      <div className=\"date-divider__line\"></div>\n    </div>\n  );\n};\n\nexport const ChatInterface: React.FC<ChatInterfaceProps> = ({\n  title = 'Group chat',\n  messages = [],\n  currentUser,\n  participantCount,\n  activeTab = 'messages',\n  placeholder = 'Message',\n  isLoading = false,\n  onSendMessage,\n  onTabChange,\n  onClose,\n  className = '',\n  variant = 'inline',\n  ...props\n}) => {\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const messagesContainerRef = useRef<HTMLDivElement>(null);\n\n  // Auto-scroll to bottom when new messages arrive\n  useEffect(() => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  }, [messages]);\n\n  const handleSendMessage = (message: string) => {\n    if (onSendMessage) {\n      onSendMessage(message);\n    }\n  };\n\n  const handleTabChange = (tab: 'messages' | 'participants') => {\n    if (onTabChange) {\n      onTabChange(tab);\n    }\n  };\n\n  const containerClasses = [\n    'chat-interface',\n    `chat-interface--${variant}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  // Group messages by date for dividers\n  const groupedMessages = messages.reduce((groups: { date: string; messages: MessageProps[] }[], message) => {\n    const messageDate = new Date(message.timestamp).toDateString();\n    const lastGroup = groups[groups.length - 1];\n    \n    if (lastGroup && lastGroup.date === messageDate) {\n      lastGroup.messages.push(message);\n    } else {\n      groups.push({ date: messageDate, messages: [message] });\n    }\n    \n    return groups;\n  }, []);\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(yesterday.getDate() - 1);\n\n    if (date.toDateString() === today.toDateString()) {\n      return 'Today';\n    } else if (date.toDateString() === yesterday.toDateString()) {\n      return 'Yesterday';\n    } else {\n      return date.toLocaleDateString('en-US', { \n        weekday: 'long',\n        month: 'long',\n        day: 'numeric'\n      });\n    }\n  };\n\n  return (\n    <div className={containerClasses} {...props}>\n      {variant === 'panel' && (\n        <div className=\"chat-interface__panel\">\n          <div className=\"chat-interface__header\">\n            <div className=\"chat-interface__title-section\">\n              <h2 className=\"chat-interface__title\">{title}</h2>\n              {onClose && (\n                <button \n                  className=\"chat-interface__close\"\n                  onClick={onClose}\n                  aria-label=\"Close chat\"\n                >\n                  <CloseIcon />\n                </button>\n              )}\n            </div>\n            \n            <ChatTabs\n              activeTab={activeTab}\n              participantCount={participantCount}\n              onTabChange={handleTabChange}\n            />\n          </div>\n\n          <div className=\"chat-interface__content\">\n            {activeTab === 'messages' ? (\n              <>\n                <div className=\"chat-interface__messages\" ref={messagesContainerRef}>\n                  {groupedMessages.map((group, groupIndex) => (\n                    <div key={groupIndex} className=\"chat-interface__message-group\">\n                      {groupIndex > 0 && <DateDivider date={formatDate(group.date)} />}\n                      \n                      {group.messages.map((message, messageIndex) => (\n                        <Message\n                          key={`${groupIndex}-${messageIndex}`}\n                          {...message}\n                        />\n                      ))}\n                    </div>\n                  ))}\n                  \n                  {isLoading && (\n                    <Message\n                      content=\"\"\n                      type=\"received\"\n                      variant=\"typing\"\n                      sender={{ name: 'Someone', isOnline: true }}\n                      timestamp=\"\"\n                    />\n                  )}\n                  \n                  <div ref={messagesEndRef} />\n                </div>\n\n                <div className=\"chat-interface__footer\">\n                  <MessageInput\n                    placeholder={placeholder}\n                    onSendMessage={handleSendMessage}\n                    disabled={isLoading}\n                  />\n                </div>\n              </>\n            ) : (\n              <div className=\"chat-interface__participants\">\n                <p>Participants view would go here</p>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n\n      {variant === 'inline' && (\n        <div className=\"chat-interface__inline\">\n          <div className=\"chat-interface__messages\" ref={messagesContainerRef}>\n            {groupedMessages.map((group, groupIndex) => (\n              <div key={groupIndex} className=\"chat-interface__message-group\">\n                {groupIndex > 0 && <DateDivider date={formatDate(group.date)} />}\n                \n                {group.messages.map((message, messageIndex) => (\n                  <Message\n                    key={`${groupIndex}-${messageIndex}`}\n                    {...message}\n                  />\n                ))}\n              </div>\n            ))}\n            \n            {isLoading && (\n              <Message\n                content=\"\"\n                type=\"received\"\n                variant=\"typing\"\n                sender={{ name: 'Someone', isOnline: true }}\n                timestamp=\"\"\n              />\n            )}\n            \n            <div ref={messagesEndRef} />\n          </div>\n\n          <div className=\"chat-interface__footer\">\n            <MessageInput\n              placeholder={placeholder}\n              onSendMessage={handleSendMessage}\n              disabled={isLoading}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React from 'react';\nimport './table.css';\n\nexport interface TableColumn {\n  /** Unique identifier for the column */\n  key: string;\n  /** Column header text */\n  header: string;\n  /** Column width (optional) */\n  width?: string;\n  /** Whether this column is sortable */\n  sortable?: boolean;\n  /** Alignment of content in this column */\n  align?: 'left' | 'center' | 'right';\n  /** Custom render function for cell content */\n  render?: (value: any, row: any, index: number) => React.ReactNode;\n}\n\nexport interface TableAction {\n  /** Action identifier */\n  key: string;\n  /** Action label (for accessibility) */\n  label: string;\n  /** Action icon */\n  icon: React.ReactNode;\n  /** Action handler */\n  onClick: (row: any, index: number) => void;\n  /** Whether action is destructive */\n  destructive?: boolean;\n  /** Whether action is disabled for this row */\n  disabled?: (row: any) => boolean;\n}\n\nexport interface TableProps {\n  /** Table data */\n  data: any[];\n  /** Column configuration */\n  columns: TableColumn[];\n  /** Available actions for each row */\n  actions?: TableAction[];\n  /** Table variant */\n  variant?: 'default' | 'minimal';\n  /** Table size */\n  size?: 'sm' | 'md' | 'lg';\n  /** Whether to show hover states */\n  hoverable?: boolean;\n  /** Whether rows are selectable */\n  selectable?: boolean;\n  /** Selected row keys */\n  selectedRows?: string[];\n  /** Selection change handler */\n  onSelectionChange?: (selectedKeys: string[]) => void;\n  /** Row key field (defaults to 'id') */\n  rowKey?: string;\n  /** Loading state */\n  loading?: boolean;\n  /** Empty state message */\n  emptyMessage?: string;\n  /** Caption for table */\n  caption?: string;\n  /** Sticky header */\n  stickyHeader?: boolean;\n  /** Sort configuration */\n  sortConfig?: {\n    key: string;\n    direction: 'asc' | 'desc';\n  };\n  /** Sort change handler */\n  onSort?: (key: string, direction: 'asc' | 'desc') => void;\n  /** Additional CSS class */\n  className?: string;\n}\n\nconst EditIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n    <path d=\"M12.1464 1.85355C12.3417 1.65829 12.6583 1.65829 12.8536 1.85355L14.1464 3.14645C14.3417 3.34171 14.3417 3.65829 14.1464 3.85355L5.35355 12.6464C5.25979 12.7402 5.13261 12.7918 5 12.7918H2.75C2.33579 12.7918 2 12.456 2 12.0418V9.79179C2 9.65918 2.05164 9.532 2.14541 9.43823L10.9383 0.645348C11.1335 0.450086 11.45 0.450086 11.6453 0.645348L12.1464 1.85355Z\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n    <path d=\"M10.5 3L13 5.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n  </svg>\n);\n\nconst DeleteIcon = () => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n    <path d=\"M6.5 1.75H9.5C9.77614 1.75 10 1.97386 10 2.25V3H6V2.25C6 1.97386 6.22386 1.75 6.5 1.75Z\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n    <path d=\"M3.75 3.75H12.25\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n    <path d=\"M4.75 3.75V12.25C4.75 12.6642 5.08579 13 5.5 13H10.5C10.9142 13 11.25 12.6642 11.25 12.25V3.75\" stroke=\"currentColor\" strokeWidth=\"1.5\"/>\n    <path d=\"M7 6.5V9.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n    <path d=\"M9 6.5V9.5\" stroke=\"currentColor\" strokeWidth=\"1.5\" strokeLinecap=\"round\"/>\n  </svg>\n);\n\nconst SortIcon = ({ direction }: { direction?: 'asc' | 'desc' }) => (\n  <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" className={`table-sort-icon ${direction ? `table-sort-icon--${direction}` : ''}`}>\n    <path d=\"M8 3.5L5.5 6.5H10.5L8 3.5Z\" fill={direction === 'asc' ? 'currentColor' : '#9CA3AF'}/>\n    <path d=\"M8 12.5L10.5 9.5H5.5L8 12.5Z\" fill={direction === 'desc' ? 'currentColor' : '#9CA3AF'}/>\n  </svg>\n);\n\n/**\n * Table component for displaying tabular data with sorting, selection, and actions\n */\nexport const Table: React.FC<TableProps> = ({\n  data,\n  columns,\n  actions = [],\n  variant = 'default',\n  size = 'md',\n  hoverable = true,\n  selectable = false,\n  selectedRows = [],\n  onSelectionChange,\n  rowKey = 'id',\n  loading = false,\n  emptyMessage = 'No data available',\n  caption,\n  stickyHeader = false,\n  sortConfig,\n  onSort,\n  className = '',\n  ...props\n}) => {\n  const tableClasses = [\n    'nexus-table',\n    `nexus-table--${variant}`,\n    `nexus-table--${size}`,\n    hoverable && 'nexus-table--hoverable',\n    selectable && 'nexus-table--selectable',\n    stickyHeader && 'nexus-table--sticky-header',\n    loading && 'nexus-table--loading',\n    className\n  ].filter(Boolean).join(' ');\n\n  const handleSort = (columnKey: string) => {\n    if (!onSort) return;\n    \n    const currentDirection = sortConfig?.key === columnKey ? sortConfig.direction : undefined;\n    const newDirection = currentDirection === 'asc' ? 'desc' : 'asc';\n    onSort(columnKey, newDirection);\n  };\n\n  const handleSelectAll = () => {\n    if (!onSelectionChange) return;\n    \n    const allKeys = data.map(row => row[rowKey]);\n    const isAllSelected = allKeys.length > 0 && allKeys.every(key => selectedRows.includes(key));\n    \n    if (isAllSelected) {\n      onSelectionChange([]);\n    } else {\n      onSelectionChange(allKeys);\n    }\n  };\n\n  const handleRowSelect = (rowKey: string) => {\n    if (!onSelectionChange) return;\n    \n    const isSelected = selectedRows.includes(rowKey);\n    if (isSelected) {\n      onSelectionChange(selectedRows.filter(key => key !== rowKey));\n    } else {\n      onSelectionChange([...selectedRows, rowKey]);\n    }\n  };\n\n  const renderCell = (column: TableColumn, row: any, rowIndex: number) => {\n    const value = row[column.key];\n    \n    if (column.render) {\n      return column.render(value, row, rowIndex);\n    }\n    \n    return value;\n  };\n\n  const isAllSelected = data.length > 0 && data.every(row => selectedRows.includes(row[rowKey]));\n  const isIndeterminate = selectedRows.length > 0 && !isAllSelected;\n\n  if (loading) {\n    return (\n      <div className={tableClasses}>\n        <div className=\"nexus-table__loading\">\n          <div className=\"nexus-table__spinner\" />\n          <span>Loading...</span>\n        </div>\n      </div>\n    );\n  }\n\n  if (data.length === 0) {\n    return (\n      <div className={tableClasses}>\n        <div className=\"nexus-table__empty\">\n          <span>{emptyMessage}</span>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={tableClasses} {...props}>\n      <table className=\"nexus-table__table\">\n        {caption && <caption className=\"nexus-table__caption\">{caption}</caption>}\n        <thead className=\"nexus-table__header\">\n          <tr className=\"nexus-table__header-row\">\n            {selectable && (\n              <th className=\"nexus-table__header-cell nexus-table__header-cell--checkbox\">\n                <input\n                  type=\"checkbox\"\n                  className=\"nexus-table__checkbox\"\n                  checked={isAllSelected}\n                  ref={input => {\n                    if (input) input.indeterminate = isIndeterminate;\n                  }}\n                  onChange={handleSelectAll}\n                  aria-label=\"Select all rows\"\n                />\n              </th>\n            )}\n            {columns.map((column) => (\n              <th\n                key={column.key}\n                className={`nexus-table__header-cell nexus-table__header-cell--${column.align || 'left'} ${\n                  column.sortable ? 'nexus-table__header-cell--sortable' : ''\n                }`}\n                style={{ width: column.width }}\n                onClick={column.sortable ? () => handleSort(column.key) : undefined}\n              >\n                <div className=\"nexus-table__header-content\">\n                  <span>{column.header}</span>\n                  {column.sortable && (\n                    <SortIcon \n                      direction={sortConfig?.key === column.key ? sortConfig.direction : undefined}\n                    />\n                  )}\n                </div>\n              </th>\n            ))}\n            {actions.length > 0 && (\n              <th className=\"nexus-table__header-cell nexus-table__header-cell--actions\">\n                Actions\n              </th>\n            )}\n          </tr>\n        </thead>\n        <tbody className=\"nexus-table__body\">\n          {data.map((row, rowIndex) => {\n            const rowId = row[rowKey];\n            const isSelected = selectedRows.includes(rowId);\n            \n            return (\n              <tr\n                key={rowId}\n                className={`nexus-table__row ${isSelected ? 'nexus-table__row--selected' : ''}`}\n              >\n                {selectable && (\n                  <td className=\"nexus-table__cell nexus-table__cell--checkbox\">\n                    <input\n                      type=\"checkbox\"\n                      className=\"nexus-table__checkbox\"\n                      checked={isSelected}\n                      onChange={() => handleRowSelect(rowId)}\n                      aria-label={`Select row ${rowIndex + 1}`}\n                    />\n                  </td>\n                )}\n                {columns.map((column) => (\n                  <td\n                    key={column.key}\n                    className={`nexus-table__cell nexus-table__cell--${column.align || 'left'}`}\n                  >\n                    {renderCell(column, row, rowIndex)}\n                  </td>\n                ))}\n                {actions.length > 0 && (\n                  <td className=\"nexus-table__cell nexus-table__cell--actions\">\n                    <div className=\"nexus-table__actions\">\n                      {actions.map((action) => {\n                        const isDisabled = action.disabled?.(row) || false;\n                        return (\n                          <button\n                            key={action.key}\n                            className={`nexus-table__action ${\n                              action.destructive ? 'nexus-table__action--destructive' : ''\n                            }`}\n                            onClick={() => action.onClick(row, rowIndex)}\n                            disabled={isDisabled}\n                            aria-label={action.label}\n                            title={action.label}\n                          >\n                            {action.icon}\n                          </button>\n                        );\n                      })}\n                    </div>\n                  </td>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\nexport { EditIcon, DeleteIcon, SortIcon };\n","import React from 'react';\nimport './typography.css';\n\nexport interface TypographyProps {\n  /** Typography variant */\n  variant?: \n    | 'display-2xl'\n    | 'display-xl' \n    | 'display-lg'\n    | 'display-md'\n    | 'display-sm'\n    | 'display-xs'\n    | 'text-xl'\n    | 'text-lg'\n    | 'text-md'\n    | 'text-sm'\n    | 'text-xs';\n  /** Font weight */\n  weight?: 'regular' | 'medium' | 'semibold' | 'bold';\n  /** Text color */\n  color?: 'default' | 'secondary' | 'muted';\n  /** Text content */\n  children: React.ReactNode;\n  /** HTML element to render */\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'p' | 'span' | 'div';\n  /** Additional CSS class */\n  className?: string;\n  /** Text alignment */\n  align?: 'left' | 'center' | 'right';\n}\n\n/**\n * Typography component for consistent text styling across the design system\n */\nexport const Typography: React.FC<TypographyProps> = ({\n  variant = 'text-md',\n  weight = 'regular',\n  color = 'default',\n  children,\n  as = 'p',\n  className = '',\n  align = 'left',\n  ...props\n}) => {\n  const Component = as;\n  \n  const classes = [\n    'nexus-typography',\n    `nexus-typography--${variant}`,\n    `nexus-typography--${weight}`,\n    `nexus-typography--${color}`,\n    `nexus-typography--${align}`,\n    className\n  ].filter(Boolean).join(' ');\n\n  return (\n    <Component className={classes} {...props}>\n      {children}\n    </Component>\n  );\n};\n\n// Helper components for common use cases\nexport const Heading: React.FC<Omit<TypographyProps, 'variant'> & { level?: 1 | 2 | 3 | 4 | 5 | 6 }> = ({ \n  level = 1, \n  weight = 'semibold',\n  ...props \n}) => {\n  const variantMap: Record<1 | 2 | 3 | 4 | 5 | 6, TypographyProps['variant']> = {\n    1: 'display-2xl',\n    2: 'display-xl',\n    3: 'display-lg',\n    4: 'display-md',\n    5: 'display-sm',\n    6: 'display-xs'\n  };\n  \n  const asMap: Record<1 | 2 | 3 | 4 | 5 | 6, 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'> = {\n    1: 'h1',\n    2: 'h2', \n    3: 'h3',\n    4: 'h4',\n    5: 'h5',\n    6: 'h6'\n  };\n  \n  return (\n    <Typography \n      variant={variantMap[level]}\n      weight={weight}\n      as={asMap[level]}\n      {...props}\n    />\n  );\n};\n\nexport const Text: React.FC<Omit<TypographyProps, 'variant'> & { size?: 'xl' | 'lg' | 'md' | 'sm' | 'xs' }> = ({\n  size = 'md',\n  weight = 'regular',\n  ...props\n}) => {\n  return (\n    <Typography \n      variant={`text-${size}` as TypographyProps['variant']}\n      weight={weight}\n      {...props}\n    />\n  );\n};\n\nexport const Caption: React.FC<Omit<TypographyProps, 'variant'>> = ({\n  weight = 'regular',\n  color = 'muted',\n  ...props\n}) => {\n  return (\n    <Typography \n      variant=\"text-xs\"\n      weight={weight}\n      color={color}\n      as=\"span\"\n      {...props}\n    />\n  );\n};\n\nexport default Typography;\n","import React from 'react';\n\nexport interface TextProps {\n  /** Text content */\n  children: React.ReactNode;\n  /**\n   * Font size variant\n   * @default 'md'\n   * xs: 12px, sm: 14px, md: 16px, lg: 18px, xl: 20px, 2xl: 24px, 3xl: 30px, 4xl: 36px\n   */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | '4xl';\n  /**\n   * Font weight\n   * @default 'normal'\n   * Use 'medium' (500) for emphasis, 'semibold' (600) for strong emphasis, 'bold' (700) for maximum emphasis\n   */\n  fw?: number | 'normal' | 'medium' | 'semibold' | 'bold' | 500 | 600 | 700;\n  /**\n   * Text color\n   * @default 'inherit'\n   * Use 'dimmed' for secondary text, or any custom color value\n   */\n  c?: 'dimmed' | string;\n  /**\n   * Margin bottom for consistent spacing\n   * @default undefined\n   * xs: 4px, sm: 8px, md: 16px, lg: 24px, xl: 32px\n   *\n   * SPACING GUIDELINES:\n   * - Use 'sm' (8px) for tight content like lists\n   * - Use 'md' (16px) for standard paragraphs\n   * - Use 'lg' (24px) for section breaks\n   * - Use 'xl' (32px) for major section separation\n   *\n   * For more complex layouts, prefer explicit div wrappers with tokens.spacing values\n   */\n  mb?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | string;\n  /** HTML element to render as */\n  component?: keyof JSX.IntrinsicElements;\n  /** Additional CSS class */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Click handler */\n  onClick?: () => void;\n  /** Additional props */\n  [key: string]: any;\n}\n\nconst sizeMap = {\n  xs: '12px',\n  sm: '14px',\n  md: '16px',\n  lg: '18px',\n  xl: '20px',\n  '2xl': '24px',\n  '3xl': '30px',\n  '4xl': '36px',\n};\n\nconst spacingMap = {\n  xs: '4px',\n  sm: '8px',\n  md: '16px',\n  lg: '24px',\n  xl: '32px',\n};\n\nconst weightMap = {\n  normal: '400',\n  medium: '500',\n  semibold: '600',\n  bold: '700',\n  500: '500',\n  600: '600',\n  700: '700',\n};\n\n/**\n * Text component for displaying text content with consistent typography\n */\nexport const Text = React.forwardRef<HTMLElement, TextProps>(\n  ({ \n    children, \n    size = 'md', \n    fw,\n    c,\n    mb,\n    component = 'span',\n    className = '', \n    style,\n    ...props \n  }, ref) => {\n    const Component = component as any;\n    \n    const fontSize = sizeMap[size as keyof typeof sizeMap] || size;\n    const fontWeight = fw ? (weightMap[fw as keyof typeof weightMap] || fw) : undefined;\n    const color = c === 'dimmed' ? '#6b7280' : c;\n    const marginBottom = mb ? (spacingMap[mb as keyof typeof spacingMap] || mb) : undefined;\n    \n    const textStyle: React.CSSProperties = {\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      fontSize,\n      fontWeight,\n      color,\n      marginBottom,\n      margin: marginBottom ? `0 0 ${marginBottom} 0` : undefined,\n      lineHeight: '1.5',\n      ...style,\n    };\n\n    return (\n      <Component\n        ref={ref}\n        className={`nexus-text ${className}`}\n        style={textStyle}\n        {...props}\n      >\n        {children}\n      </Component>\n    );\n  }\n);\n\nText.displayName = 'Text';\n","import React from 'react';\n\nexport interface AvatarProps {\n  /** Avatar content (initials, icon, or image) */\n  children?: React.ReactNode;\n  /** Image source URL */\n  src?: string;\n  /** Alt text for the image */\n  alt?: string;\n  /** Avatar size */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | number;\n  /** Border radius */\n  radius?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | number;\n  /** Background color */\n  color?: string;\n  /** Additional CSS class */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Click handler */\n  onClick?: () => void;\n}\n\nconst sizeMap = {\n  xs: '24px',\n  sm: '32px',\n  md: '40px',\n  lg: '48px',\n  xl: '56px',\n};\n\nconst radiusMap = {\n  xs: '2px',\n  sm: '4px',\n  md: '8px',\n  lg: '12px',\n  xl: '50%',\n};\n\nconst fontSizeMap = {\n  xs: '10px',\n  sm: '12px',\n  md: '14px',\n  lg: '16px',\n  xl: '18px',\n};\n\n/**\n * Avatar component for displaying user profile images or initials\n */\nexport const Avatar = React.forwardRef<HTMLDivElement, AvatarProps>(\n  ({ \n    children, \n    src,\n    alt,\n    size = 'md', \n    radius = 'md',\n    color = '#6b7280',\n    className = '', \n    style,\n    onClick,\n    ...props \n  }, ref) => {\n    const avatarSize = typeof size === 'number' ? `${size}px` : sizeMap[size];\n    const borderRadius = typeof radius === 'number' ? `${radius}px` : radiusMap[radius];\n    const fontSize = typeof size === 'number' ? `${size * 0.35}px` : fontSizeMap[size];\n    \n    const avatarStyle: React.CSSProperties = {\n      width: avatarSize,\n      height: avatarSize,\n      borderRadius,\n      backgroundColor: src ? 'transparent' : color,\n      color: 'white',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize,\n      fontWeight: '500',\n      fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif',\n      overflow: 'hidden',\n      cursor: onClick ? 'pointer' : 'default',\n      flexShrink: 0,\n      ...style,\n    };\n\n    const imageStyle: React.CSSProperties = {\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`nexus-avatar ${className}`}\n        style={avatarStyle}\n        onClick={onClick}\n        {...props}\n      >\n        {src ? (\n          <img src={src} alt={alt} style={imageStyle} />\n        ) : (\n          children\n        )}\n      </div>\n    );\n  }\n);\n\nAvatar.displayName = 'Avatar';","// Icon path definitions for all icons\nexport const iconPaths: Record<string, string | string[]> = {\n  'activity': 'M22 12H18L15 21L9 3L6 12H2',\n  'airplay': 'M5 17H4C3.46957 17 2.96086 16.7893 2.58579 16.4142C2.21071 16.0391 2 15.5304 2 15V5C2 4.46957 2.21071 3.96086 2.58579 3.58579C2.96086 3.21071 3.46957 3 4 3H20C20.5304 3 21.0391 3.21071 21.4142 3.58579C21.7893 3.96086 22 4.46957 22 5V15C22 15.5304 21.7893 16.0391 21.4142 16.4142C21.0391 16.7893 20.5304 17 20 17H19M12 15L17 21H7L12 15Z',\n  'alert-circle': 'M12 8V12M12 16H12.01M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'alert-octagon': 'M12 8V12M12 16H12.01M7.86 2H16.14L22 7.86V16.14L16.14 22H7.86L2 16.14V7.86L7.86 2Z',\n  'alert-triangle': 'M11.9998 7.99996V12M11.9998 16H12.0098M10.2898 2.85996L1.81978 17C1.64514 17.3024 1.55274 17.6453 1.55177 17.9945C1.55079 18.3437 1.64127 18.6871 1.8142 18.9905C1.98714 19.2939 2.2365 19.5467 2.53748 19.7238C2.83847 19.9009 3.18058 19.9961 3.52978 20H20.4698C20.819 19.9961 21.1611 19.9009 21.4621 19.7238C21.7631 19.5467 22.0124 19.2939 22.1854 18.9905C22.3583 18.6871 22.4488 18.3437 22.4478 17.9945C22.4468 17.6453 22.3544 17.3024 22.1798 17L13.7098 2.85996C13.5315 2.56607 13.2805 2.32308 12.981 2.15444C12.6814 1.98581 12.3435 1.89722 11.9998 1.89722C11.656 1.89722 11.3181 1.98581 11.0186 2.15444C10.7191 2.32308 10.468 2.56607 10.2898 2.85996Z',\n  'align-center': 'M18 10H6M21 6H3M21 14H3M18 18H6',\n  'align-justify': 'M21 10H3M21 6H3M21 14H3M21 18H3',\n  'align-left': 'M17 10H3M21 6H3M21 14H3M17 18H3',\n  'align-right': 'M21 10H7M21 6H3M21 14H3M21 18H7',\n  'anchor': 'M12 8C13.6569 8 15 6.65685 15 5C15 3.34315 13.6569 2 12 2C10.3431 2 9 3.34315 9 5C9 6.65685 10.3431 8 12 8ZM12 8V22M12 22C9.34784 22 6.8043 20.9464 4.92893 19.0711C3.05357 17.1957 2 14.6522 2 12H5M12 22C14.6522 22 17.1957 20.9464 19.0711 19.0711C20.9464 17.1957 22 14.6522 22 12H19',\n  'aperture': 'M14.31 8L20.05 17.94M9.69 8H21.17M7.38 12L13.12 2.06M9.69 16L3.95 6.06M14.31 16H2.83M16.62 12L10.88 21.94M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'archive': 'M21 8V21H3V8M10 12H14M1 3H23V8H1V3Z',\n  'arrow-down-circle': 'M8 12L12 16M12 16L16 12M12 16V8M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'arrow-down-left': 'M17 7L7 17M7 17H17M7 17V7',\n  'arrow-down-right': 'M7 7L17 17M17 17V7M17 17H7',\n  'arrow-down': 'M12 5V19M12 19L19 12M12 19L5 12',\n  'arrow-left-circle': 'M12 8L8 12M8 12L12 16M8 12H16M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'arrow-left': 'M19 12H5M5 12L12 19M5 12L12 5',\n  'arrow-right-circle': 'M12 16L16 12M16 12L12 8M16 12H8M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'arrow-right': 'M5 12H19M19 12L12 5M19 12L12 19',\n  'arrow-up-circle': 'M16 12L12 8M12 8L8 12M12 8V16M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'arrow-up-left': 'M17 17L7 7M7 7V17M7 7H17',\n  'arrow-up-right': 'M7 17L17 7M17 7H7M17 7V17',\n  'arrow-up': 'M12 19V5M12 5L5 12M12 5L19 12',\n  'at-sign': 'M16 7.99999V13C16 13.7956 16.3161 14.5587 16.8787 15.1213C17.4413 15.6839 18.2044 16 19 16C19.7957 16 20.5587 15.6839 21.1213 15.1213C21.6839 14.5587 22 13.7956 22 13V12C21.9999 9.74302 21.2362 7.55247 19.8333 5.78452C18.4303 4.01658 16.4706 2.77521 14.2726 2.26229C12.0747 1.74936 9.76794 1.99503 7.72736 2.95936C5.68677 3.92368 4.03241 5.54995 3.03327 7.57371C2.03413 9.59748 1.74898 11.8997 2.22418 14.1061C2.69938 16.3125 3.90699 18.2932 5.65064 19.7263C7.39429 21.1593 9.57144 21.9603 11.8281 21.9991C14.0847 22.0379 16.2881 21.3122 18.08 19.94M16 12C16 14.2091 14.2092 16 12 16C9.79087 16 8.00001 14.2091 8.00001 12C8.00001 9.79085 9.79087 7.99999 12 7.99999C14.2092 7.99999 16 9.79085 16 12Z',\n  'award': 'M8.21 13.89L7 23L12 20L17 23L15.79 13.88M19 8C19 11.866 15.866 15 12 15C8.13401 15 5 11.866 5 8C5 4.13401 8.13401 1 12 1C15.866 1 19 4.13401 19 8Z',\n  'bar-chart-2': 'M18 20V10M12 20V4M6 20V14',\n  'bar-chart': 'M12 20V10M18 20V4M6 20V16',\n  'battery-charging': 'M5 18H3C2.46957 18 1.96086 17.7893 1.58579 17.4142C1.21071 17.0391 1 16.5304 1 16V8C1 7.46957 1.21071 6.96086 1.58579 6.58579C1.96086 6.21071 2.46957 6 3 6H6.19M15 6H17C17.5304 6 18.0391 6.21071 18.4142 6.58579C18.7893 6.96086 19 7.46957 19 8V16C19 16.5304 18.7893 17.0391 18.4142 17.4142C18.0391 17.7893 17.5304 18 17 18H13.81M23 13V11M11 6L7 12H13L9 18',\n  'battery': 'M23 13V11M3 6H17C18.1046 6 19 6.89543 19 8V16C19 17.1046 18.1046 18 17 18H3C1.89543 18 1 17.1046 1 16V8C1 6.89543 1.89543 6 3 6Z',\n  'bell-off': [\n    'M13.73 21C13.5542 21.3031 13.3018 21.5547 12.9982 21.7295C12.6946 21.9044 12.3504 21.9965 12 21.9965C11.6496 21.9965 11.3054 21.9044 11.0018 21.7295C10.6982 21.5547 10.4458 21.3031 10.27 21M18.63 13C18.1851 11.3714 17.973 9.68804 18 8C18.0016 6.91306 17.7079 5.84611 17.1503 4.91309C16.5927 3.98008 15.7922 3.21606 14.8341 2.70264C13.8761 2.18922 12.7966 1.94569 11.7109 1.99807C10.6252 2.05044 9.57417 2.39675 8.67 3M6.26 6.26C6.08627 6.82361 5.99861 7.41022 6 8C6 15 3 17 3 17H17M1 1L23 23'\n  ],\n  'bell': 'M13.73 21C13.5542 21.3031 13.3018 21.5547 12.9982 21.7295C12.6946 21.9044 12.3504 21.9965 12 21.9965C11.6496 21.9965 11.3054 21.9044 11.0018 21.7295C10.6982 21.5547 10.4458 21.3031 10.27 21M18 8C18 6.4087 17.3679 4.88258 16.2426 3.75736C15.1174 2.63214 13.5913 2 12 2C10.4087 2 8.88258 2.63214 7.75736 3.75736C6.63214 4.88258 6 6.4087 6 8C6 15 3 17 3 17H21C21 17 18 15 18 8Z',\n  'bluetooth': 'M6.5 6.5L17.5 17.5L12 23V1L17.5 6.5L6.5 17.5',\n  'bold': 'M6 12H14C15.0609 12 16.0783 11.5786 16.8284 10.8284C17.5786 10.0783 18 9.06087 18 8C18 6.93913 17.5786 5.92172 16.8284 5.17157C16.0783 4.42143 15.0609 4 14 4H6V12ZM6 12H15C16.0609 12 17.0783 12.4214 17.8284 13.1716C18.5786 13.9217 19 14.9391 19 16C19 17.0609 18.5786 18.0783 17.8284 18.8284C17.0783 19.5786 16.0609 20 15 20H6V12Z',\n  'book-open': 'M12 7C12 5.93913 11.5786 4.92172 10.8284 4.17157C10.0783 3.42143 9.06087 3 8 3H2V18H9C9.79565 18 10.5587 18.3161 11.1213 18.8787C11.6839 19.4413 12 20.2044 12 21M12 7V21M12 7C12 5.93913 12.4214 4.92172 13.1716 4.17157C13.9217 3.42143 14.9391 3 16 3H22V18H15C14.2044 18 13.4413 18.3161 12.8787 18.8787C12.3161 19.4413 12 20.2044 12 21',\n  'book': 'M4 19.5C4 18.837 4.26339 18.2011 4.73223 17.7322C5.20107 17.2634 5.83696 17 6.5 17H20M4 19.5C4 20.163 4.26339 20.7989 4.73223 21.2678C5.20107 21.7366 5.83696 22 6.5 22H20V2H6.5C5.83696 2 5.20107 2.26339 4.73223 2.73223C4.26339 3.20107 4 3.83696 4 4.5V19.5Z',\n  'bookmark': 'M19 21L12 16L5 21V5C5 4.46957 5.21071 3.96086 5.58579 3.58579C5.96086 3.21071 6.46957 3 7 3H17C17.5304 3 18.0391 3.21071 18.4142 3.58579C18.7893 3.96086 19 4.46957 19 5V21Z',\n  'box': 'M3.27 6.96002L12 12.01L20.73 6.96002M12 22.08V12M21 16V8.00002C20.9996 7.6493 20.9071 7.30483 20.7315 7.00119C20.556 6.69754 20.3037 6.44539 20 6.27002L13 2.27002C12.696 2.09449 12.3511 2.00208 12 2.00208C11.6489 2.00208 11.304 2.09449 11 2.27002L4 6.27002C3.69626 6.44539 3.44398 6.69754 3.26846 7.00119C3.09294 7.30483 3.00036 7.6493 3 8.00002V16C3.00036 16.3508 3.09294 16.6952 3.26846 16.9989C3.44398 17.3025 3.69626 17.5547 4 17.73L11 21.73C11.304 21.9056 11.6489 21.998 12 21.998C12.3511 21.998 12.696 21.9056 13 21.73L20 17.73C20.3037 17.5547 20.556 17.3025 20.7315 16.9989C20.9071 16.6952 20.9996 16.3508 21 16Z',\n  'briefcase': 'M16 21V5C16 4.46957 15.7893 3.96086 15.4142 3.58579C15.0391 3.21071 14.5304 3 14 3H10C9.46957 3 8.96086 3.21071 8.58579 3.58579C8.21071 3.96086 8 4.46957 8 5V21M4 7H20C21.1046 7 22 7.89543 22 9V19C22 20.1046 21.1046 21 20 21H4C2.89543 21 2 20.1046 2 19V9C2 7.89543 2.89543 7 4 7Z',\n  'calendar': 'M16 2V6M8 2V6M3 10H21M5 4H19C20.1046 4 21 4.89543 21 6V20C21 21.1046 20.1046 22 19 22H5C3.89543 22 3 21.1046 3 20V6C3 4.89543 3.89543 4 5 4Z',\n  'camera-off': [\n    'M1 1L23 23M9 3H15L17 6H21C21.5304 6 22.0391 6.21071 22.4142 6.58579C22.7893 6.96086 23 7.46957 23 8V17.34M15.28 15.28C14.9481 15.765 14.5134 16.171 14.0068 16.469C13.5002 16.7669 12.9342 16.9496 12.3489 17.004C11.7637 17.0584 11.1737 16.9831 10.6209 16.7836C10.0681 16.5841 9.56601 16.2652 9.15042 15.8496C8.73483 15.434 8.41593 14.9319 8.2164 14.3791C8.01688 13.8263 7.94163 13.2363 7.99601 12.6511C8.05039 12.0658 8.23306 11.4998 8.53103 10.9932C8.829 10.4866 9.23495 10.0519 9.72 9.72M21 21H3C2.46957 21 1.96086 20.7893 1.58579 20.4142C1.21071 20.0391 1 19.5304 1 19V8C1 7.46957 1.21071 6.96086 1.58579 6.58579C1.96086 6.21071 2.46957 6 3 6H6L21 21Z'\n  ],\n  'camera': [\n    'M23 19C23 19.5304 22.7893 20.0391 22.4142 20.4142C22.0391 20.7893 21.5304 21 21 21H3C2.46957 21 1.96086 20.7893 1.58579 20.4142C1.21071 20.0391 1 19.5304 1 19V8C1 7.46957 1.21071 6.96086 1.58579 6.58579C1.96086 6.21071 2.46957 6 3 6H7L9 3H15L17 6H21C21.5304 6 22.0391 6.21071 22.4142 6.58579C22.7893 6.96086 23 7.46957 23 8V19Z',\n    'M12 17C14.2091 17 16 15.2091 16 13C16 10.7909 14.2091 9 12 9C9.79086 9 8 10.7909 8 13C8 15.2091 9.79086 17 12 17Z'\n  ],\n  'cast': 'M2 16.1C2.96089 16.296 3.84294 16.7702 4.53638 17.4636C5.22982 18.1571 5.70403 19.0391 5.9 20M2 12.05C4.03079 12.2759 5.92428 13.186 7.36911 14.6309C8.81395 16.0757 9.72414 17.9692 9.95 20M2 8V6C2 5.46957 2.21071 4.96086 2.58579 4.58579C2.96086 4.21071 3.46957 4 4 4H20C20.5304 4 21.0391 4.21071 21.4142 4.58579C21.7893 4.96086 22 5.46957 22 6V18C22 18.5304 21.7893 19.0391 21.4142 19.4142C21.0391 19.7893 20.5304 20 20 20H14M2 20H2.01',\n  'check-circle': 'M22 11.08V12C21.9988 14.1564 21.3005 16.2547 20.0093 17.9818C18.7182 19.709 16.9033 20.9725 14.8354 21.5839C12.7674 22.1953 10.5573 22.1219 8.53447 21.3746C6.51168 20.6273 4.78465 19.2461 3.61096 17.4371C2.43727 15.628 1.87979 13.4881 2.02168 11.3363C2.16356 9.18455 2.99721 7.13631 4.39828 5.49706C5.79935 3.85781 7.69279 2.71537 9.79619 2.24013C11.8996 1.7649 14.1003 1.98232 16.07 2.85999M22 3.99999L12 14.01L9.00001 11.01',\n  'check-square': 'M9 11L12 14L22 4M21 12V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H5C4.46957 21 3.96086 20.7893 3.58579 20.4142C3.21071 20.0391 3 19.5304 3 19V5C3 4.46957 3.21071 3.96086 3.58579 3.58579C3.96086 3.21071 4.46957 3 5 3H16',\n  'check': 'M20 6L9 17L4 12',\n  'chevron-down': 'M6 9L12 15L18 9',\n  'chevron-left': 'M15 18L9 12L15 6',\n  'chevron-right': 'M9 18L15 12L9 6',\n  'chevron-up': 'M18 15L12 9L6 15',\n  'chevrons-down': 'M7 13L12 18L17 13M7 6L12 11L17 6',\n  'chevrons-left': 'M11 17L6 12L11 7M18 17L13 12L18 7',\n  'chevrons-right': 'M13 17L18 12L13 7M6 17L11 12L6 7',\n  'chevrons-up': 'M17 11L12 6L7 11M17 18L12 13L7 18',\n  'chrome': 'M12 8C9.79086 8 8 9.79086 8 12C8 14.2091 9.79086 16 12 16C14.2091 16 16 14.2091 16 12C16 9.79086 14.2091 8 12 8ZM12 8H21.17M3.95 6.06L8.54 14M10.88 21.94L15.46 14M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'circle': 'M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z',\n  'clipboard': 'M16 4H18C18.5304 4 19.0391 4.21071 19.4142 4.58579C19.7893 4.96086 20 5.46957 20 6V20C20 20.5304 19.7893 21.0391 19.4142 21.4142C19.0391 21.7893 18.5304 22 18 22H6C5.46957 22 4.96086 21.7893 4.58579 21.4142C4.21071 21.0391 4 20.5304 4 20V6C4 5.46957 4.21071 4.96086 4.58579 4.58579C4.96086 4.21071 5.46957 4 6 4H8M9 2H15C15.5523 2 16 2.44772 16 3V5C16 5.55228 15.5523 6 15 6H9C8.44772 6 8 5.55228 8 5V3C8 2.44772 8.44772 2 9 2Z',\n  'clock': 'M12 6V12L16 14M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z',\n  'cloud-drizzle': 'M7.99997 19V21M7.99997 13V15M16 19V21M16 13V15M12 21V23M12 15V17M20 16.58C21.0512 16.1196 21.9121 15.3116 22.4381 14.2916C22.964 13.2715 23.1231 12.1016 22.8886 10.9782C22.654 9.85478 22.0402 8.84623 21.15 8.12185C20.2599 7.39748 19.1476 7.00137 18 7.00002H16.74C16.423 5.77254 15.8188 4.63797 14.9773 3.68982C14.1357 2.74167 13.0809 2.00709 11.8997 1.54664C10.7186 1.08619 9.44488 0.913035 8.18365 1.04146C6.92243 1.16989 5.70978 1.59622 4.64567 2.2853C3.58155 2.97439 2.69644 3.9065 2.06328 5.00482C1.43012 6.10313 1.06704 7.33619 1.00398 8.60237C0.940923 9.86855 1.17968 11.1316 1.70058 12.2874C2.22147 13.4432 3.00959 14.4586 3.99997 15.25',\n  'cloud-lightning': 'M19 16.9C20.2151 16.6532 21.2953 15.9638 22.0307 14.9655C22.7661 13.9671 23.1043 12.7312 22.9797 11.4975C22.8551 10.2638 22.2765 9.12046 21.3563 8.28937C20.4361 7.45828 19.2399 6.99875 18 6.99999H16.74C16.4087 5.71731 15.764 4.53698 14.8639 3.56498C13.9638 2.59298 12.8363 1.85972 11.5828 1.43106C10.3293 1.00239 8.98897 0.891726 7.68213 1.109C6.37529 1.32628 5.14287 1.86469 4.0955 2.6759C3.04814 3.48711 2.21862 4.54573 1.68143 5.75671C1.14424 6.96768 0.916185 8.29311 1.01775 9.61399C1.11931 10.9349 1.54731 12.2098 2.26332 13.3245C2.97932 14.4391 3.96093 15.3584 5.12 16M13 11L9 17H15L11 23',\n  'cloud-off': 'M22.61 16.95C22.9322 16.1893 23.0609 15.3606 22.9845 14.5381C22.9082 13.7155 22.6293 12.9246 22.1726 12.2362C21.716 11.5478 21.0959 10.9832 20.3677 10.593C19.6396 10.2027 18.8261 9.99902 18 10H16.74C16.3318 8.39249 15.4341 6.95158 14.171 5.87666C12.908 4.80173 11.3421 4.14593 9.69 4M5 5C3.43808 5.86364 2.20981 7.22478 1.51059 8.86691C0.811366 10.509 0.681351 12.3378 1.14123 14.0623C1.6011 15.7869 2.62445 17.3081 4.04848 18.384C5.47251 19.4599 7.21544 20.0288 9 20H18C18.5798 19.9993 19.155 19.8978 19.7 19.7M0.999999 1L23 23',\n  'cloud-rain': 'M16 13V21M8 13V21M12 15V23M20 16.58C21.0512 16.1195 21.9121 15.3115 22.4381 14.2915C22.9641 13.2715 23.1231 12.1016 22.8886 10.9781C22.6541 9.85472 22.0402 8.84617 21.15 8.12179C20.2599 7.39742 19.1476 7.00131 18 6.99996H16.74C16.423 5.77248 15.8189 4.63791 14.9773 3.68976C14.1358 2.74161 13.0809 2.00703 11.8998 1.54658C10.7186 1.08612 9.44491 0.912974 8.18368 1.0414C6.92246 1.16983 5.70981 1.59615 4.6457 2.28524C3.58158 2.97433 2.69647 3.90644 2.06331 5.00475C1.43015 6.10307 1.06708 7.33613 1.00401 8.60231C0.940954 9.86849 1.17971 11.1315 1.70061 12.2873C2.2215 13.4431 3.00962 14.4585 4 15.25',\n  'cloud-snow': 'M20 17.58C21.0512 17.1195 21.9121 16.3115 22.4381 15.2915C22.9641 14.2715 23.1231 13.1016 22.8886 11.9781C22.6541 10.8547 22.0402 9.84617 21.15 9.12179C20.2599 8.39742 19.1476 8.00131 18 7.99996H16.74C16.423 6.77248 15.8189 5.63791 14.9773 4.68976C14.1358 3.74161 13.0809 3.00703 11.8998 2.54658C10.7186 2.08612 9.44491 1.91297 8.18368 2.0414C6.92246 2.16983 5.70981 2.59615 4.6457 3.28524C3.58158 3.97433 2.69647 4.90644 2.06331 6.00475C1.43015 7.10307 1.06708 8.33613 1.00401 9.60231C0.940954 10.8685 1.17971 12.1315 1.70061 13.2873C2.2215 14.4431 3.00962 15.4585 4 16.25M8 16H8.01M8 20H8.01M12 18H12.01M12 22H12.01M16 16H16.01M16 20H16.01',\n  'cloud': 'M18 10H16.74C16.3659 8.551 15.5928 7.23599 14.5086 6.2044C13.4245 5.1728 12.0727 4.46599 10.6069 4.16428C9.14112 3.86256 7.62008 3.97804 6.21664 4.49759C4.8132 5.01714 3.58363 5.91993 2.66764 7.10338C1.75165 8.28683 1.18598 9.70348 1.0349 11.1924C0.883813 12.6812 1.15338 14.1826 1.81296 15.526C2.47255 16.8693 3.4957 18.0007 4.76617 18.7916C6.03663 19.5824 7.50347 20.0011 8.99999 20H18C19.3261 20 20.5978 19.4732 21.5355 18.5355C22.4732 17.5979 23 16.3261 23 15C23 13.6739 22.4732 12.4021 21.5355 11.4645C20.5978 10.5268 19.3261 10 18 10Z',\n  'code': 'M16 18L22 12L16 6M8 6L2 12L8 18',\n  'codepen': 'M12 2L22 8.5M12 2L2 8.5M12 2V8.5M22 8.5V15.5M22 8.5L12 15.5M22 15.5L12 22M22 15.5L12 8.5M12 22L2 15.5M12 22V15.5M2 15.5V8.5M2 15.5L12 8.5M2 8.5L12 15.5',\n  'codesandbox': 'M7.5 4.21002L12 6.81002L16.5 4.21002M7.5 19.79V14.6L3 12M21 12L16.5 14.6V19.79M3.27 6.96002L12 12.01L20.73 6.96002M12 22.08V12M21 16V8.00002C20.9996 7.6493 20.9071 7.30483 20.7315 7.00119C20.556 6.69754 20.3037 6.44539 20 6.27002L13 2.27002C12.696 2.09449 12.3511 2.00208 12 2.00208C11.6489 2.00208 11.304 2.09449 11 2.27002L4 6.27002C3.69626 6.44539 3.44398 6.69754 3.26846 7.00119C3.09294 7.30483 3.00036 7.6493 3 8.00002V16C3.00036 16.3508 3.09294 16.6952 3.26846 16.9989C3.44398 17.3025 3.69626 17.5547 4 17.73L11 21.73C11.304 21.9056 11.6489 21.998 12 21.998C12.3511 21.998 12.696 21.9056 13 21.73L20 17.73C20.3037 17.5547 20.556 17.3025 20.7315 16.9989C20.9071 16.6952 20.9996 16.3508 21 16Z',\n  'coffee': 'M18 8H19C20.0609 8 21.0783 8.42143 21.8284 9.17157C22.5786 9.92172 23 10.9391 23 12C23 13.0609 22.5786 14.0783 21.8284 14.8284C21.0783 15.5786 20.0609 16 19 16H18M18 8H2V17C2 18.0609 2.42143 19.0783 3.17157 19.8284C3.92172 20.5786 4.93913 21 6 21H14C15.0609 21 16.0783 20.5786 16.8284 19.8284C17.5786 19.0783 18 18.0609 18 17V8ZM6 1V4M10 1V4M14 1V4',\n  'columns': 'M12 3V21M12 3H19C19.5304 3 20.0391 3.21071 20.4142 3.58579C20.7893 3.96086 21 4.46957 21 5V19C21 19.5304 20.7893 20.0391 20.4142 20.4142C20.0391 20.7893 19.5304 21 19 21H12V3ZM12 3H5C4.46957 3 3.96086 3.21071 3.58579 3.58579C3.21071 3.96086 3 4.46957 3 5V19C3 19.5304 3.21071 20.0391 3.58579 20.4142C3.96086 20.7893 4.46957 21 5 21H12V3Z',\n  'command': 'M18 3C17.2044 3 16.4413 3.31607 15.8787 3.87868C15.3161 4.44129 15 5.20435 15 6V18C15 18.7956 15.3161 19.5587 15.8787 20.1213C16.4413 20.6839 17.2044 21 18 21C18.7956 21 19.5587 20.6839 20.1213 20.1213C20.6839 19.5587 21 18.7956 21 18C21 17.2044 20.6839 16.4413 20.1213 15.8787C19.5587 15.3161 18.7956 15 18 15H6C5.20435 15 4.44129 15.3161 3.87868 15.8787C3.31607 16.4413 3 17.2044 3 18C3 18.7956 3.31607 19.5587 3.87868 20.1213C4.44129 20.6839 5.20435 21 6 21C6.79565 21 7.55871 20.6839 8.12132 20.1213C8.68393 19.5587 9 18.7956 9 18V6C9 5.20435 8.68393 4.44129 8.12132 3.87868C7.55871 3.31607 6.79565 3 6 3C5.20435 3 4.44129 3.31607 3.87868 3.87868C3.31607 4.44129 3 5.20435 3 6C3 6.79565 3.31607 7.55871 3.87868 8.12132C4.44129 8.68393 5.20435 9 6 9H18C18.7956 9 19.5587 8.68393 20.1213 8.12132C20.6839 7.55871 21 6.79565 21 6C21 5.20435 20.6839 4.44129 20.1213 3.87868C19.5587 3.31607 18.7956 3 18 3Z',\n  'compass': [\n    'M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z',\n    'M16.24 7.76L14.12 14.12L7.76 16.24L9.88 9.88L16.24 7.76Z'\n  ],\n  'copy': 'M5 15H4C3.46957 15 2.96086 14.7893 2.58579 14.4142C2.21071 14.0391 2 13.5304 2 13V4C2 3.46957 2.21071 2.96086 2.58579 2.58579C2.96086 2.21071 3.46957 2 4 2H13C13.5304 2 14.0391 2.21071 14.4142 2.58579C14.7893 2.96086 15 3.46957 15 4V5M11 9H20C21.1046 9 22 9.89543 22 11V20C22 21.1046 21.1046 22 20 22H11C9.89543 22 9 21.1046 9 20V11C9 9.89543 9.89543 9 11 9Z',\n  // Continue with more icons...\n  'x': 'M18 6L6 18M6 6L18 18',\n  'youtube': [\n    'M22.54 6.42C22.4212 5.94541 22.1793 5.51057 21.8387 5.15941C21.498 4.80824 21.0708 4.55318 20.6 4.42C18.88 4 12 4 12 4C12 4 5.12001 4 3.40001 4.46C2.92925 4.59318 2.50198 4.84824 2.16135 5.19941C1.82072 5.55057 1.5788 5.98541 1.46001 6.46C1.14522 8.20556 0.991243 9.97631 1.00001 11.75C0.988786 13.537 1.14277 15.3213 1.46001 17.08C1.59097 17.5398 1.83831 17.9581 2.17815 18.2945C2.51799 18.6308 2.93883 18.8738 3.40001 19C5.12001 19.46 12 19.46 12 19.46C12 19.46 18.88 19.46 20.6 19C21.0708 18.8668 21.498 18.6118 21.8387 18.2606C22.1793 17.9094 22.4212 17.4746 22.54 17C22.8524 15.2676 23.0063 13.5103 23 11.75C23.0112 9.96295 22.8572 8.1787 22.54 6.42Z',\n    'M9.75001 15.02L15.5 11.75L9.75001 8.48V15.02Z'\n  ],\n  'zap-off': 'M12.41 6.75L13 2L10.57 4.92M18.57 12.91L21 10H15.66M8 8L3 14H12L11 22L16 16M1 1L23 23',\n  'zap': 'M13 2L3 14H12L11 22L21 10H12L13 2Z',\n  'zoom-in': 'M21 21L16.65 16.65M11 8V14M8 11H14M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z',\n  'zoom-out': 'M21 21L16.65 16.65M8 11H14M19 11C19 15.4183 15.4183 19 11 19C6.58172 19 3 15.4183 3 11C3 6.58172 6.58172 3 11 3C15.4183 3 19 6.58172 19 11Z',\n  '2-layers': 'M2 14.5L12 19.5L22 14.5M12 4.5L2 9.5L12 14.5L22 9.5L12 4.5Z',\n  '3-layers': 'M2 17L12 22L22 17M2 12L12 17L22 12M12 2L2 7L12 12L22 7L12 2Z',\n  'filters-lines': 'M6 12H18M3 6H21M9 18H15',\n  'coins': 'M9.42202 4.15802C12.2986 1.2801 16.964 1.28122 19.8417 4.15802C22.7194 7.03483 22.7194 11.7006 19.8417 14.5785M16.7374 14.6308C16.7374 18.7007 13.4383 22 9.36868 22C5.29907 22 2 18.7007 2 14.6308C2 10.5608 5.29907 7.26151 9.36868 7.26151C13.4383 7.26151 16.7374 10.5608 16.7374 14.6308Z',\n  'coin-stack': 'M14.1755 4.22225C14.1766 2.99445 11.6731 2 8.58832 2C5.50357 2 3.00224 2.99557 3 4.22225M3 4.22225C3 5.45004 5.50133 6.44449 8.58832 6.44449C11.6753 6.44449 14.1766 5.45004 14.1766 4.22225L14.1766 12.8445M3 4.22225V17.5556C3.00112 18.7834 5.50245 19.7779 8.58832 19.7779C10.0849 19.7779 11.4361 19.5412 12.4387 19.1601M3.00112 8.66672C3.00112 9.89451 5.50245 10.889 8.58944 10.889C11.6764 10.889 14.1778 9.89451 14.1778 8.66672M12.5057 14.6946C11.4976 15.0891 10.115 15.3335 8.58832 15.3335C5.50245 15.3335 3.00112 14.3391 3.00112 13.1113M20.5272 13.4646C22.4909 15.4169 22.4909 18.5836 20.5272 20.5358C18.5635 22.4881 15.3781 22.4881 13.4144 20.5358C11.4507 18.5836 11.4507 15.4169 13.4144 13.4646C15.3781 11.5124 18.5635 11.5124 20.5272 13.4646Z',\n  'rocket': 'M13.3248 10.6752L5.44059 18.5594M6.29145 12.8375L2.42965 11.9253C2.00478 11.825 1.85535 11.2975 2.16313 10.9886L5.23428 7.91744C5.44059 7.71113 5.72049 7.59292 6.01378 7.59069L9.47635 7.56059M13.8377 3.59842C16.4149 5.35591 18.6441 7.58512 20.4016 10.1623M11.1614 17.7085L12.0736 21.5703C12.1739 21.9952 12.7014 22.1447 13.0103 21.8369L16.0814 18.7657C16.2878 18.5594 16.406 18.2795 16.4082 17.9862L16.4383 14.5236M21.0629 8.35012L21.9639 4.01438C22.2093 2.83454 21.1655 1.79075 19.9856 2.03608L15.6499 2.93713C14.373 3.20254 13.2021 3.83483 12.281 4.75707L8.72362 8.31332C7.36647 9.67047 6.48326 11.4302 6.20447 13.3293L6.19221 13.4107C6.01601 14.6229 6.42193 15.8462 7.28729 16.7127C8.15266 17.5781 9.3771 17.984 10.5893 17.8067L10.6707 17.7944C12.5698 17.5167 14.3295 16.6324 15.6867 15.2753L19.2429 11.719C20.1652 10.7979 20.7975 9.62698 21.0629 8.35012Z',\n  'menu-2': 'M3 12H17M3 6H21M3 18H21',\n  // Add more icons as needed\n};\n","import React from 'react';\nimport { iconPaths } from './iconPaths';\n\nexport interface IconProps {\n  /** The name of the icon to display */\n  name: IconName;\n  /** Size of the icon */\n  size?: 'small' | 'medium' | 'large' | number;\n  /** Color of the icon */\n  color?: string;\n  /** Additional CSS classes */\n  className?: string;\n  /** Width of the stroke */\n  strokeWidth?: number;\n  /** Accessibility label */\n  'aria-label'?: string;\n}\n\nexport type IconName = keyof typeof iconPaths;\n\n/**\n * Icon component from the Nexus Design System\n * \n * A comprehensive icon library with consistent styling and accessibility features.\n * All icons are SVG-based and support customization of size, color, and stroke width.\n */\nconst Icons = React.memo(React.forwardRef<SVGSVGElement, IconProps>(({\n  name,\n  size = 'medium',\n  color = '#181D27',\n  className = '',\n  strokeWidth = 2,\n  'aria-label': ariaLabel,\n  ...props\n}, ref) => {\n  const sizeMap = {\n    small: 16,\n    medium: 24,\n    large: 32,\n  };\n\n  const iconSize = typeof size === 'number' ? size : sizeMap[size];\n  \n  const commonProps = {\n    width: iconSize,\n    height: iconSize,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: `nexus-icon nexus-icon--${name} ${className}`.trim(),\n    'aria-label': ariaLabel || name.replace(/-/g, ' '),\n    ref,\n    ...props\n  };\n\n  const strokeProps = {\n    stroke: color,\n    strokeWidth,\n    strokeLinecap: \"round\" as const,\n    strokeLinejoin: \"round\" as const,\n  };\n\n  const paths = iconPaths[name];\n  \n  if (!paths) {\n    console.warn(`Icon \"${name}\" not found`);\n    return null;\n  }\n\n  const renderPaths = () => {\n    if (Array.isArray(paths)) {\n      return paths.map((path, index) => (\n        <path key={index} d={path} {...strokeProps} />\n      ));\n    }\n    return <path d={paths} {...strokeProps} />;\n  };\n\n  return (\n    <svg {...commonProps}>\n      {renderPaths()}\n    </svg>\n  );\n}));\n\nIcons.displayName = 'Icons';\n\nexport default Icons;\n","import React from 'react';\n\n// Base Flex Component\nexport interface FlexProps {\n  /** Flex content */\n  children: React.ReactNode;\n  /** Flex direction */\n  direction?: 'row' | 'column' | 'row-reverse' | 'column-reverse';\n  /** Justify content */\n  justify?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around' | 'space-evenly';\n  /** Align items */\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n  /** Flex wrap */\n  wrap?: 'nowrap' | 'wrap' | 'wrap-reverse';\n  /** Gap between items */\n  gap?: number | string;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\n/**\n * Flex component provides flexbox layout utilities.\n * Use for creating flexible layouts with precise control.\n * \n * @example\n * ```tsx\n * <Flex direction=\"row\" justify=\"center\" align=\"center\" gap=\"md\">\n *   <Item />\n *   <Item />\n * </Flex>\n * ```\n */\nexport const Flex = React.forwardRef<HTMLDivElement, FlexProps>(\n  ({ \n    children, \n    direction = 'row',\n    justify = 'flex-start',\n    align = 'stretch',\n    wrap = 'nowrap',\n    gap = 0,\n    className = '', \n    style, \n    'data-testid': dataTestId, \n    ...props \n  }, ref) => {\n    \n    const flexStyle: React.CSSProperties = {\n      display: 'flex',\n      flexDirection: direction,\n      justifyContent: justify,\n      alignItems: align,\n      flexWrap: wrap,\n      gap: typeof gap === 'number' ? `${gap}px` : gap,\n      ...style,\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`flex ${className}`}\n        style={flexStyle}\n        data-testid={dataTestId}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nFlex.displayName = 'Flex';\n\n// Group Component (Horizontal flex with common patterns)\nexport interface GroupProps {\n  /** Group content */\n  children: React.ReactNode;\n  /** Justify content - common patterns */\n  justify?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around';\n  /** Align items */\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch' | 'baseline';\n  /** Gap between items */\n  gap?: number | string;\n  /** Allow items to wrap */\n  wrap?: boolean;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\n/**\n * Group component for horizontal layouts with common patterns.\n * Simplified version of Flex for common horizontal use cases.\n * \n * @example\n * ```tsx\n * <Group justify=\"space-between\" align=\"center\">\n *   <Logo />\n *   <Button>Action</Button>\n * </Group>\n * ```\n */\nexport const Group = React.forwardRef<HTMLDivElement, GroupProps>(\n  ({ \n    children, \n    justify = 'flex-start',\n    align = 'center',\n    gap = '16px',\n    wrap = false,\n    className = '', \n    style, \n    'data-testid': dataTestId, \n    ...props \n  }, ref) => {\n    \n    const groupStyle: React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: justify,\n      alignItems: align,\n      flexWrap: wrap ? 'wrap' : 'nowrap',\n      gap: typeof gap === 'number' ? `${gap}px` : gap,\n      ...style,\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`group ${className}`}\n        style={groupStyle}\n        data-testid={dataTestId}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nGroup.displayName = 'Group';\n\n// Stack Component (Vertical flex)\nexport interface StackProps {\n  /** Stack content */\n  children: React.ReactNode;\n  /** Align items horizontally */\n  align?: 'flex-start' | 'flex-end' | 'center' | 'stretch';\n  /** Justify content vertically */\n  justify?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around';\n  /** Gap between items */\n  gap?: number | string;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\n/**\n * Stack component for vertical layouts.\n * Simplified version of Flex for vertical stacking.\n * \n * @example\n * ```tsx\n * <Stack gap=\"lg\" align=\"center\">\n *   <Title />\n *   <Description />\n *   <Button />\n * </Stack>\n * ```\n */\nexport const Stack = React.forwardRef<HTMLDivElement, StackProps>(\n  ({ \n    children, \n    align = 'stretch',\n    justify = 'flex-start',\n    gap = '16px',\n    className = '', \n    style, \n    'data-testid': dataTestId, \n    ...props \n  }, ref) => {\n    \n    const stackStyle: React.CSSProperties = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: align,\n      justifyContent: justify,\n      gap: typeof gap === 'number' ? `${gap}px` : gap,\n      ...style,\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`stack ${className}`}\n        style={stackStyle}\n        data-testid={dataTestId}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nStack.displayName = 'Stack';","import React, { useState } from 'react';\nimport { Group } from './Flex';\nimport { Badge } from './Badge';\nimport './navigation.css';\n\nexport interface NavigationItem {\n  label: string;\n  href?: string;\n  onClick?: () => void;\n  active?: boolean;\n  icon?: React.ReactNode;\n  badge?: string | number;\n}\n\nexport interface UserMenuProps {\n  name: string;\n  email: string;\n  avatar?: string;\n  onProfile?: () => void;\n  onSettings?: () => void;\n  onLogout?: () => void;\n}\n\nexport interface NavigationProps {\n  /** Brand/logo element */\n  brand?: React.ReactNode;\n  /** Navigation items */\n  items?: NavigationItem[];\n  /** Right side content (user menu, actions, etc) */\n  rightSection?: React.ReactNode;\n  /** User menu configuration */\n  userMenu?: UserMenuProps;\n  /** Height of the navigation bar */\n  height?: number;\n  /** Background color */\n  backgroundColor?: string;\n  /** Show burger menu on mobile */\n  withBurger?: boolean;\n  /** Burger menu opened state */\n  opened?: boolean;\n  /** Burger menu toggle handler */\n  onToggle?: () => void;\n  /** Additional CSS classes */\n  className?: string;\n  /** Additional styles */\n  style?: React.CSSProperties;\n}\n\n/**\n * Navigation component for application headers\n */\nexport const Navigation: React.FC<NavigationProps> = ({\n  brand,\n  items = [],\n  rightSection,\n  userMenu,\n  height = 60,\n  backgroundColor = '#ffffff',\n  withBurger = false,\n  opened = false,\n  onToggle,\n  className = '',\n  style,\n}) => {\n  const [userMenuOpen, setUserMenuOpen] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(opened);\n\n  React.useEffect(() => {\n    setMobileMenuOpen(opened);\n  }, [opened]);\n\n  const handleToggle = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n    onToggle?.();\n  };\n\n  return (\n    <>\n      <nav\n        className={`navigation ${className}`}\n        style={{\n          height: `${height}px`,\n          backgroundColor,\n          borderBottom: '1px solid #e5e7eb',\n          position: 'relative',\n          ...style,\n        }}\n      >\n        <div style={{ \n          height: '100%',\n          padding: '0 20px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}>\n          <Group gap=\"32px\">\n            {withBurger && (\n              <button\n                className=\"burger-button\"\n                onClick={handleToggle}\n                style={{\n                  display: 'none',\n                  flexDirection: 'column',\n                  justifyContent: 'space-around',\n                  width: '24px',\n                  height: '24px',\n                  background: 'transparent',\n                  border: 'none',\n                  cursor: 'pointer',\n                  padding: 0,\n                }}\n              >\n                <span style={{\n                  width: '100%',\n                  height: '2px',\n                  backgroundColor: '#374151',\n                  borderRadius: '10px',\n                  transform: mobileMenuOpen ? 'rotate(45deg) translate(5px, 5px)' : 'none',\n                  transition: 'transform 0.3s',\n                }} />\n                <span style={{\n                  width: '100%',\n                  height: '2px',\n                  backgroundColor: '#374151',\n                  borderRadius: '10px',\n                  opacity: mobileMenuOpen ? 0 : 1,\n                  transition: 'opacity 0.3s',\n                }} />\n                <span style={{\n                  width: '100%',\n                  height: '2px',\n                  backgroundColor: '#374151',\n                  borderRadius: '10px',\n                  transform: mobileMenuOpen ? 'rotate(-45deg) translate(5px, -6px)' : 'none',\n                  transition: 'transform 0.3s',\n                }} />\n              </button>\n            )}\n            \n            {brand && <div className=\"navigation-brand\">{brand}</div>}\n            \n            <div className=\"navigation-items desktop-only\" style={{ display: 'flex', gap: '4px' }}>\n              {items.map((item, index) => (\n                <button\n                  key={index}\n                  className={`navigation-item ${item.active ? 'active' : ''}`}\n                  onClick={item.onClick}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    padding: '8px 16px',\n                    backgroundColor: item.active ? '#f3f4f6' : 'transparent',\n                    border: 'none',\n                    borderRadius: '6px',\n                    color: item.active ? '#0a0e1b' : '#6b7280',\n                    fontSize: '14px',\n                    fontWeight: item.active ? '500' : '400',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s',\n                    fontFamily: 'Inter, sans-serif',\n                  }}\n                  onMouseEnter={(e) => {\n                    if (!item.active) {\n                      e.currentTarget.style.backgroundColor = '#f9fafb';\n                      e.currentTarget.style.color = '#374151';\n                    }\n                  }}\n                  onMouseLeave={(e) => {\n                    if (!item.active) {\n                      e.currentTarget.style.backgroundColor = 'transparent';\n                      e.currentTarget.style.color = '#6b7280';\n                    }\n                  }}\n                >\n                  {item.icon && <span>{item.icon}</span>}\n                  <span>{item.label}</span>\n                  {item.badge && (\n                    <Badge \n                      variant=\"filled\" \n                      size=\"sm\"\n                      style={{ marginLeft: '4px' }}\n                    >\n                      {item.badge}\n                    </Badge>\n                  )}\n                </button>\n              ))}\n            </div>\n          </Group>\n\n          <div className=\"navigation-right\">\n            {rightSection}\n            {userMenu && (\n              <div style={{ position: 'relative' }}>\n                <button\n                  className=\"user-menu-trigger\"\n                  onClick={() => setUserMenuOpen(!userMenuOpen)}\n                  style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    gap: '8px',\n                    padding: '6px 12px',\n                    backgroundColor: 'transparent',\n                    border: '1px solid #e5e7eb',\n                    borderRadius: '8px',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s',\n                  }}\n                  onMouseEnter={(e) => {\n                    e.currentTarget.style.backgroundColor = '#f9fafb';\n                  }}\n                  onMouseLeave={(e) => {\n                    e.currentTarget.style.backgroundColor = 'transparent';\n                  }}\n                >\n                  {userMenu.avatar ? (\n                    <img\n                      src={userMenu.avatar}\n                      alt={userMenu.name}\n                      style={{\n                        width: '32px',\n                        height: '32px',\n                        borderRadius: '50%',\n                        objectFit: 'cover',\n                      }}\n                    />\n                  ) : (\n                    <div style={{\n                      width: '32px',\n                      height: '32px',\n                      borderRadius: '50%',\n                      backgroundColor: '#e5e7eb',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      fontSize: '14px',\n                      fontWeight: '600',\n                      color: '#6b7280',\n                    }}>\n                      {userMenu.name.charAt(0).toUpperCase()}\n                    </div>\n                  )}\n                  <div style={{ textAlign: 'left' }}>\n                    <div style={{ fontSize: '14px', fontWeight: '500', color: '#374151', fontFamily: 'Inter, sans-serif' }}>\n                      {userMenu.name}\n                    </div>\n                    <div style={{ fontSize: '12px', color: '#6b7280', fontFamily: 'Inter, sans-serif' }}>\n                      {userMenu.email}\n                    </div>\n                  </div>\n                  <svg\n                    width=\"16\"\n                    height=\"16\"\n                    viewBox=\"0 0 16 16\"\n                    fill=\"none\"\n                    style={{\n                      transform: userMenuOpen ? 'rotate(180deg)' : 'rotate(0)',\n                      transition: 'transform 0.2s',\n                    }}\n                  >\n                    <path\n                      d=\"M4 6L8 10L12 6\"\n                      stroke=\"#6b7280\"\n                      strokeWidth=\"2\"\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                    />\n                  </svg>\n                </button>\n\n                {userMenuOpen && (\n                  <div\n                    style={{\n                      position: 'absolute',\n                      top: 'calc(100% + 8px)',\n                      right: 0,\n                      minWidth: '200px',\n                      backgroundColor: 'white',\n                      border: '1px solid #e5e7eb',\n                      borderRadius: '8px',\n                      boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n                      zIndex: 1000,\n                      overflow: 'hidden',\n                    }}\n                  >\n                    {userMenu.onProfile && (\n                      <button\n                        onClick={() => {\n                          userMenu.onProfile?.();\n                          setUserMenuOpen(false);\n                        }}\n                        style={{\n                          width: '100%',\n                          padding: '10px 16px',\n                          backgroundColor: 'transparent',\n                          border: 'none',\n                          textAlign: 'left',\n                          fontSize: '14px',\n                          color: '#374151',\n                          cursor: 'pointer',\n                          fontFamily: 'Inter, sans-serif',\n                        }}\n                        onMouseEnter={(e) => {\n                          e.currentTarget.style.backgroundColor = '#f9fafb';\n                        }}\n                        onMouseLeave={(e) => {\n                          e.currentTarget.style.backgroundColor = 'transparent';\n                        }}\n                      >\n                        Profile\n                      </button>\n                    )}\n                    {userMenu.onSettings && (\n                      <button\n                        onClick={() => {\n                          userMenu.onSettings?.();\n                          setUserMenuOpen(false);\n                        }}\n                        style={{\n                          width: '100%',\n                          padding: '10px 16px',\n                          backgroundColor: 'transparent',\n                          border: 'none',\n                          textAlign: 'left',\n                          fontSize: '14px',\n                          color: '#374151',\n                          cursor: 'pointer',\n                          fontFamily: 'Inter, sans-serif',\n                        }}\n                        onMouseEnter={(e) => {\n                          e.currentTarget.style.backgroundColor = '#f9fafb';\n                        }}\n                        onMouseLeave={(e) => {\n                          e.currentTarget.style.backgroundColor = 'transparent';\n                        }}\n                      >\n                        Settings\n                      </button>\n                    )}\n                    {(userMenu.onProfile || userMenu.onSettings) && userMenu.onLogout && (\n                      <div style={{ height: '1px', backgroundColor: '#e5e7eb', margin: '4px 0' }} />\n                    )}\n                    {userMenu.onLogout && (\n                      <button\n                        onClick={() => {\n                          userMenu.onLogout?.();\n                          setUserMenuOpen(false);\n                        }}\n                        style={{\n                          width: '100%',\n                          padding: '10px 16px',\n                          backgroundColor: 'transparent',\n                          border: 'none',\n                          textAlign: 'left',\n                          fontSize: '14px',\n                          color: '#ef4444',\n                          cursor: 'pointer',\n                          fontFamily: 'Inter, sans-serif',\n                        }}\n                        onMouseEnter={(e) => {\n                          e.currentTarget.style.backgroundColor = '#fef2f2';\n                        }}\n                        onMouseLeave={(e) => {\n                          e.currentTarget.style.backgroundColor = 'transparent';\n                        }}\n                      >\n                        Logout\n                      </button>\n                    )}\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile menu */}\n      {withBurger && mobileMenuOpen && (\n        <div\n          className=\"mobile-menu\"\n          style={{\n            position: 'fixed',\n            top: `${height}px`,\n            left: 0,\n            right: 0,\n            backgroundColor: 'white',\n            borderBottom: '1px solid #e5e7eb',\n            boxShadow: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n            zIndex: 999,\n            padding: '8px',\n          }}\n        >\n          {items.map((item, index) => (\n            <button\n              key={index}\n              className={`mobile-menu-item ${item.active ? 'active' : ''}`}\n              onClick={() => {\n                item.onClick?.();\n                handleToggle();\n              }}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '12px',\n                width: '100%',\n                padding: '12px 16px',\n                backgroundColor: item.active ? '#f3f4f6' : 'transparent',\n                border: 'none',\n                borderRadius: '6px',\n                color: item.active ? '#0a0e1b' : '#6b7280',\n                fontSize: '14px',\n                fontWeight: item.active ? '500' : '400',\n                cursor: 'pointer',\n                transition: 'all 0.2s',\n                textAlign: 'left',\n                fontFamily: 'Inter, sans-serif',\n              }}\n            >\n              {item.icon && <span>{item.icon}</span>}\n              <span>{item.label}</span>\n              {item.badge && (\n                <Badge \n                  variant=\"filled\" \n                  size=\"sm\"\n                  style={{ marginLeft: 'auto' }}\n                >\n                  {item.badge}\n                </Badge>\n              )}\n            </button>\n          ))}\n        </div>\n      )}\n\n      <style>{`\n        @media (max-width: 768px) {\n          .burger-button {\n            display: flex !important;\n          }\n          .desktop-only {\n            display: none !important;\n          }\n        }\n      `}</style>\n    </>\n  );\n};","import React from 'react';\nimport { Text } from './Text';\nimport { Button } from './Button';\nimport { Badge } from './Badge';\nimport { Group } from './Flex';\nimport { Avatar } from './Avatar';\nimport Icons from './Icons';\nimport './card.css';\n\nexport interface CardAction {\n  label: string;\n  onClick?: () => void;\n  icon?: React.ReactNode;\n  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';\n  color?: string;\n  disabled?: boolean;\n}\n\nexport interface CardProps {\n  /** Card content */\n  children: React.ReactNode;\n  /** Optional header content */\n  header?: React.ReactNode;\n  /** Card title */\n  title?: string;\n  /** Card subtitle or description */\n  subtitle?: string;\n  /** Footer content */\n  footer?: React.ReactNode;\n  /** Image section at the top */\n  image?: string | React.ReactNode;\n  /** Badge in the header */\n  badge?: {\n    label: string;\n    variant?: 'primary' | 'secondary' | 'success' | 'warning' | 'error';\n  };\n  /** Action buttons */\n  actions?: CardAction[];\n  /** Card variant */\n  variant?: 'default' | 'elevated' | 'outline' | 'subtle';\n  /** Card size */\n  size?: 'sm' | 'md' | 'lg';\n  /** Whether the card is interactive/clickable */\n  interactive?: boolean;\n  /** Click handler for the entire card */\n  onClick?: () => void;\n  /** Custom className */\n  className?: string;\n  /** Padding */\n  padding?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  /** Border radius */\n  radius?: 'xs' | 'sm' | 'md' | 'lg' | 'xl';\n  /** Custom styles */\n  style?: React.CSSProperties;\n  /** Whether to show dividers */\n  withDividers?: boolean;\n  /** Whether to show border */\n  withBorder?: boolean;\n  /** Loading state */\n  loading?: boolean;\n}\n\n/**\n * Card component for the Nexus Design System\n * \n * A flexible container component that can display content with optional header,\n * footer, actions, and various styling options.\n */\nexport const Card: React.FC<CardProps> = ({\n  children,\n  header,\n  title,\n  subtitle,\n  footer,\n  image,\n  badge,\n  actions = [],\n  variant = 'default',\n  size = 'md',\n  interactive = false,\n  onClick,\n  className,\n  padding = 'md',\n  radius = 'md',\n  style,\n  withDividers = false,\n  withBorder = true,\n  loading = false,\n  ...props\n}) => {\n  const hasHeader = header || title || subtitle || badge || actions.length > 0;\n  \n  const cardClassName = [\n    'nexus-card',\n    `nexus-card--${variant}`,\n    `nexus-card--${size}`,\n    `nexus-card--radius-${radius}`,\n    interactive || onClick ? 'nexus-card--interactive' : '',\n    withBorder ? 'nexus-card--with-border' : '',\n    loading ? 'nexus-card--loading' : '',\n    className || ''\n  ].filter(Boolean).join(' ');\n\n  return (\n    <div\n      className={cardClassName}\n      style={style}\n      onClick={onClick}\n      role={onClick ? 'button' : undefined}\n      tabIndex={onClick ? 0 : undefined}\n      onKeyDown={onClick ? (e) => {\n        if (e.key === 'Enter' || e.key === ' ') {\n          e.preventDefault();\n          onClick();\n        }\n      } : undefined}\n      {...props}\n    >\n      {/* Image Section */}\n      {image && (\n        <div className=\"nexus-card__image\">\n          {typeof image === 'string' ? (\n            <img src={image} alt=\"\" />\n          ) : (\n            image\n          )}\n        </div>\n      )}\n\n      {/* Header Section */}\n      {hasHeader && (\n        <>\n          <div className={`nexus-card__header nexus-card__section--${padding}`}>\n            {header ? (\n              header\n            ) : (\n              <Group justify=\"space-between\" align=\"flex-start\">\n                <div className=\"nexus-card__header-content\">\n                  <Group gap=\"sm\" align=\"center\" wrap=\"wrap\">\n                    {title && (\n                      <Text className=\"nexus-card__title\" weight=\"semibold\" size={size === 'sm' ? 'md' : size === 'lg' ? 'lg' : 'md'}>\n                        {title}\n                      </Text>\n                    )}\n                    {badge && (\n                      <Badge\n                        variant={badge.variant || 'secondary'}\n                        size=\"sm\"\n                        className=\"nexus-card__badge\"\n                      >\n                        {badge.label}\n                      </Badge>\n                    )}\n                  </Group>\n                  {subtitle && (\n                    <Text className=\"nexus-card__subtitle\" size=\"sm\" color=\"secondary\">\n                      {subtitle}\n                    </Text>\n                  )}\n                </div>\n                \n                {actions.length > 0 && (\n                  <Group gap=\"xs\">\n                    {actions.map((action, index) => (\n                      <Button\n                        key={index}\n                        variant={action.variant || 'ghost'}\n                        size=\"sm\"\n                        onClick={action.onClick}\n                        disabled={action.disabled}\n                        className=\"nexus-card__action\"\n                        aria-label={action.label}\n                      >\n                        {action.icon || <Icons name=\"more-horizontal\" size=\"small\" />}\n                      </Button>\n                    ))}\n                  </Group>\n                )}\n              </Group>\n            )}\n          </div>\n          {withDividers && <div className=\"nexus-card__divider\" />}\n        </>\n      )}\n\n      {/* Content Section */}\n      <div className={`nexus-card__content nexus-card__section--${padding}`}>\n        {children}\n      </div>\n\n      {/* Footer Section */}\n      {footer && (\n        <>\n          {withDividers && <div className=\"nexus-card__divider\" />}\n          <div className={`nexus-card__footer nexus-card__section--${padding}`}>\n            {footer}\n          </div>\n        </>\n      )}\n\n      {/* Loading overlay */}\n      {loading && (\n        <div className=\"nexus-card__loading-overlay\">\n          <Icons name=\"loader\" size=\"medium\" className=\"nexus-card__loading-spinner\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nexport interface ContainerProps {\n  /** Container content */\n  children: React.ReactNode;\n  /** Container size - affects max-width */\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | number;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\nconst sizeMap = {\n  xs: '576px',\n  sm: '768px', \n  md: '992px',\n  lg: '1200px',\n  xl: '1400px',\n};\n\n/**\n * Container component provides a responsive wrapper with predefined max-widths.\n * It centers content and provides consistent spacing across different screen sizes.\n * \n * @example\n * ```tsx\n * <Container size=\"lg\">\n *   <h1>Page Content</h1>\n * </Container>\n * ```\n */\nexport const Container = React.forwardRef<HTMLDivElement, ContainerProps>(\n  ({ children, size = 'md', className = '', style, 'data-testid': dataTestId, ...props }, ref) => {\n    const maxWidth = typeof size === 'number' ? `${size}px` : sizeMap[size];\n    \n    const containerStyle: React.CSSProperties = {\n      width: '100%',\n      maxWidth,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      paddingLeft: '16px',\n      paddingRight: '16px',\n      ...style,\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`container ${className}`}\n        style={containerStyle}\n        data-testid={dataTestId}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nContainer.displayName = 'Container';","import React from 'react';\nimport { Container } from './Container';\nimport { Stack, Group } from './Flex';\nimport './pagelayout.css';\n\nexport interface BreadcrumbItem {\n  label: string;\n  href?: string;\n  onClick?: () => void;\n}\n\nexport interface PageHeaderProps {\n  /** Page title */\n  title: string;\n  /** Page subtitle or description */\n  subtitle?: string;\n  /** Breadcrumb navigation */\n  breadcrumbs?: BreadcrumbItem[];\n  /** Action buttons or components */\n  actions?: React.ReactNode;\n  /** Custom className */\n  className?: string;\n}\n\nexport interface PageLayoutProps {\n  /** Page content */\n  children: React.ReactNode;\n  /** Header configuration */\n  header?: PageHeaderProps;\n  /** Navigation component */\n  navbar?: React.ReactNode;\n  /** Sidebar component */\n  aside?: React.ReactNode;\n  /** Footer component */\n  footer?: React.ReactNode;\n  /** Container size for content */\n  containerSize?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | number;\n  /** Background color */\n  backgroundColor?: string;\n  /** Custom className */\n  className?: string;\n  /** Custom styles */\n  style?: React.CSSProperties;\n}\n\n/**\n * PageHeader component for page titles and breadcrumbs\n */\nexport const PageHeader: React.FC<PageHeaderProps> = ({\n  title,\n  subtitle,\n  breadcrumbs,\n  actions,\n  className = '',\n}) => {\n  return (\n    <div\n      className={`page-header ${className}`}\n      style={{\n        padding: '24px 0',\n        backgroundColor: 'white',\n        borderBottom: '1px solid #e5e7eb',\n      }}\n    >\n      <Container size=\"xl\">\n        <Stack gap=\"16px\">\n          {breadcrumbs && breadcrumbs.length > 0 && (\n            <nav aria-label=\"Breadcrumb\">\n              <ol\n                style={{\n                  display: 'flex',\n                  gap: '8px',\n                  listStyle: 'none',\n                  margin: 0,\n                  padding: 0,\n                  fontSize: '14px',\n                  fontFamily: 'Inter, sans-serif',\n                }}\n              >\n                {breadcrumbs.map((item, index) => (\n                  <li key={index} style={{ display: 'flex', alignItems: 'center', gap: '8px' }}>\n                    {index > 0 && (\n                      <span style={{ color: '#9ca3af' }}>/</span>\n                    )}\n                    {item.href || item.onClick ? (\n                      <a\n                        href={item.href}\n                        onClick={item.onClick}\n                        style={{\n                          color: '#6b7280',\n                          textDecoration: 'none',\n                          cursor: 'pointer',\n                          transition: 'color 0.2s',\n                        }}\n                        onMouseEnter={(e) => {\n                          e.currentTarget.style.color = '#374151';\n                        }}\n                        onMouseLeave={(e) => {\n                          e.currentTarget.style.color = '#6b7280';\n                        }}\n                      >\n                        {item.label}\n                      </a>\n                    ) : (\n                      <span style={{ color: '#374151', fontWeight: '500' }}>\n                        {item.label}\n                      </span>\n                    )}\n                  </li>\n                ))}\n              </ol>\n            </nav>\n          )}\n          \n          <Group justify=\"space-between\" align=\"flex-start\">\n            <div>\n              <h1 \n                style={{ \n                  margin: 0, \n                  fontSize: '32px', \n                  fontWeight: '700',\n                  color: '#111827',\n                  fontFamily: 'Inter, sans-serif',\n                }}\n              >\n                {title}\n              </h1>\n              {subtitle && (\n                <p \n                  style={{ \n                    margin: '8px 0 0 0', \n                    fontSize: '16px',\n                    color: '#6b7280',\n                    fontFamily: 'Inter, sans-serif',\n                  }}\n                >\n                  {subtitle}\n                </p>\n              )}\n            </div>\n            {actions && (\n              <div>{actions}</div>\n            )}\n          </Group>\n        </Stack>\n      </Container>\n    </div>\n  );\n};\n\n/**\n * PageContainer component for wrapping page content\n */\nexport interface PageContainerProps {\n  children: React.ReactNode;\n  size?: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | number;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const PageContainer: React.FC<PageContainerProps> = ({\n  children,\n  size = 'xl',\n  className = '',\n  style,\n}) => {\n  return (\n    <Container size={size} className={`page-container ${className}`} style={style}>\n      {children}\n    </Container>\n  );\n};\n\n/**\n * PageContent component for main content area\n */\nexport interface PageContentProps {\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport const PageContent: React.FC<PageContentProps> = ({\n  children,\n  className = '',\n  style,\n}) => {\n  return (\n    <div \n      className={`page-content ${className}`}\n      style={{\n        padding: '32px 0',\n        ...style,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\n/**\n * PageLayout component for complete page structure\n */\nexport const PageLayout: React.FC<PageLayoutProps> = ({\n  children,\n  header,\n  navbar,\n  aside,\n  footer,\n  containerSize = 'xl',\n  backgroundColor = '#f9fafb',\n  className = '',\n  style,\n}) => {\n  const hasAside = Boolean(aside);\n  \n  return (\n    <div\n      className={`page-layout ${className}`}\n      style={{\n        minHeight: '100vh',\n        backgroundColor,\n        display: 'flex',\n        flexDirection: 'column',\n        ...style,\n      }}\n    >\n      {navbar && (\n        <div className=\"page-layout-navbar\">\n          {navbar}\n        </div>\n      )}\n      \n      {header && <PageHeader {...header} />}\n      \n      <div\n        className=\"page-layout-body\"\n        style={{\n          flex: 1,\n          display: 'flex',\n        }}\n      >\n        {aside && (\n          <aside className=\"page-layout-aside\">\n            {aside}\n          </aside>\n        )}\n        \n        <main\n          className=\"page-layout-main\"\n          style={{\n            flex: 1,\n            padding: '32px 0',\n          }}\n        >\n          <Container size={containerSize}>\n            {children}\n          </Container>\n        </main>\n      </div>\n      \n      {footer && (\n        <footer\n          className=\"page-layout-footer\"\n          style={{\n            backgroundColor: 'white',\n            borderTop: '1px solid #e5e7eb',\n            padding: '24px 0',\n          }}\n        >\n          <Container size={containerSize}>\n            {footer}\n          </Container>\n        </footer>\n      )}\n    </div>\n  );\n};","import React, { useState } from 'react';\nimport { Stack, Group } from './Flex';\nimport { Badge } from './Badge';\nimport './sidebar.css';\n\nexport interface SidebarItem {\n  label: string;\n  icon?: React.ReactNode;\n  href?: string;\n  onClick?: () => void;\n  active?: boolean;\n  badge?: string | number;\n  children?: SidebarItem[];\n  disabled?: boolean;\n}\n\nexport interface SidebarSection {\n  label?: string;\n  items: SidebarItem[];\n}\n\nexport interface SidebarUserProps {\n  name: string;\n  email?: string;\n  avatar?: string;\n  role?: string;\n  onClick?: () => void;\n}\n\nexport interface SidebarProps {\n  /** Sidebar sections */\n  sections?: SidebarSection[];\n  /** Flat list of sidebar items (alternative to sections) */\n  items?: SidebarItem[];\n  /** User information at the bottom */\n  user?: SidebarUserProps;\n  /** Sidebar header content */\n  header?: React.ReactNode;\n  /** Sidebar footer content */\n  footer?: React.ReactNode;\n  /** Sidebar width */\n  width?: number;\n  /** Background color */\n  backgroundColor?: string;\n  /** Border color */\n  borderColor?: string;\n  /** Additional CSS classes */\n  className?: string;\n  /** Additional styles */\n  style?: React.CSSProperties;\n}\n\n/**\n * Sidebar component for navigation\n */\nexport const Sidebar: React.FC<SidebarProps> = ({\n  sections,\n  items,\n  user,\n  header,\n  footer,\n  width = 260,\n  backgroundColor = '#ffffff',\n  borderColor = '#e5e7eb',\n  className = '',\n  style,\n}) => {\n  const [expandedItems, setExpandedItems] = useState<Set<string>>(new Set());\n\n  const toggleExpanded = (label: string) => {\n    const newExpanded = new Set(expandedItems);\n    if (newExpanded.has(label)) {\n      newExpanded.delete(label);\n    } else {\n      newExpanded.add(label);\n    }\n    setExpandedItems(newExpanded);\n  };\n\n  const renderItem = (item: SidebarItem, depth = 0) => {\n    const hasChildren = item.children && item.children.length > 0;\n    const isExpanded = expandedItems.has(item.label);\n\n    return (\n      <div key={item.label}>\n        <button\n          className={`sidebar-item ${item.active ? 'active' : ''} ${item.disabled ? 'disabled' : ''}`}\n          onClick={() => {\n            if (hasChildren) {\n              toggleExpanded(item.label);\n            } else if (!item.disabled) {\n              item.onClick?.();\n            }\n          }}\n          disabled={item.disabled}\n          style={{\n            width: '100%',\n            display: 'flex',\n            alignItems: 'center',\n            gap: '12px',\n            padding: `8px ${16 + depth * 16}px`,\n            backgroundColor: item.active ? '#f3f4f6' : 'transparent',\n            border: 'none',\n            borderRadius: '6px',\n            color: item.disabled ? '#9ca3af' : item.active ? '#0a0e1b' : '#6b7280',\n            fontSize: '14px',\n            fontWeight: item.active ? '500' : '400',\n            cursor: item.disabled ? 'not-allowed' : 'pointer',\n            transition: 'all 0.2s',\n            textAlign: 'left',\n            fontFamily: 'Inter, sans-serif',\n          }}\n          onMouseEnter={(e) => {\n            if (!item.active && !item.disabled) {\n              e.currentTarget.style.backgroundColor = '#f9fafb';\n              e.currentTarget.style.color = '#374151';\n            }\n          }}\n          onMouseLeave={(e) => {\n            if (!item.active && !item.disabled) {\n              e.currentTarget.style.backgroundColor = 'transparent';\n              e.currentTarget.style.color = '#6b7280';\n            }\n          }}\n        >\n          {item.icon && <span style={{ display: 'flex', alignItems: 'center' }}>{item.icon}</span>}\n          <span style={{ flex: 1 }}>{item.label}</span>\n          {item.badge && (\n            <Badge \n              variant=\"filled\" \n              size=\"sm\"\n            >\n              {item.badge}\n            </Badge>\n          )}\n          {hasChildren && (\n            <svg\n              width=\"16\"\n              height=\"16\"\n              viewBox=\"0 0 16 16\"\n              fill=\"none\"\n              style={{\n                transform: isExpanded ? 'rotate(90deg)' : 'rotate(0)',\n                transition: 'transform 0.2s',\n              }}\n            >\n              <path\n                d=\"M6 4L10 8L6 12\"\n                stroke=\"currentColor\"\n                strokeWidth=\"2\"\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n              />\n            </svg>\n          )}\n        </button>\n        \n        {hasChildren && isExpanded && (\n          <div style={{ marginTop: '4px' }}>\n            {item.children.map((child) => renderItem(child, depth + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderSection = (section: SidebarSection, index: number) => (\n    <div key={index} style={{ marginBottom: '24px' }}>\n      {section.label && (\n        <div\n          style={{\n            padding: '8px 16px',\n            fontSize: '12px',\n            fontWeight: '600',\n            color: '#9ca3af',\n            textTransform: 'uppercase',\n            letterSpacing: '0.05em',\n            fontFamily: 'Inter, sans-serif',\n          }}\n        >\n          {section.label}\n        </div>\n      )}\n      <Stack gap=\"4px\">\n        {section.items.map((item) => renderItem(item))}\n      </Stack>\n    </div>\n  );\n\n  return (\n    <aside\n      className={`sidebar ${className}`}\n      style={{\n        width: `${width}px`,\n        height: '100%',\n        backgroundColor,\n        borderRight: `1px solid ${borderColor}`,\n        display: 'flex',\n        flexDirection: 'column',\n        ...style,\n      }}\n    >\n      {header && (\n        <div className=\"sidebar-header\" style={{ padding: '16px', borderBottom: `1px solid ${borderColor}` }}>\n          {header}\n        </div>\n      )}\n\n      <div\n        className=\"sidebar-content\"\n        style={{\n          flex: 1,\n          overflowY: 'auto',\n          padding: '16px',\n        }}\n      >\n        {sections && sections.map((section, index) => renderSection(section, index))}\n        {items && (\n          <Stack gap=\"4px\">\n            {items.map((item) => renderItem(item))}\n          </Stack>\n        )}\n      </div>\n\n      {user && (\n        <div\n          className=\"sidebar-user\"\n          style={{\n            padding: '16px',\n            borderTop: `1px solid ${borderColor}`,\n          }}\n        >\n          <button\n            onClick={user.onClick}\n            style={{\n              width: '100%',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '12px',\n              padding: '8px',\n              backgroundColor: 'transparent',\n              border: 'none',\n              borderRadius: '8px',\n              cursor: 'pointer',\n              transition: 'background-color 0.2s',\n            }}\n            onMouseEnter={(e) => {\n              e.currentTarget.style.backgroundColor = '#f9fafb';\n            }}\n            onMouseLeave={(e) => {\n              e.currentTarget.style.backgroundColor = 'transparent';\n            }}\n          >\n            {user.avatar ? (\n              <img\n                src={user.avatar}\n                alt={user.name}\n                style={{\n                  width: '40px',\n                  height: '40px',\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                }}\n              />\n            ) : (\n              <div\n                style={{\n                  width: '40px',\n                  height: '40px',\n                  borderRadius: '50%',\n                  backgroundColor: '#e5e7eb',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  fontSize: '16px',\n                  fontWeight: '600',\n                  color: '#6b7280',\n                }}\n              >\n                {user.name.charAt(0).toUpperCase()}\n              </div>\n            )}\n            <div style={{ flex: 1, textAlign: 'left' }}>\n              <div style={{ fontSize: '14px', fontWeight: '500', color: '#374151', fontFamily: 'Inter, sans-serif' }}>\n                {user.name}\n              </div>\n              {user.email && (\n                <div style={{ fontSize: '12px', color: '#6b7280', fontFamily: 'Inter, sans-serif' }}>\n                  {user.email}\n                </div>\n              )}\n              {user.role && (\n                <div style={{ fontSize: '11px', color: '#9ca3af', fontFamily: 'Inter, sans-serif', marginTop: '2px' }}>\n                  {user.role}\n                </div>\n              )}\n            </div>\n          </button>\n        </div>\n      )}\n\n      {footer && (\n        <div className=\"sidebar-footer\" style={{ padding: '16px', borderTop: `1px solid ${borderColor}` }}>\n          {footer}\n        </div>\n      )}\n    </aside>\n  );\n};\n\n// Drawer Sidebar Component\nexport interface DrawerSidebarProps extends SidebarProps {\n  /** Whether the drawer is opened */\n  opened: boolean;\n  /** Callback when drawer should close */\n  onClose: () => void;\n  /** Position of the drawer */\n  position?: 'left' | 'right';\n  /** Overlay background */\n  withOverlay?: boolean;\n}\n\n/**\n * Drawer-style sidebar for mobile\n */\nexport const DrawerSidebar: React.FC<DrawerSidebarProps> = ({\n  opened,\n  onClose,\n  position = 'left',\n  withOverlay = true,\n  width = 260,\n  ...sidebarProps\n}) => {\n  if (!opened) return null;\n\n  return (\n    <>\n      {withOverlay && (\n        <div\n          className=\"drawer-overlay\"\n          onClick={onClose}\n          style={{\n            position: 'fixed',\n            top: 0,\n            left: 0,\n            right: 0,\n            bottom: 0,\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\n            zIndex: 999,\n          }}\n        />\n      )}\n      <div\n        className=\"drawer-sidebar\"\n        style={{\n          position: 'fixed',\n          top: 0,\n          bottom: 0,\n          [position]: 0,\n          width: `${width}px`,\n          zIndex: 1000,\n          transform: opened ? 'translateX(0)' : position === 'left' ? 'translateX(-100%)' : 'translateX(100%)',\n          transition: 'transform 0.3s ease',\n        }}\n      >\n        <Sidebar width={width} {...sidebarProps} />\n      </div>\n    </>\n  );\n};","// Design system theme without Mantine\nexport const designSystemTheme = {\n  colors: {\n    primary: {\n      50: '#f9fafb',\n      100: '#f3f4f6',\n      200: '#e5e7eb',\n      300: '#d1d5db',\n      400: '#9ca3af',\n      500: '#6b7280',\n      600: '#4b5563',\n      700: '#374151',\n      800: '#1f2937',\n      900: '#111827',\n      950: '#030712',\n    },\n    neutral: {\n      0: '#ffffff',\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#e5e5e5',\n      300: '#d4d4d4',\n      400: '#a3a3a3',\n      500: '#737373',\n      600: '#525252',\n      700: '#404040',\n      800: '#262626',\n      900: '#171717',\n    },\n    success: {\n      50: '#ecfdf5',\n      100: '#d1fae5',\n      300: '#6ee7b7',\n      400: '#34d399',\n      500: '#10b981',\n      600: '#059669',\n      700: '#047857',\n    },\n    warning: {\n      50: '#fff8f5',\n      100: '#fff0e6',\n      300: '#ffc4a3',\n      400: '#ffa574',\n      500: '#ff8a4c',\n      600: '#e8b4a2',\n      700: '#d4a194',\n    },\n    error: {\n      50: '#fff5f5',\n      100: '#ffe3e3',\n      300: '#ffa8a8',\n      400: '#ff8787',\n      500: '#ff6b6b',\n      600: '#fa5252',\n      700: '#e03131',\n    },\n    accent: {\n      50: '#ecfeff',\n      100: '#cffafe',\n      200: '#a5f3fc',\n      300: '#67e8f9',\n      400: '#22d3ee',\n      500: '#06b6d4',\n      600: '#00d9ff',\n      700: '#00b8d9',\n      800: '#0097a7',\n    },\n  },\n  \n  spacing: {\n    xs: '4px',\n    sm: '8px',\n    md: '16px',\n    lg: '24px',\n    xl: '32px',\n  },\n  \n  borderRadius: {\n    xs: '2px',\n    sm: '4px',\n    md: '8px',\n    lg: '12px',\n    xl: '16px',\n  },\n  \n  shadows: {\n    xs: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n    sm: '0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)',\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n  },\n  \n  typography: {\n    fontFamily: 'Inter, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, sans-serif',\n    fontSize: {\n      xs: '12px',\n      sm: '14px',\n      md: '16px',\n      lg: '18px',\n      xl: '20px',\n      '2xl': '24px',\n      '3xl': '30px',\n      '4xl': '36px',\n    },\n    fontWeight: {\n      normal: '400',\n      medium: '500',\n      semibold: '600',\n      bold: '700',\n    },\n  },\n  \n  breakpoints: {\n    sm: '576px',\n    md: '768px',\n    lg: '992px',\n    xl: '1200px',\n  },\n};","import React from 'react';\n\n// Grid Container Component\nexport interface GridProps {\n  /** Grid content - typically GridCol components */\n  children: React.ReactNode;\n  /** Gap between columns and rows */\n  gap?: number | string;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\n/**\n * Grid component provides a 12-column responsive grid system.\n * Use with GridCol components to create flexible layouts.\n * \n * @example\n * ```tsx\n * <Grid gap=\"md\">\n *   <GridCol span={6}>Half width</GridCol>\n *   <GridCol span={6}>Half width</GridCol>\n * </Grid>\n * ```\n */\nexport const Grid = React.forwardRef<HTMLDivElement, GridProps>(\n  ({ children, gap = '16px', className = '', style, 'data-testid': dataTestId, ...props }, ref) => {\n    const gridStyle: React.CSSProperties = {\n      display: 'grid',\n      gridTemplateColumns: 'repeat(12, 1fr)',\n      gap: typeof gap === 'number' ? `${gap}px` : gap,\n      ...style,\n    };\n\n    return (\n      <div\n        ref={ref}\n        className={`grid ${className}`}\n        style={gridStyle}\n        data-testid={dataTestId}\n        {...props}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nGrid.displayName = 'Grid';\n\n// Grid Column Component\nexport interface GridColProps {\n  /** Column content */\n  children: React.ReactNode;\n  /** Number of columns to span (1-12) or responsive object */\n  span?: number | { base?: number; sm?: number; md?: number; lg?: number; xl?: number };\n  /** Column offset */\n  offset?: number | { base?: number; sm?: number; md?: number; lg?: number; xl?: number };\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\n/**\n * GridCol component represents a column within a Grid.\n * Supports responsive spans and offsets.\n * \n * @example\n * ```tsx\n * <GridCol span={{ base: 12, md: 6, lg: 4 }}>\n *   Responsive column\n * </GridCol>\n * ```\n */\nexport const GridCol = React.forwardRef<HTMLDivElement, GridColProps>(\n  ({ children, span = 12, offset = 0, className = '', style, 'data-testid': dataTestId, ...props }, ref) => {\n    // Calculate grid column styles\n    const getGridColumn = (spanValue: number, offsetValue: number) => {\n      const start = offsetValue + 1;\n      const end = start + spanValue;\n      return `${start} / ${end}`;\n    };\n\n    // Handle responsive spans and offsets\n    const createResponsiveStyles = () => {\n      const styles: React.CSSProperties = {};\n      \n      if (typeof span === 'number' && typeof offset === 'number') {\n        styles.gridColumn = getGridColumn(span, offset);\n      } else {\n        // Handle responsive values\n        const spanObj = typeof span === 'object' ? span : { base: span };\n        const offsetObj = typeof offset === 'object' ? offset : { base: offset };\n        \n        // Base styles\n        const baseSpan = spanObj.base || 12;\n        const baseOffset = offsetObj.base || 0;\n        styles.gridColumn = getGridColumn(baseSpan, baseOffset);\n      }\n      \n      return styles;\n    };\n\n    const gridColStyle: React.CSSProperties = {\n      ...createResponsiveStyles(),\n      minWidth: 0, // Prevent overflow\n      ...style,\n    };\n\n    // Generate responsive CSS if needed\n    const responsiveCSS = React.useMemo(() => {\n      if (typeof span === 'object' || typeof offset === 'object') {\n        const spanObj = typeof span === 'object' ? span : {};\n        const offsetObj = typeof offset === 'object' ? offset : {};\n        \n        let css = '';\n        \n        // Responsive breakpoints\n        const breakpoints = {\n          sm: '576px',\n          md: '768px', \n          lg: '992px',\n          xl: '1200px',\n        };\n        \n        Object.entries(breakpoints).forEach(([key, value]) => {\n          const responsiveSpan = spanObj[key as keyof typeof spanObj];\n          const responsiveOffset = offsetObj[key as keyof typeof offsetObj];\n          \n          if (responsiveSpan !== undefined || responsiveOffset !== undefined) {\n            const finalSpan = responsiveSpan !== undefined ? responsiveSpan : (spanObj.base || 12);\n            const finalOffset = responsiveOffset !== undefined ? responsiveOffset : (offsetObj.base || 0);\n            \n            css += `\n              @media (min-width: ${value}) {\n                .grid-col-responsive {\n                  grid-column: ${getGridColumn(finalSpan, finalOffset)};\n                }\n              }\n            `;\n          }\n        });\n        \n        return css;\n      }\n      return '';\n    }, [span, offset]);\n\n    // Add responsive class if needed\n    const hasResponsive = typeof span === 'object' || typeof offset === 'object';\n    const finalClassName = hasResponsive \n      ? `grid-col grid-col-responsive ${className}`\n      : `grid-col ${className}`;\n\n    return (\n      <>\n        {responsiveCSS && (\n          <style dangerouslySetInnerHTML={{ __html: responsiveCSS }} />\n        )}\n        <div\n          ref={ref}\n          className={finalClassName}\n          style={gridColStyle}\n          data-testid={dataTestId}\n          {...props}\n        >\n          {children}\n        </div>\n      </>\n    );\n  }\n);\n\nGridCol.displayName = 'GridCol';","import React from 'react';\n\nexport interface SimpleGridProps {\n  /** Grid content */\n  children: React.ReactNode;\n  /** Number of columns or responsive columns object */\n  cols?: number | { base?: number; sm?: number; md?: number; lg?: number; xl?: number };\n  /** Gap between grid items */\n  spacing?: number | string;\n  /** Vertical gap (if different from spacing) */\n  verticalSpacing?: number | string;\n  /** Additional CSS classes */\n  className?: string;\n  /** Inline styles */\n  style?: React.CSSProperties;\n  /** Data test id for testing */\n  'data-testid'?: string;\n}\n\n/**\n * SimpleGrid component creates an auto-fitting grid with equal-width columns.\n * Much simpler than Grid - just specify number of columns and it handles the rest.\n * \n * @example\n * ```tsx\n * <SimpleGrid cols={{ base: 1, sm: 2, lg: 3 }} spacing=\"md\">\n *   <Card>Item 1</Card>\n *   <Card>Item 2</Card>\n *   <Card>Item 3</Card>\n * </SimpleGrid>\n * ```\n */\nexport const SimpleGrid = React.forwardRef<HTMLDivElement, SimpleGridProps>(\n  ({ \n    children, \n    cols = 1, \n    spacing = '16px', \n    verticalSpacing,\n    className = '', \n    style, \n    'data-testid': dataTestId, \n    ...props \n  }, ref) => {\n    \n    // Convert spacing values\n    const getSpacing = (value: number | string) => {\n      return typeof value === 'number' ? `${value}px` : value;\n    };\n\n    const horizontalSpacing = getSpacing(spacing);\n    const finalVerticalSpacing = verticalSpacing ? getSpacing(verticalSpacing) : horizontalSpacing;\n\n    // Generate responsive CSS\n    const responsiveCSS = React.useMemo(() => {\n      if (typeof cols === 'object') {\n        const breakpoints = {\n          base: '0px',\n          sm: '576px',\n          md: '768px', \n          lg: '992px',\n          xl: '1200px',\n        };\n        \n        let css = '';\n        \n        Object.entries(cols).forEach(([key, value]) => {\n          if (value !== undefined) {\n            const breakpoint = breakpoints[key as keyof typeof breakpoints];\n            const mediaQuery = key === 'base' \n              ? '' \n              : `@media (min-width: ${breakpoint})`;\n            \n            const rule = `\n              ${mediaQuery ? `${mediaQuery} {` : ''}\n                .simple-grid-responsive {\n                  grid-template-columns: repeat(${value}, 1fr);\n                }\n              ${mediaQuery ? '}' : ''}\n            `;\n            \n            css += rule;\n          }\n        });\n        \n        return css;\n      }\n      return '';\n    }, [cols]);\n\n    // Calculate grid template columns\n    const getGridColumns = () => {\n      if (typeof cols === 'number') {\n        return `repeat(${cols}, 1fr)`;\n      }\n      // For responsive, use base value as fallback\n      const baseCols = cols.base || 1;\n      return `repeat(${baseCols}, 1fr)`;\n    };\n\n    const simpleGridStyle: React.CSSProperties = {\n      display: 'grid',\n      gridTemplateColumns: getGridColumns(),\n      gap: `${finalVerticalSpacing} ${horizontalSpacing}`,\n      ...style,\n    };\n\n    // Add responsive class if needed\n    const hasResponsive = typeof cols === 'object';\n    const finalClassName = hasResponsive \n      ? `simple-grid simple-grid-responsive ${className}`\n      : `simple-grid ${className}`;\n\n    return (\n      <>\n        {responsiveCSS && (\n          <style dangerouslySetInnerHTML={{ __html: responsiveCSS }} />\n        )}\n        <div\n          ref={ref}\n          className={finalClassName}\n          style={simpleGridStyle}\n          data-testid={dataTestId}\n          {...props}\n        >\n          {children}\n        </div>\n      </>\n    );\n  }\n);\n\nSimpleGrid.displayName = 'SimpleGrid';"],"names":["CircleIcon","stroke","jsxs","jsx","Button","React","size","hierarchy","variant","icon","destructive","state","children","disabled","onClick","className","fullWidth","style","props","ref","getHierarchy","baseClasses","sizeClass","hierarchyClass","iconClass","destructiveClass","stateClass","classes","iconColor","isIconOnly","hasIcon","ArrowLeftIcon","PlusIcon","ArrowRightIcon","ButtonGroup","items","defaultIcons","item","index","isLast","buttonClasses","iconSize","spacingMap","Badge","color","mb","badgeStyle","colorClass","Component","MessageArrowIcon","BadgeGroup","message","badge","badgePosition","showMessageIcon","positionClass","badgeSize","badgeIcon","badgeElement","messageElement","messageWithIcon","Fragment","MailIcon","HelpIcon","AlertIcon","ChevronDownIcon","MastercardIcon","Input","type","error","label","placeholder","value","helpText","showHelpIcon","leadingText","dropdownValue","dropdownOptions","onChange","onDropdownChange","containerClasses","inputClasses","helpTextClasses","displayIcon","e","Textarea","rows","textareaClasses","DropdownHeader","title","subtitle","avatarSrc","avatarAlt","typeClass","DropdownItem","shortcut","active","DropdownDivider","Dropdown","isOpen","onClose","width","UserIcon","SearchIcon","ChevronUpIcon","CheckIcon","SelectOption","supportingText","isSelected","showCheck","SelectDropdown","options","selectedValue","onSelect","showIcons","option","Select","showLabel","onSearch","controlledIsOpen","onToggle","id","internalIsOpen","setInternalIsOpen","useState","searchText","setSearchText","selectRef","useRef","dropdownRef","selectedOption","filteredOptions","handleToggle","newIsOpen","handleSelect","optionValue","handleSearchChange","newSearchText","useEffect","handleClickOutside","event","handleKeyDown","getDisplayIcon","getDisplayText","getDisplaySupportingText","Toggle","checked","defaultChecked","showText","showSupportingText","onFocus","onBlur","ariaLabel","ariaDescribedBy","internalChecked","setInternalChecked","isControlled","checkedValue","toggleId","labelId","supportingTextId","handleClick","newChecked","checkedClass","disabledClass","textClass","toggleClasses","describedByIds","finalAriaDescribedBy","MinusIcon","Checkbox","indeterminate","name","required","componentId","useId","inputId","handleChange","inputRef","combinedRef","node","LayersIcon","ThreeLayersIcon","ZapIcon","CodepenIcon","SmileIcon","CheckIconMd","CheckboxInput","FeaturedIcon","iconComponents","CheckboxGroupItem","layout","onSelectionChange","CheckboxGroup","allowMultiple","selectedItems","setSelectedItems","handleItemSelectionChange","selected","newSelection","itemId","itemsWithSelection","TooltipArrow","direction","Tooltip","position","ProgressBar","max","showPercentage","labelText","height","backgroundColor","progressColor","animationDuration","onProgressChange","clampedValue","percentage","progressWidth","displayText","getTooltipPosition","progressBarWidth","tooltipWidth","progressPixels","progressBarClasses","progressBarStyle","progressStyle","SIZE_CONFIG","ProgressCircle","shape","percentageText","textColor","labelColor","config","diameter","strokeWidth","fontSize","labelFontSize","radius","circumference","center","strokeDasharray","strokeDashoffset","displayPercentage","getHalfCirclePath","isBackground","startAngle","endAngle","x1","y1","x2","y2","getProgressHalfCirclePath","progressAngle","largeArcFlag","progressCircleClasses","svgHeight","Slider","endValue","min","step","showLabels","labelFormat","val","handleSize","onSlideStart","onSlideEnd","ariaLabelledBy","isRange","isDragging","setIsDragging","startValue","setStartValue","endVal","setEndVal","trackRef","getValueFromPosition","useCallback","clientX","rect","rawValue","steppedValue","handleMouseDown","handle","handleMouseMove","newValue","handleMouseUp","handleTrackClick","startDistance","endDistance","sortedValues","a","b","delta","startPercent","endPercent","progressLeft","sliderClasses","CloseIcon","Modal","description","showCloseButton","closeOnBackdropClick","closeOnEscape","footer","headerContent","disableAnimation","onOpen","onAnimationComplete","zIndex","portalTarget","preventBodyScroll","modalRef","backdropRef","previousFocusRef","handleEscapeKey","handleBackdropClick","originalOverflow","handleTabKey","focusableElements","firstElement","lastElement","modalClasses","modalContent","ReactDOM","ModalHeader","ModalTitle","ModalDescription","ModalContent","ModalFooter","align","DEFAULT_COLORS","Chart","series","xAxisLabel","yAxisLabel","showGrid","showLegend","showAxes","loading","colors","animate","responsive","onDataPointClick","onDataPointHover","chartRef","hoveredPoint","setHoveredPoint","variantClass","chartData","useMemo","allDataPoints","s","yValues","d","xValues","yMin","yMax","yRange","renderChartElements","chartWidth","chartHeight","seriesData","seriesIndex","seriesColor","renderBarSeries","renderLineSeries","renderAreaSeries","barWidth","point","pointIndex","barHeight","xPos","points","x","y","areaPoints","renderLegend","renderAxes","renderTooltip","RadarChart","legendPosition","maxValue","levels","showScaleLabels","showAxisLabels","hoveredSeries","setHoveredSeries","legendClass","allAxes","allValues","calculatedMaxValue","normalizedSeries","axis","generateScaleLevels","centerX","centerY","maxRadius","_","i","level","axisIndex","angle","generateAxisRays","generateSeriesPaths","normalizedValue","scaleLevels","axisRays","seriesPaths","renderScaleLevels","renderAxisRays","ray","renderScaleLabels","renderAxisLabels","renderSeries","calculatePieSlices","data","total","sum","currentAngle","createArcPath","innerRadius","outerRadius","startAngleRad","endAngleRad","x3","y3","x4","y4","LegendItem","Legend","PieChart","centerContent","strokeColor","defaultInnerRadius","defaultOuterRadius","finalInnerRadius","finalOuterRadius","slices","legendItems","slice","path","ActivityRing","progress","isVertical","ActivityChart","normalizedData","dataWithColors","_a","_b","_c","_d","_e","_f","PaginationDots","currentPage","totalPages","framed","onPageChange","handleDotClick","page","isActive","PaginationButton","isEllipsis","NavigationButton","maxPageButtons","onPrevious","onNext","pages","generatePageNumbers","maxButtons","halfMax","Pagination","breakpoint","alignment","showNavigation","showPageNumbers","showPageInfo","labels","dotsConfig","previous","next","pageInfo","handlePageChange","handlePrevious","handleNext","navType","ChevronLeftIcon","ChevronRightIcon","CarouselArrow","theme","Icon","CarouselDots","currentSlide","totalSlides","onDotClick","Carousel","slides","autoPlay","showArrows","showDots","altTexts","onSlideChange","setCurrentSlide","isTransitioning","setIsTransitioning","intervalRef","touchStartX","touchEndX","goToSlide","goToPrevious","prevIndex","goToNext","nextIndex","handleTouchStart","handleTouchMove","handleTouchEnd","deltaX","renderSlide","slide","FileIcon","MessageReactionComponent","emoji","count","reacted","TypingIndicator","sender","Message","content","timestamp","attachment","reactions","showReactions","onReactionClick","onAttachmentClick","messageClasses","handleAttachmentClick","handleReactionClick","renderMessageContent","reaction","SendIcon","ChatTabs","activeTab","participantCount","onTabChange","MessageInput","onSendMessage","setMessage","handleSubmit","handleKeyPress","DateDivider","date","ChatInterface","messages","currentUser","isLoading","messagesEndRef","messagesContainerRef","handleSendMessage","handleTabChange","tab","groupedMessages","groups","messageDate","lastGroup","formatDate","dateString","today","yesterday","group","groupIndex","messageIndex","EditIcon","DeleteIcon","SortIcon","Table","columns","actions","hoverable","selectable","selectedRows","rowKey","emptyMessage","caption","stickyHeader","sortConfig","onSort","tableClasses","handleSort","columnKey","newDirection","handleSelectAll","allKeys","row","isAllSelected","key","handleRowSelect","renderCell","column","rowIndex","isIndeterminate","input","rowId","action","isDisabled","Typography","weight","as","Heading","variantMap","asMap","Caption","sizeMap","weightMap","Text","fw","c","component","fontWeight","marginBottom","textStyle","radiusMap","fontSizeMap","Avatar","src","alt","avatarSize","borderRadius","avatarStyle","imageStyle","iconPaths","Icons","commonProps","strokeProps","paths","renderPaths","Flex","justify","wrap","gap","dataTestId","flexStyle","Group","groupStyle","Stack","stackStyle","Navigation","brand","rightSection","userMenu","withBurger","opened","userMenuOpen","setUserMenuOpen","mobileMenuOpen","setMobileMenuOpen","Card","header","image","interactive","padding","withDividers","withBorder","hasHeader","cardClassName","Container","containerStyle","PageHeader","breadcrumbs","PageContainer","PageContent","PageLayout","navbar","aside","containerSize","Sidebar","sections","user","borderColor","expandedItems","setExpandedItems","toggleExpanded","newExpanded","renderItem","depth","hasChildren","isExpanded","child","renderSection","section","DrawerSidebar","withOverlay","sidebarProps","designSystemTheme","Grid","gridStyle","GridCol","span","offset","getGridColumn","spanValue","offsetValue","start","end","gridColStyle","styles","spanObj","offsetObj","baseSpan","baseOffset","responsiveCSS","css","responsiveSpan","responsiveOffset","finalSpan","finalOffset","finalClassName","SimpleGrid","cols","spacing","verticalSpacing","getSpacing","horizontalSpacing","finalVerticalSpacing","breakpoints","mediaQuery","rule","simpleGridStyle"],"mappings":"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"}