import{j as a}from"./jsx-runtime-DiklIkkE.js";import{R as f}from"./index-DRjF_FHU.js";const h=({size:n})=>{const e="12";return a.jsx("svg",{width:e,height:e,viewBox:"0 0 12 12",fill:"none",xmlns:"http://www.w3.org/2000/svg",className:"nexus-badge__icon",children:a.jsx("path",{d:"M2.5 6H9.5M9.5 6L6 2.5M9.5 6L6 9.5",stroke:"currentColor",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round"})})},r=f.forwardRef(({children:n,size:e="sm",color:i="primary",icon:t="none",className:o,onClick:s,...l},d)=>{const c="nexus-badge",u=`nexus-badge--size-${e}`,m=`nexus-badge--color-${i}`,p=t!=="none"?`nexus-badge--icon-${t}`:"",g=[c,u,m,p,s?"nexus-badge--interactive":"",o].filter(Boolean).join(" "),v=s?"button":"span";return a.jsxs(v,{ref:d,className:g,onClick:s,type:s?"button":void 0,...l,children:[a.jsx("span",{className:"nexus-badge__text",children:n}),t==="trailing"&&a.jsx(h,{size:e})]})});r.displayName="Badge";r.__docgenInfo={description:"Badge component for status indicators and labels",methods:[],displayName:"Badge",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content to display inside the badge"},size:{required:!1,tsType:{name:"union",raw:"'sm' | 'md'",elements:[{name:"literal",value:"'sm'"},{name:"literal",value:"'md'"}]},description:"Badge size variant",defaultValue:{value:"'sm'",computed:!1}},color:{required:!1,tsType:{name:"union",raw:"'primary' | 'gray' | 'error' | 'warning' | 'success'",elements:[{name:"literal",value:"'primary'"},{name:"literal",value:"'gray'"},{name:"literal",value:"'error'"},{name:"literal",value:"'warning'"},{name:"literal",value:"'success'"}]},description:"Badge color theme",defaultValue:{value:"'primary'",computed:!1}},icon:{required:!1,tsType:{name:"union",raw:"'none' | 'trailing'",elements:[{name:"literal",value:"'none'"},{name:"literal",value:"'trailing'"}]},description:"Whether to show an icon and its position",defaultValue:{value:"'none'",computed:!1}},className:{required:!1,tsType:{name:"string"},description:"Additional CSS classes"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Click handler for interactive badges"}}};export{r as B};
